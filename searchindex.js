Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isinf","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isinf","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isinf","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isinf","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isinf","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isinf","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isinf.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isinf.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isinf.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isinf.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isinf.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isinf.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[796,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[350,0,0,"-"],creation_functions:[351,0,0,"-"],data_type_functions:[357,0,0,"-"],data_types:[361,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[352,2,1,""],ones:[353,2,1,""],ones_like:[354,2,1,""],tril:[355,2,1,""],zeros:[356,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[357,1,1,""],finfo:[359,2,1,""],iinfo:[360,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[357,3,1,""],bits:[357,3,1,""],eps:[357,3,1,""],max:[357,3,1,""],min:[357,3,1,""],smallest_normal:[357,3,1,""]},"ivy.functional.backends.numpy.core":{device:[403,0,0,"-"],general:[405,0,0,"-"],gradients:[437,0,0,"-"],image:[442,0,0,"-"],linear_algebra:[446,0,0,"-"],logic:[450,0,0,"-"],math:[451,0,0,"-"],random:[453,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[404,1,1,""],clear_mem_on_dev:[403,2,1,""],dev:[403,2,1,""],dev_from_str:[403,2,1,""],dev_to_str:[403,2,1,""],gpu_is_available:[403,2,1,""],num_gpus:[403,2,1,""],to_dev:[403,2,1,""],tpu_is_available:[403,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[404,3,1,""],start:[404,3,1,""],stop:[404,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[405,2,1,""],arange:[406,2,1,""],argmin:[407,2,1,""],array:[408,2,1,""],asarray:[405,2,1,""],astype:[405,2,1,""],cast:[409,2,1,""],clip:[405,2,1,""],compile:[410,2,1,""],concatenate:[411,2,1,""],constant_pad:[405,2,1,""],container_types:[405,2,1,""],copy_array:[405,2,1,""],cumprod:[412,2,1,""],current_framework_str:[405,2,1,""],dtype:[413,2,1,""],dtype_bits:[414,2,1,""],dtype_from_str:[415,2,1,""],dtype_to_str:[416,2,1,""],floor:[405,2,1,""],floormod:[405,2,1,""],full:[417,2,1,""],gather:[418,2,1,""],gather_nd:[419,2,1,""],get_num_dims:[405,2,1,""],identity:[420,2,1,""],indices_where:[421,2,1,""],inplace_arrays_supported:[405,2,1,""],inplace_decrement:[422,2,1,""],inplace_increment:[423,2,1,""],inplace_update:[424,2,1,""],inplace_variables_supported:[405,2,1,""],is_array:[425,2,1,""],linear_resample:[426,2,1,""],linspace:[427,2,1,""],logspace:[428,2,1,""],matmul:[405,2,1,""],meshgrid:[405,2,1,""],multiprocessing:[405,2,1,""],one_hot:[429,2,1,""],round:[405,2,1,""],scatter_flat:[430,2,1,""],scatter_nd:[431,2,1,""],shape:[405,2,1,""],split:[432,2,1,""],squeeze:[433,2,1,""],to_list:[405,2,1,""],to_numpy:[405,2,1,""],to_scalar:[405,2,1,""],transpose:[434,2,1,""],unstack:[435,2,1,""],where:[405,2,1,""],zero_pad:[405,2,1,""],zeros_like:[436,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[438,2,1,""],is_variable:[439,2,1,""],stop_gradient:[440,2,1,""],variable:[441,2,1,""],variable_data:[437,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[443,2,1,""],gradient_image:[444,2,1,""],stack_images:[445,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[447,2,1,""],qr:[448,2,1,""],vector_to_skew_symmetric_matrix:[449,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[452,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[454,2,1,""],randint:[453,2,1,""],random_normal:[453,2,1,""],random_uniform:[453,2,1,""],seed:[453,2,1,""],shuffle:[453,2,1,""]},"ivy.functional.ivy":{array_api:[797,0,0,"-"],core:[847,0,0,"-"],nn:[1141,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[798,0,0,"-"],creation_functions:[799,0,0,"-"],data_type_functions:[805,0,0,"-"],data_types:[808,0,0,"-"],elementwise_functions:[809,0,0,"-"],function_and_method_signatures:[829,0,0,"-"],linear_algebra:[830,0,0,"-"],manipulation_functions:[835,0,0,"-"],searching_functions:[837,0,0,"-"],set_functions:[839,0,0,"-"],sorting_functions:[840,0,0,"-"],statistical_functions:[842,0,0,"-"],utility_functions:[844,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[798,4,1,""],nan:[798,4,1,""],pi:[798,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[800,2,1,""],ones:[801,2,1,""],ones_like:[802,2,1,""],tril:[803,2,1,""],zeros:[804,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[806,2,1,""],iinfo:[807,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[810,2,1,""],asinh:[811,2,1,""],bitwise_and:[812,2,1,""],ceil:[813,2,1,""],cos:[814,2,1,""],cosh:[815,2,1,""],isfinite:[816,2,1,""],isinf:[817,2,1,""],isnan:[818,2,1,""],less:[819,2,1,""],log10:[820,2,1,""],log1p:[821,2,1,""],log2:[822,2,1,""],logical_not:[823,2,1,""],logical_or:[824,2,1,""],negative:[825,2,1,""],sin:[826,2,1,""],sqrt:[827,2,1,""],tanh:[828,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[831,2,1,""],slodget:[832,2,1,""],svd:[833,2,1,""],vector_norm:[834,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[836,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[838,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[841,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[843,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[845,2,1,""],any:[846,2,1,""]},"ivy.functional.ivy.core":{compilation:[848,0,0,"-"],device:[850,0,0,"-"],dtype:[900,0,0,"-"],general:[924,0,0,"-"],gradients:[1018,0,0,"-"],image:[1034,0,0,"-"],linalg:[1041,0,0,"-"],logic:[1048,0,0,"-"],math:[1051,0,0,"-"],meta:[1065,0,0,"-"],multi_node:[1069,0,0,"-"],nest:[1113,0,0,"-"],random:[1125,0,0,"-"],reductions:[1132,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[849,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[850,1,1,""],DevClonedItem:[852,1,1,""],DevClonedIter:[853,1,1,""],DevClonedNest:[854,1,1,""],DevDistItem:[855,1,1,""],DevDistIter:[856,1,1,""],DevDistNest:[857,1,1,""],DevManager:[850,1,1,""],DevMapper:[859,1,1,""],DevMapperMultiProc:[860,1,1,""],MultiDev:[850,1,1,""],MultiDevItem:[862,1,1,""],MultiDevIter:[863,1,1,""],MultiDevNest:[864,1,1,""],Profiler:[865,1,1,""],clear_mem_on_dev:[866,2,1,""],default_device:[867,2,1,""],dev:[868,2,1,""],dev_clone:[869,2,1,""],dev_clone_array:[870,2,1,""],dev_clone_iter:[871,2,1,""],dev_clone_nest:[872,2,1,""],dev_dist:[873,2,1,""],dev_dist_array:[874,2,1,""],dev_dist_iter:[875,2,1,""],dev_dist_nest:[876,2,1,""],dev_from_str:[877,2,1,""],dev_to_str:[878,2,1,""],dev_unify:[879,2,1,""],dev_unify_array:[880,2,1,""],dev_unify_iter:[881,2,1,""],dev_unify_nest:[882,2,1,""],dev_util:[883,2,1,""],get_all_arrays_on_dev:[884,2,1,""],gpu_is_available:[885,2,1,""],num_arrays_on_dev:[886,2,1,""],num_cpu_cores:[887,2,1,""],num_gpus:[888,2,1,""],percent_used_mem_on_dev:[889,2,1,""],print_all_arrays_on_dev:[890,2,1,""],set_default_device:[891,2,1,""],set_split_factor:[892,2,1,""],split_factor:[893,2,1,""],split_func_call:[894,2,1,""],to_dev:[895,2,1,""],total_mem_on_dev:[896,2,1,""],tpu_is_available:[897,2,1,""],unset_default_device:[898,2,1,""],used_mem_on_dev:[899,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[850,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[850,3,1,""],da_tune_step:[850,3,1,""],dim_size:[850,3,1,""],ds_tune_step:[850,3,1,""],map:[850,3,1,""],repeated_config_check:[850,3,1,""],tune_step:[850,3,1,""],tuned:[850,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[859,3,1,""],map:[859,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[860,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[850,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[862,3,1,""],items:[862,3,1,""],keys:[862,3,1,""],shape:[862,3,1,""],values:[862,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[863,3,1,""],at_dev:[863,3,1,""],at_devs:[863,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[864,3,1,""],at_dev:[864,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[865,3,1,""],start:[865,3,1,""],stop:[865,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[900,1,1,""],DefaultFloatDtype:[900,1,1,""],DefaultIntDtype:[900,1,1,""],astype:[900,2,1,""],cast:[904,2,1,""],closest_valid_dtype:[905,2,1,""],convert_dtype:[906,2,1,""],default_dtype:[907,2,1,""],default_float_dtype:[908,2,1,""],default_int_dtype:[909,2,1,""],dtype:[910,2,1,""],dtype_bits:[911,2,1,""],dtype_from_str:[912,2,1,""],dtype_to_str:[913,2,1,""],invalid_dtype:[914,2,1,""],is_float_dtype:[915,2,1,""],is_int_dtype:[916,2,1,""],set_default_dtype:[917,2,1,""],set_default_float_dtype:[918,2,1,""],set_default_int_dtype:[919,2,1,""],unset_default_dtype:[920,2,1,""],unset_default_float_dtype:[921,2,1,""],unset_default_int_dtype:[922,2,1,""],valid_dtype:[923,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[900,3,1,""]},"ivy.functional.ivy.core.general":{"default":[947,2,1,""],abs:[925,2,1,""],all_equal:[926,2,1,""],arange:[927,2,1,""],arg_names:[928,2,1,""],argmin:[929,2,1,""],array:[930,2,1,""],array_equal:[931,2,1,""],arrays_equal:[932,2,1,""],asarray:[924,2,1,""],assert_supports_inplace:[933,2,1,""],broadcast_to:[934,2,1,""],cache_fn:[935,2,1,""],clip:[936,2,1,""],clip_matrix_norm:[937,2,1,""],clip_vector_norm:[938,2,1,""],concatenate:[939,2,1,""],constant_pad:[940,2,1,""],container_types:[941,2,1,""],copy_array:[942,2,1,""],cross:[943,2,1,""],cumprod:[944,2,1,""],cumsum:[945,2,1,""],current_framework_str:[946,2,1,""],einops_rearrange:[948,2,1,""],einops_reduce:[949,2,1,""],einops_repeat:[950,2,1,""],equal:[951,2,1,""],exists:[952,2,1,""],expand_dims:[953,2,1,""],floor:[954,2,1,""],floormod:[955,2,1,""],fourier_encode:[956,2,1,""],full:[957,2,1,""],gather:[958,2,1,""],gather_nd:[959,2,1,""],get_all_arrays_in_memory:[960,2,1,""],get_min_base:[961,2,1,""],get_min_denominator:[962,2,1,""],get_num_dims:[963,2,1,""],get_referrers_recursive:[964,2,1,""],has_nans:[965,2,1,""],identity:[966,2,1,""],indices_where:[967,2,1,""],inplace_arrays_supported:[968,2,1,""],inplace_decrement:[969,2,1,""],inplace_increment:[970,2,1,""],inplace_update:[971,2,1,""],inplace_variables_supported:[972,2,1,""],is_array:[973,2,1,""],linear_resample:[974,2,1,""],linspace:[975,2,1,""],logspace:[976,2,1,""],match_kwargs:[977,2,1,""],matmul:[978,2,1,""],maximum:[979,2,1,""],meshgrid:[980,2,1,""],minimum:[981,2,1,""],multiprocessing:[982,2,1,""],num_arrays_in_memory:[983,2,1,""],one_hot:[984,2,1,""],ones:[985,2,1,""],print_all_arrays_in_memory:[986,2,1,""],queue_timeout:[987,2,1,""],repeat:[988,2,1,""],reshape:[989,2,1,""],round:[990,2,1,""],scatter_flat:[991,2,1,""],scatter_nd:[992,2,1,""],set_min_base:[993,2,1,""],set_min_denominator:[994,2,1,""],set_queue_timeout:[995,2,1,""],set_tmp_dir:[996,2,1,""],shape:[997,2,1,""],shape_to_tuple:[998,2,1,""],split:[999,2,1,""],squeeze:[1000,2,1,""],stable_divide:[1001,2,1,""],stable_pow:[1002,2,1,""],stack:[1003,2,1,""],supports_inplace:[1004,2,1,""],swapaxes:[1005,2,1,""],tile:[1006,2,1,""],tmp_dir:[1007,2,1,""],to_list:[1008,2,1,""],to_numpy:[1009,2,1,""],to_scalar:[1010,2,1,""],transpose:[1011,2,1,""],try_else_none:[1012,2,1,""],unstack:[1013,2,1,""],value_is_nan:[1014,2,1,""],where:[1015,2,1,""],zero_pad:[1016,2,1,""],zeros_like:[1017,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1018,1,1,""],adam_step:[1020,2,1,""],adam_update:[1021,2,1,""],execute_with_gradients:[1022,2,1,""],gradient_descent_update:[1023,2,1,""],is_variable:[1024,2,1,""],lamb_update:[1025,2,1,""],lars_update:[1026,2,1,""],optimizer_update:[1027,2,1,""],set_with_grads:[1028,2,1,""],stop_gradient:[1029,2,1,""],unset_with_grads:[1030,2,1,""],variable:[1031,2,1,""],variable_data:[1032,2,1,""],with_grads:[1033,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1018,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1035,2,1,""],float_img_to_uint8_img:[1036,2,1,""],gradient_image:[1037,2,1,""],random_crop:[1038,2,1,""],stack_images:[1039,2,1,""],uint8_img_to_float_img:[1040,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1042,2,1,""],inv:[1043,2,1,""],matrix_norm:[1044,2,1,""],pinv:[1045,2,1,""],qr:[1046,2,1,""],vector_to_skew_symmetric_matrix:[1047,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1049,2,1,""],logical_or:[1050,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1052,2,1,""],asin:[1053,2,1,""],atan2:[1055,2,1,""],atan:[1054,2,1,""],atanh:[1056,2,1,""],cosh:[1057,2,1,""],divide:[1058,2,1,""],erf:[1059,2,1,""],exp:[1060,2,1,""],log:[1061,2,1,""],sinh:[1062,2,1,""],tan:[1063,2,1,""],tanh:[1064,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1066,2,1,""],maml_step:[1067,2,1,""],reptile_step:[1068,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1069,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1114,2,1,""],copy_nest:[1115,2,1,""],index_nest:[1116,2,1,""],map:[1117,2,1,""],map_nest_at_index:[1118,2,1,""],map_nest_at_indices:[1119,2,1,""],multi_index_nest:[1120,2,1,""],nested_indices_where:[1121,2,1,""],nested_map:[1122,2,1,""],set_nest_at_index:[1123,2,1,""],set_nest_at_indices:[1124,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1126,2,1,""],randint:[1127,2,1,""],random_normal:[1128,2,1,""],random_uniform:[1129,2,1,""],seed:[1130,2,1,""],shuffle:[1131,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1133,2,1,""],reduce_max:[1134,2,1,""],reduce_mean:[1135,2,1,""],reduce_min:[1136,2,1,""],reduce_prod:[1137,2,1,""],reduce_std:[1138,2,1,""],reduce_sum:[1139,2,1,""],reduce_var:[1140,2,1,""]},"ivy.functional.ivy.nn":{activations:[1142,0,0,"-"],layers:[1150,0,0,"-"],losses:[1163,0,0,"-"],norms:[1167,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1143,2,1,""],leaky_relu:[1144,2,1,""],relu:[1145,2,1,""],sigmoid:[1146,2,1,""],softmax:[1147,2,1,""],softplus:[1148,2,1,""],tanh:[1149,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1151,2,1,""],conv1d_transpose:[1152,2,1,""],conv2d:[1153,2,1,""],conv2d_transpose:[1154,2,1,""],conv3d:[1155,2,1,""],conv3d_transpose:[1156,2,1,""],depthwise_conv2d:[1157,2,1,""],dropout:[1158,2,1,""],linear:[1159,2,1,""],lstm_update:[1160,2,1,""],multi_head_attention:[1161,2,1,""],scaled_dot_product_attention:[1162,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1164,2,1,""],cross_entropy:[1165,2,1,""],sparse_cross_entropy:[1166,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1168,2,1,""]},"ivy.stateful":{activations:[1172,0,0,"-"],converters:[1175,0,0,"-"],initializers:[1177,0,0,"-"],layers:[1186,0,0,"-"],module:[1198,0,0,"-"],norms:[1200,0,0,"-"],optimizers:[1202,0,0,"-"],sequential:[1208,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1173,1,1,""],GELU:[1174,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1173,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1174,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1176,2,1,""]},"ivy.stateful.initializers":{Constant:[1177,1,1,""],FirstLayerSiren:[1179,1,1,""],GlorotUniform:[1180,1,1,""],KaimingNormal:[1177,1,1,""],Ones:[1182,1,1,""],Siren:[1183,1,1,""],Uniform:[1177,1,1,""],Zeros:[1185,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1179,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1180,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1182,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1183,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1177,3,1,""],create_variables:[1177,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1185,3,1,""]},"ivy.stateful.layers":{Conv1D:[1187,1,1,""],Conv1DTranspose:[1188,1,1,""],Conv2D:[1189,1,1,""],Conv2DTranspose:[1190,1,1,""],Conv3D:[1191,1,1,""],Conv3DTranspose:[1192,1,1,""],DepthwiseConv2D:[1193,1,1,""],Dropout:[1194,1,1,""],LSTM:[1195,1,1,""],Linear:[1196,1,1,""],MultiHeadAttention:[1197,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1187,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1188,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1189,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1190,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1191,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1192,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1194,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1195,3,1,""],get_initial_state:[1195,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1196,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1197,3,1,""]},"ivy.stateful.module":{Module:[1199,1,1,""]},"ivy.stateful.module.Module":{__init__:[1199,3,1,""],build:[1199,3,1,""],build_mode:[1199,3,1,""],built:[1199,3,1,""],check_submod_rets:[1199,3,1,""],get_mod_key:[1199,3,1,""],mod_depth:[1199,3,1,""],mod_height:[1199,3,1,""],mod_with_top_mod_key_chain:[1199,3,1,""],save_weights:[1199,3,1,""],show_mod_in_top_mod:[1199,3,1,""],show_structure:[1199,3,1,""],show_v_in_top_v:[1199,3,1,""],sub_mods:[1199,3,1,""],track_submod_call_order:[1199,3,1,""],track_submod_rets:[1199,3,1,""],v_with_top_v_key_chains:[1199,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1201,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1201,3,1,""]},"ivy.stateful.optimizers":{Adam:[1203,1,1,""],LAMB:[1204,1,1,""],LARS:[1205,1,1,""],Optimizer:[1206,1,1,""],SGD:[1207,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1203,3,1,""],set_state:[1203,3,1,""],state:[1203,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1204,3,1,""],set_state:[1204,3,1,""],state:[1204,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1205,3,1,""],set_state:[1205,3,1,""],state:[1205,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1206,3,1,""],set_state:[1206,3,1,""],step:[1206,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1207,3,1,""],set_state:[1207,3,1,""],state:[1207,3,1,""]},"ivy.stateful.sequential":{Sequential:[1209,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1209,3,1,""]},"ivy.verbosity":{cprint:[1214,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1213,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1202,1203,1204],"02886":1169,"100":[1069,1169,1211],"141592653589793":798,"2021":1169,"2102":1169,"360":[1051,1063],"718281828459045":798,"754":[798,805,806,809,827],"999":[1018,1020,1021,1025,1202,1203,1204],"abstract":[850,865,1169,1202,1206],"boolean":[40,41,809,812,823,824,850,885,897,900,914,923,924,926,931,932,965,967,968,972,973,1004,1014,1018,1024,1048,1049,1050,1065,1066,1067,1069],"break":43,"case":[15,18,19,40,41,42,43,809,810,811,813,814,815,820,822,826,827,850,889,896,899,924,927,989,991,992,1041,1044,1046,1069,1113,1116,1120,1169,1186,1197,1198,1199,1202,1206,1215],"catch":[924,947],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,403,404,805,807,850,852,853,854,855,856,857,859,860,862,863,864,865,877,878,900,924,928,977,1018,1032,1069,1113,1115,1122,1163,1165,1166,1169,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],"default":[15,18,19,40,41,42,43,799,800,801,802,803,804,830,831,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,859,860,867,868,872,873,874,875,876,879,880,881,882,889,892,893,894,899,900,907,908,909,910,924,926,927,929,937,938,939,940,943,944,945,956,957,958,963,965,966,974,976,977,980,982,985,987,988,991,992,995,997,999,1001,1002,1011,1013,1014,1018,1021,1023,1024,1025,1026,1027,1029,1033,1041,1044,1046,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],"final":[40,41,43,924,956,975,976,1069,1186,1197,1212],"float":[40,41,42,798,799,800,801,804,805,806,809,810,811,813,814,815,820,822,826,827,828,830,834,850,859,860,883,889,892,896,899,900,908,915,924,927,937,938,940,956,957,961,962,976,993,994,995,1001,1002,1018,1020,1021,1023,1025,1026,1027,1034,1036,1040,1051,1058,1065,1066,1067,1068,1069,1125,1128,1129,1142,1144,1150,1158,1161,1162,1163,1164,1165,1166,1167,1168,1186,1194,1197,1200,1201,1202,1203,1204,1205,1206,1207],"function":[15,40,41,43,352,353,354,355,356,359,360,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,798,800,801,802,803,804,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,836,838,841,843,845,846,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1172,1173,1174,1202,1205,1206,1207,1211,1212,1215],"import":[43,1169,1212,1215],"int":[40,41,42,43,351,352,353,355,356,453,799,800,801,803,804,805,806,807,830,831,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,872,873,874,875,876,879,880,881,882,887,888,894,900,909,911,916,924,929,934,939,940,944,945,948,949,950,953,956,957,958,963,966,974,975,976,984,985,988,989,991,992,997,998,999,1000,1003,1005,1006,1011,1013,1016,1018,1020,1021,1025,1034,1038,1039,1041,1044,1065,1066,1067,1068,1069,1113,1122,1125,1126,1127,1129,1130,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1161,1163,1165,1166,1167,1168,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1200,1201],"long":[43,1150,1160],"new":[40,41,43,453,799,800,801,802,804,809,821,900,904,924,925,934,948,949,950,953,956,957,958,959,985,989,991,992,993,994,1001,1002,1003,1018,1021,1023,1025,1026,1027,1034,1036,1038,1040,1051,1056,1057,1062,1064,1069,1113,1123,1124,1125,1126,1167,1168,1169,1175,1176,1186,1196,1200,1201,1202,1203,1204,1205,1206,1207,1212,1215],"public":[924,941],"return":[15,16,17,18,19,40,41,42,43,453,799,800,801,802,803,804,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,825,826,827,828,830,831,832,833,834,837,838,840,841,842,843,844,845,846,848,849,850,859,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,885,886,888,889,893,894,895,896,897,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,988,989,990,991,992,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1175,1176,1186,1195,1196,1202,1206,1211,1212,1215],"short":[43,1150,1160,1169,1215],"static":[40,41,848,849],"super":1069,"true":[40,41,42,405,410,437,440,453,454,809,816,817,818,823,824,830,833,834,837,838,840,841,844,845,846,848,849,850,924,926,933,935,952,956,965,967,1014,1015,1018,1021,1023,1024,1025,1026,1027,1029,1041,1044,1065,1066,1067,1068,1069,1113,1114,1121,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1163,1164,1165,1166,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],"try":[40,41,924,1012,1069],"var":[40,41,1065,1066,1067,1215],"while":[40,41,42,809,823,824,1069],AND:[809,812,844,845,1048,1049],But:1215,For:[43,809,810,811,813,814,815,820,822,826,827,924,927,936,1003,1018,1024,1032,1041,1046,1051,1052,1169,1175,1176,1212,1215],Its:[1051,1054],NOT:[809,823],Not:798,One:[40,41,43,924,949,989,1125,1127,1215],Ones:[1169,1177],PRs:43,Such:[924,941],That:1212,The:[15,16,17,18,19,40,41,42,43,799,803,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,832,833,834,835,836,840,841,844,845,846,848,849,850,859,860,866,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,911,912,913,914,923,924,927,930,931,934,935,937,938,939,940,942,943,946,947,951,956,958,959,966,969,970,971,973,974,976,978,980,982,985,988,989,991,992,993,994,995,998,999,1000,1001,1002,1003,1006,1014,1017,1018,1020,1021,1023,1025,1026,1027,1029,1032,1034,1036,1038,1040,1041,1044,1046,1051,1052,1053,1054,1058,1059,1060,1061,1063,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1212,1215],There:[43,1169,1212],These:[43,1169],Use:43,Used:[1113,1114,1121,1198,1199],Using:[1169,1170,1215],With:[40,41,837,838,1041,1044,1132,1134,1135,1136,1137,1138,1139,1140,1169,1211,1215],__array__:[924,930],__call__:[1186,1197,1198,1199],__del__:1069,__dict__:[1069,1212],__enter__:1069,__exit__:1069,__getitem__:1069,__getstate__:1069,__init__:[40,41,42,43,59,60,84,217,357,358,403,404,485,613,850,851,858,859,860,861,862,863,864,865,900,901,902,903,1018,1019,1069,1073,1080,1169,1172,1173,1174,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],__iter__:1069,__len__:1069,__next__:1069,__repr__:1069,_assign_vari:1211,_axi:1069,_base:[1113,1114,1121],_compute_node_da_ratio:1069,_compute_node_strs_da:1069,_concat_unify_arrai:1069,_counter:1069,_cur_framework:[43,1069],_da_direct:1069,_da_directions_flip:1069,_da_step_tim:1069,_da_tim:1069,_da_tune_count:1069,_data:1069,_delta_da_dim_s:1069,_delta_sf:1069,_dict:1069,_dim_siz:1069,_first_da_tune_step:1069,_first_ns_tune_step:1069,_fn:1069,_forward:[1169,1211],_get_kalman_param:1215,_get_prior:1215,_get_some_model:1215,_index:[1113,1114,1121],_input_queu:1069,_length:1069,_max_depth:1069,_max_node_dim_step_ratio:1069,_max_node_dim_step_s:1069,_max_split_factor_step_s:1069,_mean_unify_arrai:1069,_min_bas:[924,1002,1167,1168,1200,1201],_min_denomin:[924,1001],_min_node_dim_s:1069,_min_sf_tune_step:1069,_min_unit_node_tune_step:1069,_model:1215,_node_mapp:1069,_node_percent_mem:1069,_node_str:1069,_node_str_da_ratio:1069,_node_strs_da:1069,_node_strs_kei:1069,_node_strs_n:1069,_node_util:1069,_ns_step_tim:1069,_ns_time:1069,_ns_tune_count:1069,_num_nod:1069,_num_work:1069,_observed_config:1069,_output_queu:1069,_paramet:1211,_percent_mem_inc_per_sf:1069,_percent_mem_inc_per_unit_da_dim:1069,_percent_util_inc_per_unit_da_dim:1069,_ret_fn:1069,_safety_factor:1069,_save_dir:1069,_shift_da_split:1069,_shift_n:1069,_slice:1069,_step:[1202,1206],_sum_unify_arrai:1069,_timeout:1069,_tune:1069,_tune_da:1069,_tune_n:1069,_tune_step:1069,_unit_da_tune_count:1069,_unroll_step:1215,_with_node_mappig:1069,_worker:1069,_worker_class:1069,_worker_fn:1069,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,850,859,865,1069,1198,1199,1202,1206],abil:1169,abl:[40,41],about:[805,806,807],abov:[43,799,803,830,831,1125,1127],above_height:[40,41],abs:[258,405,535,666,830,834,924,1069],absolut:[40,41,830,832,924,925],abstractmethod:1069,accept:[15,43,809,823,824,1169],access:[40,41,43,1212],accord:[40,41,805,806,924,940,958,991,992,1011,1016],accordingli:[830,834,844,845,846],accur:[59,357,403,404,850,862,863,864,865,900,1018,1177,1179,1180,1182,1183,1185],aco:[749,1051],acosh:[88,221,362,489,617,809],across:[40,41,850,859,860,869,870,872,873,874,875,876,882,892,893,924,929,931,932,1069,1113,1117],act:43,activ:[1143,1144,1145,1146,1147,1148,1149,1169,1173,1174],actual:1212,adam:[1018,1020,1021,1025,1169,1202,1204,1211],adam_step:1018,adam_upd:1018,adapt:[1018,1026,1202,1205],add:[40,41,43,1069,1163,1164,1165,1166,1167,1168,1169,1200,1201,1212],added:[43,924,1001,1002,1208,1209],adding:[43,924,934],addit:[40,41,43,924,948,949,950,1167,1168,1186,1196],addition:43,address:43,adher:43,adjac:[924,927],adopt:[43,924,941],affect:[924,927],affin:[1200,1201],after:[809,827,924,974,1018,1021,1022,1023,1025,1026,1027,1034,1035,1167,1168,1202,1203,1204,1205,1206,1207,1215],after_1:[924,940,1016],after_n:[924,940,1016],again:43,against:[40,41,837,838,1041,1044,1132,1134,1135,1136,1137,1138,1139,1140],agnost:[43,1169,1211,1212],aim:1215,algebra:1041,algorithm:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193,1215],align:[40,41,43,924,934],aliv:[850,884,886,890,924,960,983,986],all:[15,16,17,18,19,40,41,43,123,248,399,524,654,799,803,830,834,835,836,844,848,849,850,859,884,890,924,925,926,931,932,941,960,966,986,1000,1041,1046,1065,1066,1067,1068,1069,1113,1114,1115,1121,1122,1125,1126,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1160,1169,1212,1215],all_depth:[40,41],all_equ:924,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1113,all_tru:[40,41],alloc:[43,799,803,850,1069],allow:[924,975,976,977,1198,1199],allow_dupl:[924,977],alon:[850,889,899,1069,1169],along:[40,41,43,453,830,834,835,836,837,838,840,841,842,843,844,845,846,850,873,874,875,876,879,880,881,882,894,924,939,944,945,958,974,975,976,988,999,1003,1006,1013,1041,1044,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140],alongsid:[1211,1212],alpha:[1142,1144],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,809,813,850,1069],also:[40,41,43,924,927,1018,1021,1065,1066,1067,1068,1113,1114,1115,1121,1122,1150,1159,1169,1186,1196,1211],altern:1211,alwai:[40,41,43,1018,1024,1029],among:[40,41],amount:[850,896,1069,1169],angl:[809,815,828,1051,1052,1055],ani:[15,16,17,18,19,40,41,43,123,248,399,524,654,844,848,849,850,852,855,859,860,862,871,872,875,876,881,924,926,927,930,947,948,949,950,951,952,965,973,977,1001,1002,1018,1022,1069,1113,1114,1117,1121,1122,1123,1124,1125,1129,1169,1175,1176,1198,1199,1211,1212,1215],anoth:[40,41,43,900,906,1169],another_backend:43,anyth:[43,1215],anywai:43,apart:43,api:[1169,1170],appear:[43,924,953],append:[40,41,830,831,1069],appli:[15,18,19,40,41,830,833,924,948,949,950,1018,1025,1026,1048,1049,1050,1065,1066,1067,1113,1117,1120,1122,1142,1143,1144,1145,1146,1147,1148,1149,1150,1159,1161,1162,1167,1168,1169,1172,1173,1174,1200,1201],applic:[1113,1117,1122,1150,1161,1162,1169,1215],appropri:[837,838],approxim:[809,810,811,814,815,820,821,822,826,828,1142,1143],arang:[134,258,405,453,535,666,924,975,976],arbitrari:[40,41,850,879,880,882,1069],arc:[1051,1055],arcco:[1051,1052],arctan:[1051,1054],area:[809,810,811,1169],arg:[15,16,17,40,41,43,59,63,850,859,872,876,882,894,924,948,949,950,992,1069,1175,1176,1198,1199],arg_nam:924,arg_stateful_idx:[1198,1199],argmax:[116,242,392,517,647,837],argmin:[134,405,535,666,924],args_clon:1069,args_dist:1069,args_to_ivi:[15,1169],args_to_n:[15,1169],args_uni:1069,argsort:[119,245,395,520,650,840],argument:[15,16,17,18,19,40,41,42,43,59,63,848,849,850,859,860,872,876,882,924,927,928,935,947,977,992,1051,1052,1069,1113,1117,1175,1176,1198,1199],aris:[1169,1215],arithmet:[1132,1135,1138,1140],arithmetic_oper:[0,1,2],around:[40,41,42],arr:453,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,134,258,405,453,535,666,799,800,801,802,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,850,868,869,870,873,874,875,876,879,880,881,882,884,886,890,894,895,900,904,910,915,916,924,925,926,927,929,931,932,933,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,957,958,959,960,963,965,966,967,968,969,970,971,973,974,975,976,978,979,980,981,983,984,985,986,988,989,990,991,992,997,999,1000,1003,1004,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1020,1021,1024,1025,1029,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1113,1115,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1186,1194,1195,1197,1202,1206,1211,1212],arrang:[924,948],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,351,352,353,354,355,356,357,359,360,798,799,800,801,802,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846],array_api_methods_to_test:43,array_equ:[258,666,924],array_lik:[453,924,930],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,924],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1169],arraywithgener:[22,1169],arraywithgradi:[24,1169],arraywithimag:[26,1169],arraywithlinalg:[28,1169],arraywithlog:[30,1169],arraywithmath:[32,1169],arraywithmeta:[34,1169],arraywithrandom:[36,1169],arraywithreduct:[38,1169],arriv:[40,41,42],articl:1169,arxiv:1169,as_arrai:[40,41,924,963,997],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[403,405,413,850,868,900,907,908,909,910],as_tensor:405,as_vari:[40,41],as_zero:[40,41],asarrai:[405,924],ascend:[840,841],asin:[749,1051],asinh:[88,362,489,617,809],aspect:[1034,1039],assert:[40,41,924,933,1069],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:924,associ:[43,1041,1047],assum:[809,814,826,1212,1215],astyp:[405,900],asynchron:[40,41,42],at_dev:[40,42,850,863,864],at_kei:[40,41],at_key_chain:[40,41],at_nod:1069,atan2:[749,1051],atan:[749,1051],atanh:[749,1051],attent:[43,1150,1161,1162,1186,1197],attribut:[0,6,40,41,805,806,807,924,1017],audienc:[1169,1212],author:1169,automat:43,avail:[40,41,43,850,885,887,888,897,924,949,1069],averag:[1018,1020,1021,1025,1065,1066,1067,1132,1135],average_across_step:[1065,1066,1067],avoid:[43,850,1069,1212],axes:[40,41,43,405,434,446,447,830,834,835,836,837,838,842,843,844,845,846,850,894,924,929,940,953,1005,1011,1016,1041,1044,1069,1132,1134,1135,1136,1137,1138,1139,1140],axes_length:[40,41,924,948,949,950],axi:[40,41,405,407,411,412,418,426,427,428,432,433,435,830,831,834,835,836,837,838,840,841,842,843,844,845,846,850,852,855,862,873,874,875,876,879,880,881,882,894,924,929,939,940,943,944,945,953,958,974,975,976,988,999,1000,1003,1005,1006,1013,1016,1069,1125,1131,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1163,1165,1166],axis0:[40,41,924,1005],axis1:[40,41,830,831,924,1005],axis2:[830,831],back:[43,1198,1199,1202,1206],backend:[15,17,19,40,41,351,352,353,354,355,356,357,359,360,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,850,885,888,897,900,906,914,923,924,968,972,1018,1021,1023,1025,1026,1027,1032,1069,1169,1170,1175,1176,1202,1203,1204,1205,1206,1207,1211,1212,1215],backend_nam:43,background:[1169,1212],backprop:1215,backward:[844,845,846,1211],band:[924,956],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,357,403,404,405,428,809,820,821,822,850,852,853,854,855,856,857,859,860,862,863,864,865,900,924,961,976,993,1002,1018,1069,1132,1133,1169,1172,1173,1174,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1215],basi:43,batch:[40,41,830,833,834,850,892,893,924,956,966,1034,1038,1065,1066,1067,1068,1069,1150,1159,1167,1168,1200,1201],batch_shap:[405,420,924,966,984,1034,1035,1036,1037,1038,1039,1040,1041,1047,1125,1126,1150,1160,1161,1162,1186,1195],batch_siz:[453,454,1069,1125,1126,1150,1151,1152,1153,1154,1155,1156,1157],bayesian:1215,becaus:[43,924,927],becom:[43,924,936,1051,1055,1215],been:[924,948,949,950,1125,1126],befor:[40,41,43,850,894,1065,1066,1067,1069,1113,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1161,1162,1215],before_1:[924,940,1016],before_n:[924,940,1016],begin:[1113,1114,1121,1212],behaviour:[43,1215],behind:[1018,1021,1023,1025,1026,1027,1169],being:[40,41,43,924,927,987,995,1069],believ:43,belong:[40,41],below:[43,799,803,830,831,1169,1212,1215],below_depth:[40,41],benefit:1169,bernoul:[1150,1158,1186,1194],best:[43,924,977,1169],beta1:[1018,1020,1021,1025,1202,1203,1204],beta2:[1018,1020,1021,1025,1202,1203,1204],beta:[1167,1168],between:[40,41,42,805,806,924,927,1041,1046,1113,1117,1125,1127,1163,1165,1166,1202,1204],bia:[1150,1159,1160,1186,1187,1188,1189,1190,1191,1192,1193,1196],bias_initi:[1186,1187,1188,1189,1190,1191,1192,1193,1196],bilinear:[1034,1035],bilinear_resampl:[168,310,442,574,735,1034],bilinearli:[1034,1035],binari:[809,812,1163,1164],binary_cross_entropi:1163,bit:[357,805,806,807,900,911,1034,1036,1040,1169],bitwis:[809,812],bitwise_and:[88,221,362,489,617,809],bitwise_oper:[0,7,8],block:[1169,1212],bool:[15,18,19,40,41,42,43,809,816,817,818,819,823,824,830,833,834,837,838,840,841,842,843,844,845,846,848,849,850,868,881,885,889,894,897,899,900,910,924,926,931,932,944,947,951,952,956,963,965,973,977,997,999,1013,1014,1015,1018,1021,1022,1023,1024,1025,1026,1027,1029,1041,1044,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1175,1176,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],both:[43,924,943],bottom:1169,boundari:[40,41,1125,1129],branch:[43,848,849],brittl:43,broadcast:[40,41,809,812,819,824,830,834,837,838,844,845,846,924,934,951,979,980,981,988,1041,1044,1051,1055,1058,1132,1134,1135,1136,1137,1138,1139,1140],broadcast_to:[258,666,924],build:[1069,1169,1186,1197,1198,1199],build_mod:[1186,1197,1198,1199],builder:[43,1169],built:[850,924,927,1069,1186,1197,1198,1199],busi:43,bypass:1212,cach:[850,866,924,935],cache_fn:924,calcul:[40,41,42,809,810,811,814,815,820,821,822,826,827,828,1051,1058],call:[43,850,894,924,987,995,1012,1018,1022,1069,1113,1114,1117,1121,1186,1197,1198,1199,1202,1206,1212,1215],callabl:[40,41,848,849,850,859,860,894,924,935,947,949,977,1012,1065,1066,1067,1068,1069,1113,1117,1118,1119,1121,1122,1150,1161],can:[43,850,892,893,894,924,989,1034,1036,1069,1169,1211,1212,1215],cancel_join_thread:1069,cannot:43,captur:1169,cast:[40,41,134,258,405,535,666,900,924,939,1034,1036,1040],catch_except:[924,947],categori:43,caus:43,ceil:[88,221,362,489,617,809,924,927],cell:[1150,1160,1186,1195],certain:[40,41,924,927,975,976],chain:[40,41,1065,1066,1067,1208,1209],chang:[43,850,924,989,1069,1113,1115,1122,1169,1211],channel:[924,956,1034,1036,1037,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],check:[15,16,17,18,19,40,41,43,850,889,899,900,905,914,923,924,933,952,965,973,1004,1014,1018,1024,1069,1113,1114,1121,1169,1212],check_nest:[1113,1121],check_shap:[40,41],check_submod_ret:[1198,1199],check_typ:[40,41],choic:[1169,1212],choleski:[739,1041],choos:[809,823,824,924,1015,1041,1046,1051,1055,1169],choose_random_framework:59,chosen:[40,41,924,927,1015],chunk:[850,892,893,894,1069],chunk_siz:[850,894,1069],circl:[1051,1052,1053],clark:1169,clear:[43,850,866,1069],clear_framework_stack:59,clear_mem_on_dev:[403,658,850],click:1169,clip:[40,41,258,405,666,924,937,938,979,981,1169],clip_matrix_norm:924,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,924],clipped_delta:1069,clone:[40,41,850,869,870,871,872,1069],clone_arrai:1069,clone_it:1069,clone_nest:1069,clonedit:1069,cloneditem:1069,clonednest:1069,close:[43,1034,1039,1051,1053,1069,1215],closest:[809,813,900,905],closest_valid_dtyp:900,code:[40,41,42,43,453,1169,1170,1211,1212],codebas:[850,892,893,1069,1169,1212,1215],codomain:[809,810,811,814,815,820,822,826,827,828],colab:1169,collect:[15,40,41,403,405,437,442,446,450,451,453,848,850,900,924,1018,1034,1041,1048,1051,1069,1113,1125,1132,1142,1150,1163,1167,1172,1186,1200,1202],color:[40,41,42,1213,1214],column:[924,966],combin:[40,41,42,1034,1039,1169,1215],combined_batch_s:1069,come:1212,command:1169,comment:43,commit:1215,common:[40,41,43,1051,1055],common_key_chain:[40,41],commun:[43,1169,1212],communuti:43,compar:[40,41,840,841,924,926,931,932],comparison_oper:[0,9,10],compat:[809,812,819,824,830,834,844,845,846,924,951,989,1051,1058,1169,1215],compil:[258,405,666,1198,1199,1202,1203,1204,1205,1206,1207],compile_on_next_step:[1198,1199,1202,1203,1204,1205,1206,1207],complet:[40,41,43,1041,1046,1069],complex:[1212,1215],compliant:[809,823,824],compon:[924,943],composit:43,comput:[40,41,809,812,819,823,824,825,830,832,834,842,843,850,894,924,937,938,944,945,951,978,1018,1020,1021,1022,1023,1025,1026,1027,1029,1031,1034,1037,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1059,1060,1061,1063,1113,1117,1132,1133,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1159,1161,1163,1164,1165,1166],concat:[40,41,850,879,880,881,882,894,924,956,1069],concaten:[40,41,134,258,405,535,666,924,956,1069,1169],concatten:[40,41,850,879,880,881,882,894,1069],condit:[405,848,849,924,1015,1113,1121],conditon:[1113,1121],config:[40,41,1069],config_list:1069,configur:[40,41],conflict:43,conform:43,conjunct:1212,connect:[1186,1196,1197],consid:[40,41,809,823,824,1041,1046,1211,1215],consist:[40,41,850,882,1069,1132,1133,1198,1199,1212],constant:[850,859,860,924,940,1069,1113,1117,1163,1164,1165,1166,1167,1168,1177,1178,1182,1185,1198,1199,1200,1201,1212],constant_kwarg:1069,constant_pad:[258,405,535,666,924],constitu:[40,41],construct:[924,1006,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],constructor:[40,41,42,924,928,1208,1209],consum:[850,1069],cont_feat_dim:[1150,1161],contaienr:[40,41],contain:[15,18,19,42,799,801,803,804,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,834,842,843,844,845,846,850,869,873,894,900,904,924,925,929,936,937,938,941,951,965,979,981,990,1001,1002,1018,1020,1021,1023,1025,1026,1027,1051,1058,1065,1066,1067,1068,1069,1125,1126,1132,1134,1135,1136,1138,1140,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[405,666,924],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[405,924,982,1150,1161,1186,1197],context_dim:[1186,1197],contextmanag:[59,60],continu:[43,1069,1212],contract:[40,41,1132,1133],contribut:[1169,1170],contributor:[43,1169],control:1169,conv1d:[199,340,467,788,1150,1169,1186],conv1d_transpos:[199,340,467,788,1150],conv1dtranspos:[1169,1186],conv2d:[199,340,467,599,788,1150,1169,1186],conv2d_transpos:[199,340,467,788,1150],conv2dtranspos:[1169,1186],conv3d:[199,340,467,599,788,1150,1169,1186],conv3d_transpos:[199,340,467,788,1150],conv3dtranspos:[1169,1186],convent:[40,41,1132,1133],conver:[850,866,877,889,896,899,1069],convers:[16,17,18,19,40,41,1069,1169],convert:[15,16,17,18,19,40,41,43,850,877,878,900,906,912,913,924,998,1009,1010,1034,1036,1040,1041,1047,1069,1113,1115,1122,1169,1176],convert_dtyp:900,convolut:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],cool:43,cooler:43,coordin:[924,980,1051,1052,1053,1055],copi:[40,41,43,453,924,942,1069,1113,1115],copy_arrai:[405,666,924],copy_nest:1113,core:[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1169],corner:43,correct:[43,1169,1212],correctli:[40,41,43,837,838,1041,1044,1051,1055,1132,1134,1135,1136,1137,1138,1139,1140],correspond:[40,41,924,939,1125,1126],cos:[88,362,489,617,809,924,956,1051,1052,1063,1212],cosh:[88,362,489,617,749,809,1051],cosin:[809,810,814,815,1051,1052,1057],cost:[1018,1020,1021,1023,1025,1026,1027,1065,1066,1067,1068],cost_fn:[1065,1068],could:1215,count:[40,41,835,836,844,845,846,1069,1132,1137,1139],cours:43,cprint:1213,cpu:[40,41,43,850,887,889,895,896,899,924,927,930,958,959,966,975,976,984,985,991,992,1017,1069,1125,1126,1127,1128,1129,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1211,1212],creat:[40,41,799,800,801,802,804,850,859,860,924,927,930,957,958,959,966,975,976,984,985,991,992,1008,1017,1018,1031,1069,1125,1126,1127,1128,1129,1169,1170,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1215],create_if_abs:[40,41],create_vari:1177,creation:[40,41,42,43],creation_funct:[351,352,353,354,355,356,799,800,801,802,803,804],crop:[1034,1038],crop_siz:[1034,1038],cross:[258,666,924,1163,1164,1165,1166],cross_entropi:1163,cuda:[40,41,850,859,878,895,924,927,930,958,959,966,975,976,984,985,991,992,1017,1069,1125,1126,1127,1128,1129,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],cumprod:[134,258,405,666,924],cumsum:[666,924],cumul:[924,944,945],current:[40,41,42,43,850,859,883,884,886,890,900,906,914,923,924,946,960,968,972,983,986,1069,1113,1114,1121,1169,1215],current_framework:59,current_framework_str:[405,666,924,1069],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1150,1151,1152,1153,1154,1155,1156],d_out:[1150,1151,1152,1153,1154,1155,1156],da_can_termin:1069,da_dim_s:[850,1069],da_direct:1069,da_tune_step:[850,1069],dai:[43,1215],daniel:1169,data:[40,41,42,43,799,800,801,802,803,804,806,807,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,834,835,836,840,841,844,845,846,850,852,853,854,855,856,857,862,863,864,878,900,904,905,906,910,911,912,913,914,915,916,923,924,927,930,951,957,966,973,985,989,1000,1004,1017,1018,1024,1032,1051,1058,1069,1150,1159,1169],data_format:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],data_type_funct:[357,359,360,805,806,807],dataset:[40,41],datatyp:[40,41,900,905,915,916],dcdw:[1018,1020,1021,1023,1025,1026],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1018,1025,1026,1202,1204,1205],decay_lambda:[1018,1025,1026,1202,1204,1205],decid:[40,41,1215],decompos:[1041,1042,1046],decomposit:[830,833,1041,1042,1046],decrement:[924,969],dedic:[1018,1032,1175,1176],deep:[40,41,1169],deep_copi:[40,41],deeper:[850,872,876,882,1069,1113,1122,1169],deepli:[1113,1115],def:[43,60,84,217,358,485,613,851,858,861,901,902,903,1019,1069,1073,1080,1169,1178,1181,1184,1211,1212,1215],default_dev:43,default_devic:850,default_dtyp:[43,900],default_float_dtyp:900,default_int_dtyp:900,default_key_color:[40,41,42],default_nod:1069,default_rng:453,default_v:[924,947],defaultdevic:[850,851],defaultdtyp:[900,901],defaultfloatdtyp:[900,902],defaultintdtyp:[900,903],defin:[43,924,943,984,1017,1125,1127],definit:43,degre:[1051,1063],del:1069,delai:43,delet:43,delta:[1018,1020,1069],delta_dim_s:1069,delta_percent_mem:1069,delta_sf:1069,delta_util:1069,demo:1169,denomin:[924,955,962,994,1001,1002,1167,1168,1200,1201],denot:43,dens:[1186,1196],depend:[809,810,811,814,815,820,821,822,826,828,830,833,840,841,924,1015,1169],depth:[40,41,405,429,850,872,876,882,924,964,984,1069,1113,1122,1198,1199],depth_cutoff:[40,41],depthwis:[1150,1157,1186,1193],depthwise_conv2d:[199,340,467,599,788,1150],depthwiseconv2d:[1169,1186],deriv:[799,802,1018,1020,1021,1023,1025,1026,1027,1113,1115,1122,1169,1198,1202,1206,1208],descend:[830,833,840,841],descent:[1018,1023,1202,1207],describ:[40,41,1132,1133],descript:[830,834],design:[1169,1170],desir:[40,41,850,895,900,904,924,927,930,966,967,985,1017,1034,1039,1069,1132,1134,1135,1136,1138,1140],desired_aspect_ratio:[442,445,1034,1039],desired_percent_increas:1069,detail:1215,detect:[40,41,1113,1114,1121],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,809,810,811,812,814,815,816,817,818,820,822,826,827,830,831,832,834,844,845,846,850,885,887,888,897,900,904,905,911,914,915,916,923,924,926,927,930,931,932,965,968,972,973,1004,1014,1018,1024,1051,1058,1065,1066,1067,1068,1069,1150,1161],dev:[40,41,42,43,127,252,351,354,403,405,406,408,418,419,420,427,428,429,430,431,436,453,454,528,658,799,802,850,853,854,856,857,859,860,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,886,889,890,891,892,893,894,895,896,899,924,927,930,958,959,966,975,976,984,985,991,992,1017,1018,1033,1125,1126,1127,1128,1129,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],dev_clon:[40,41,850],dev_clone_arrai:850,dev_clone_it:850,dev_clone_nest:850,dev_dist:[40,41,850],dev_dist_arrai:850,dev_dist_it:850,dev_dist_nest:850,dev_from_str:[43,127,252,403,528,658,850],dev_mapp:850,dev_str:[40,41],dev_to_str:[127,252,403,528,658,850],dev_unifi:850,dev_unify_arrai:850,dev_unify_it:850,dev_unify_nest:850,dev_util:850,devclonedit:850,devcloneditem:850,devclonednest:850,devdistit:850,devdistitem:850,devdistnest:850,develop:[43,1169,1212,1215],deviat:[40,41,1125,1128,1132,1138,1167,1168,1200,1201],devic:[21,40,41,43,351,352,353,356,404,405,417,799,800,801,802,803,804,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,924,927,930,957,958,959,966,975,976,984,985,991,992,1017,1018,1033,1125,1126,1127,1128,1129,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209],devmanag:[850,858],devmapp:[850,860],devmappermultiproc:850,diag:[830,833],diagon:[109,235,385,510,640,799,803,830,924,966],dict:[15,16,17,18,19,40,41,42,850,852,855,859,860,862,872,873,874,875,876,924,948,949,950,977,1065,1066,1067,1069,1113,1115,1116,1117,1120,1122,1175,1176],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,805,806,850,869,870,873,874,1041,1046,1069,1150,1159,1169,1212,1215],differenti:[1169,1212],dilat:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],dim:[40,41,830,833,924,984,1034,1035,1039,1069,1186,1197],dim_siz:[40,41,850,1069],dimens:[40,41,42,799,803,830,831,833,834,835,836,837,838,844,845,846,850,881,924,934,939,943,948,949,950,953,956,963,974,984,988,989,999,1000,1003,1011,1013,1034,1038,1041,1044,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1160,1163,1165,1166,1186,1187,1188,1189,1190,1191,1192,1193,1196,1197],dimension:[40,41,453,830,833,834,844,845,846,924,999,1000],direct:1069,directli:[43,1113,1122,1212,1215],directori:[924,996,1007],discord:43,discret:[1163,1165],discuss:43,disk:[40,41,1034,1036],distanc:[924,927],distribut:[40,41,850,869,873,874,875,876,1069,1125,1126,1127,1128,1129,1150,1158,1186,1194,1198,1199],distribute_nest:1069,distributedarrai:[40,41],distrubt:[1163,1165],dive:[1169,1212],divid:[40,41,924,999,1001,1051],dividend:[1051,1058],divis:[924,955,962,994,1001,1002,1018,1020,1021,1025,1051,1058,1202,1203,1204],divisor:[1018,1020,1021,1025,1051,1058,1202,1203,1204],doc:1169,docstr:43,document:43,doe:[40,41,43,924,927,999,1211],doesn:[1041,1046,1169],doing:43,domain:[809,810,811,814,815,820,822,826,827,828,1051,1052],don:[43,1169],done:43,door:1215,dot:[1041,1043,1150,1161,1162,1186,1197],down:1211,downscal:[924,937,938],drag:[1169,1215],draw:[1125,1126,1128,1129],drawn:[1125,1126,1127,1128,1129],drop:[1169,1215],dropout:[1150,1169,1186,1197],dropout_r:[1186,1197],ds_tune_step:850,dtype:[40,41,43,134,258,351,352,353,354,356,357,359,360,405,406,408,409,417,420,436,535,666,799,800,801,802,804,805,806,807,837,838,904,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,927,930,957,966,984,985,1017],dtype_bit:[134,258,405,535,666,900],dtype_from_str:[43,134,258,405,535,666,900],dtype_in:[405,414,415,416,900,906,911,912,913,914,915,916,923],dtype_to_str:[134,258,405,535,666,900],duplic:[40,41,43],dure:[40,41,43,848,849,924,1012,1018,1020,1021,1025,1065,1066,1067,1068,1198,1199,1202,1203,1204,1206],dynam:[43,405,410,848,849],each:[40,41,42,43,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,833,850,859,860,869,870,871,872,873,874,875,881,893,894,924,925,926,940,951,988,999,1003,1006,1016,1018,1021,1023,1025,1026,1027,1034,1037,1051,1053,1058,1060,1061,1069,1113,1117,1125,1126,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1158,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212],eager:1212,easi:1215,easili:1169,econom:1215,ecosystem:1169,edg:[924,936,940,1016],effect:[1018,1027],effective_grad:[1018,1027],effici:1215,einop:[40,41,924,948,949,950],einops_rearrang:[40,41,924],einops_reduc:[40,41,924],einops_repeat:[40,41,924],einstein:[40,41,1132,1133],einsum:[40,41,185,328,455,589,768,1132],either:[40,41,43,809,817,820,822,826,924,947,977,980,982,1065,1066,1067,1068,1069,1186,1197,1198,1199,1212],eleg:1069,element:[40,41,453,799,803,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,835,836,842,843,844,845,846,850,871,875,881,900,904,924,925,927,929,931,932,936,937,938,944,945,951,954,955,966,967,979,981,988,990,999,1010,1015,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1132,1133,1135,1137,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1158,1186,1194],elementwis:[40,41],elementwise_affin:[1200,1201],elementwise_funct:[809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828],elemtn:[1125,1126],elif:1069,els:[43,924,933,947,952,1069],elsewher:[924,1015],emphas:1169,empti:[40,41,77,210,351,478,606,799,844,845,846,1041,1046,1069],enabl:[40,41,42,43,1169],encapsul:[805,807],encod:[924,956,1034,1036],end:[924,927,1169,1212],engag:43,ensur:43,entir:[40,41,844,845,846,850,894,1069,1169,1186,1195],entri:[40,41,924,975,976,999,1000],entropi:[1163,1164,1165,1166],enumer:1069,environ:1169,eps:[357,805,806],epsilon:[1018,1020,1021,1025,1163,1164,1165,1166,1167,1168,1200,1201,1202,1203,1204],equal:[40,41,362,617,809,816,817,830,831,840,841,924,926,931,932,940,999,1016,1051,1063,1125,1129],equality_matrix:[924,926],equat:[40,41,1132,1133],equival:[809,823,824,830,834,924,927,1051,1063],erf:[451,749,1051],error:[40,41,43,850,924,1000,1051,1059,1069,1142,1143,1198,1199,1202,1206],etc:[40,41,43,850,895,924,927,930,958,959,966,975,976,984,985,991,992,1017,1069,1125,1126,1127,1128,1129,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1215],euclidean:[830,834],euler:798,evalu:[40,41,809,820,821,822,825,844,845,846,924,980,1113,1114,1121],even:[43,1215],evenli:[40,41,924,927,975,976,999],everi:[43,924,926,1215],exact:[40,41],exampl:[43,848,849,924,936,1003,1041,1046,1169,1211,1212,1215],example_input:[405,410,848,849],exc_tb:1069,exc_typ:1069,exc_val:1069,exce:[924,981],except:[40,41,44,47,844,845,846,924,927,933,939,947,1012,1069],excess_s:1069,excit:[1169,1212],exclud:[59,61,924,927,1125,1129],exclus:[40,41,405,412,425,437,439,924,944,973,1018,1024,1125,1127],execut:[43,924,1012,1212],execute_with_gradi:[165,305,437,569,729,1018,1169,1211],exist:[40,41,924,947,1069,1169,1202,1206,1215],exp:[749,1051],expand:[40,41,924,953,956],expand_dim:[40,41,258,666,924,1069],expect:[924,928],explain:[43,1212],explicitli:[43,1186,1195,1197,1198,1199,1212],expon:[924,1002],exponenti:[1051,1059,1060],expos:[924,930,941],express:[809,814,826,924,980],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1018,1022],eye:[1041,1043],fabian:1169,fabio:1169,factor:[830,833,850,859,892,893,894,1018,1020,1021,1025,1026,1069,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193,1202,1203,1204,1205],fail:43,falck:1169,fall:[1198,1199,1202,1206],fallback_to_non_compil:[1198,1199,1202,1206],fals:[15,18,19,40,41,42,59,66,67,68,69,70,403,405,412,413,425,432,435,437,438,439,446,447,809,816,817,818,823,824,830,834,837,838,840,841,842,843,844,845,846,850,868,881,889,894,899,900,907,908,909,910,924,926,944,947,952,956,963,973,977,997,999,1013,1015,1018,1021,1022,1023,1024,1025,1026,1027,1041,1044,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1132,1134,1135,1136,1137,1138,1139,1140,1175,1176,1198,1199,1202,1203,1204,1205,1206,1207],fan_in:1177,fan_mod:1177,fan_out:1177,far:[1113,1114,1121,1211],faster:[848,849],favourit:[1169,1211],feasibl:1215,feat_dim:[1150,1161,1162],fed:[850,894,1069],feed:[850,894,1069],few:43,field:1215,file:[40,41,43,924,996,1007,1198,1199],filepath:[40,41],fill:[40,41,799,800,801,802,804,924,957,985,1125,1127],fill_valu:[405,417,924,957],filter:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193,1215],filter_s:[1186,1187,1188],filter_shap:[1186,1189,1190,1191,1192,1193],find:[40,41,43,1215],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,216,217,357,358,484,485,612,613,805],finish:[1169,1215],finit:[809,816],first:[40,41,43,453,809,812,819,824,830,831,833,848,849,850,881,924,931,939,943,951,975,976,1003,1005,1018,1022,1065,1066,1067,1068,1069,1113,1114,1121,1125,1131,1132,1137,1139,1186,1197,1198,1199,1202,1206,1212,1215],firstlayersiren:[1169,1177],firstli:[1212,1215],fist:[850,894,1069],fit:[40,41,403,405,437,442,446,450,451,453,924,988,1034,1039],fix:43,fkt:1215,flag:[40,41,43,1018,1024],flat:[40,41,924,988,991],flat_list:[40,41],flatten:[40,41,830,834,837,838,924,956,988,1132,1134,1135,1136,1138,1140],flatten_key_chain:[40,41,1198,1199],flexibl:[1169,1212],flip:[40,41,114,240,390,515,645,835],float32:[43,405,420,900,904,912,913,924,927,930,966,985,1017],float_dtyp:[900,908,918],float_img_to_uint8_img:1034,floor:[258,405,666,924,955,1069],floormod:[258,405,666,924],fluid:1215,folder:[43,1169],follow:[40,41,43,805,807,830,834,850,894,924,969,970,971,1001,1002,1018,1021,1023,1025,1026,1027,1069,1113,1117,1122,1150,1161,1162,1169,1186,1196,1202,1206],followng:[805,806],fomaml_step:1065,forget:[1018,1020,1021,1025,1202,1203,1204],fork:[924,982,1169,1170],forkserv:[924,982,1069],form:[15,16,17,18,19,40,41,799,803,830,831,924,930,1018,1021,1023,1025,1026,1027,1113,1115,1122,1150],format:[40,41,43,850,868,900,904,906,910,924,927,930,966,985,1017,1069,1132,1133,1169,1211,1212],format_fn:[40,41],format_key_chain:[40,41],forward:[1198,1199,1202,1206,1211],found:[40,41,42],fourier:[924,956],fourier_encod:924,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,117,120,122,124,125,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,179,180,181,182,183,184,186,187,188,189,190,191,192,195,197,198,200,201,202,203,204,205,206,211,212,213,214,215,217,218,219,222,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,339,341,342,343,344,345,346,347,352,353,354,355,356,358,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,511,512,513,514,516,518,521,523,525,526,529,530,531,532,533,534,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,570,571,572,573,575,576,577,579,580,581,585,586,587,588,590,591,592,593,594,595,596,600,601,602,607,608,609,610,611,613,614,615,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,641,642,643,644,646,648,651,653,655,656,659,660,661,662,663,664,665,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,730,731,732,733,734,736,737,738,740,741,742,743,744,745,747,748,750,751,752,753,754,755,756,757,758,759,760,762,763,764,765,766,767,769,770,771,772,773,774,775,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,800,801,802,803,804,806,807,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,831,832,833,834,836,838,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1169,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1214,1215],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1069,framewrk:[924,982],free:43,freed:43,freeli:43,frequenc:[924,956],from:[40,41,42,43,799,802,809,827,830,831,835,836,842,843,844,845,846,850,859,860,894,900,906,924,947,958,959,966,989,1000,1008,1015,1018,1021,1025,1034,1038,1041,1046,1065,1066,1067,1068,1069,1113,1115,1122,1125,1126,1127,1128,1129,1132,1137,1139,1150,1158,1161,1169,1175,1176,1186,1194,1197,1202,1206,1211,1212],from_cal:[1198,1199],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,134,258,405,535,666,805,806,924,1041,1046,1169],full_matric:[830,833],fulli:[43,1169,1186,1196,1197,1211],func:[40,41,405,410,437,438,848,849,850,894,924,935,1018,1022,1069],further:[43,1215],furthermor:1215,futur:1215,gain:1177,gamma:[1167,1168],gather:[40,41,134,258,405,535,666,924,959],gather_nd:[40,41,134,258,405,535,666,924],gauss:[1051,1059],gaussian:[1142,1143],geglu:[1169,1172],gelu:[338,464,777,1142,1169,1172],gener:[23,40,41,43,403,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,453,848,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1024,1125,1127,1129,1130,1169,1202,1206],geometr:[924,956],get:[40,41,43,805,806,807,850,859,860,868,883,884,889,893,896,899,900,910,911,924,928,960,961,962,987,1069,1169,1186,1195,1215],get_all_arrays_in_memori:924,get_all_arrays_on_dev:850,get_framework:59,get_initial_st:[1186,1195],get_min_bas:924,get_min_denomin:924,get_mod_kei:[1198,1199],get_num_dim:[405,666,924],get_referrers_recurs:924,getfullargspec:1069,gist:1169,give:[43,924,989,1212],given:[40,41,43,799,800,835,836,850,883,889,892,893,894,896,899,900,904,924,927,930,936,944,945,959,975,976,985,988,991,992,999,1006,1011,1013,1017,1018,1020,1021,1023,1025,1026,1027,1041,1043,1047,1051,1052,1069,1113,1118,1119,1125,1128,1129,1131,1132,1135,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1175,1176,1215],global:[40,41,42,850,859,860,867,892,893,894,900,907,908,909,924,946,961,962,987,993,994,995,1001,1002,1018,1033,1069,1167,1168,1200,1201],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1169,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],good:43,googl:1169,got:[43,1169],gpu0:43,gpu2:43,gpu:[850,885,888,1069],gpu_is_avail:[403,850,1069],grad:[1169,1202,1206,1211],gradient:[25,40,41,438,439,440,441,850,894,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1037,1065,1066,1067,1068,1169,1202,1203,1204,1205,1206,1207,1211,1215],gradient_descent_upd:[1018,1065,1066,1067,1068],gradient_imag:[168,310,442,574,735,1034],gradienttrack:[1018,1019],graph:[1018,1021,1023,1025,1026,1027,1198,1199],greater:[40,41,924,927,954,1000,1125,1129],green:[40,41,42,1213,1214],grid:[924,980],group:[1034,1039],guid:[43,1169,1170,1215],gym:1169,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1215,half:[924,927,1069,1125,1129],hand:1169,handl:[40,41,42,43,848,849,850,866,868,877,878,889,896,899,1018,1021,1023,1025,1026,1027,1069,1202,1203,1204,1205,1206,1207],happen:43,has:[40,41,43,830,832,837,838,924,1003,1041,1046,1051,1054],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,924],hasattr:1069,have:[40,41,43,799,800,801,802,803,804,805,806,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,833,834,835,836,837,838,840,841,844,845,846,924,939,943,948,949,950,951,957,1003,1018,1024,1032,1051,1058,1069,1169,1211,1212],haven:43,hdf5:[40,41,1198,1199],head:[1150,1161,1186,1197],head_dim:[1186,1197],height:[1034,1039],height_cutoff:[40,41],help:[43,59,357,403,404,850,862,863,864,865,900,1018,1169,1177,1179,1180,1182,1183,1185],here:[43,1169],hidden:[1150,1160,1186,1195],hierarch:[924,941],hierarchi:[40,41],high:[40,41,453,1125,1127,1129],higher:[830,833,1018,1021,1023,1025,1026,1027],highest:[1125,1127],highest_util:1069,highest_util_nod:1069,highli:1169,highlight:1215,hint:43,hkt:1215,hold:[900,904,924,927,930,991,992],host:1169,hot:[924,984],how:[1169,1186,1197,1198,1199,1212,1215],howev:[43,1212],http:1215,hyperbol:[809,810,811,815,828,1051,1056,1057,1062,1064,1142,1149],hypothet:[43,1215],icon:1169,idea:1169,ident:[40,41,43,134,258,405,535,666,924],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[798,805,806,809,827],if_exist:[40,41],ignor:[40,41,1202,1206],ignore_key_error:[40,41],ignore_miss:[1202,1206],ignore_non:[40,41],iii:43,iinfo:[83,216,357,484,612,805],imag:[27,443,444,445,924,974,1035,1036,1037,1038,1039,1040,1150,1151,1152,1153,1154,1156,1157,1169,1215],image_dim:[1034,1038],imkkhk:1215,immedi:[1169,1212,1215],implement:[43,809,810,811,814,815,820,821,822,826,828,840,841,1169,1212,1215],in_featur:[1150,1159],inadvert:43,includ:[40,41,43,830,834,844,845,846,924,927,965,1001,1002,1014,1113,1114,1125,1129,1186,1196,1197,1200,1201,1211],include_deriv:[1113,1115,1122],include_empti:[40,41],include_inf:[40,41,924,965,1014],include_nest:[1113,1114],include_self:[40,41],inclus:[43,1125,1127],incom:[1150,1159],increas:[850,872,876,882,924,940,953,1016,1069,1113,1122],increasingli:1215,increment:[924,970,1069],inde:1169,indent:[40,41,42],independ:[1125,1126],index:[40,41,405,453,837,838,840,841,924,929,958,959,980,1000,1003,1113,1116,1118,1119,1120,1123],index_nest:1113,indic:[40,41,405,418,419,429,430,431,830,834,837,838,840,841,924,929,958,959,967,984,991,992,1113,1114,1116,1118,1119,1120,1121,1123,1124,1125,1126,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199],indices_wher:[134,258,405,666,924],indistinguish:[809,827],inevit:1215,inf:[40,41,830,834,924,965,1014,1051,1054],infer:[799,802,842,843,848,849,924,963,966,989,997,1034,1038,1041,1046,1212,1215],infin:[809,810,811,813,814,815,816,817,820,822,826,827,828,830,834,844,845,846],infinit:[809,827],inform:[805,806,807,1018,1029],init_c:[1150,1160],init_h:[1150,1160],init_on_first_step:[1202,1206],initi:[40,41,42,43,59,357,403,404,850,862,863,864,865,900,1018,1069,1150,1160,1169,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1202,1206],initialz:[1198,1199],inner:[1065,1066,1067,1068],inner_batch_fn:[1065,1066,1067],inner_batch_shap:[1150,1159],inner_cost_fn:[1065,1066,1067],inner_grad_step:[1065,1066,1067,1068],inner_learning_r:[1065,1066,1067,1068],inner_optimization_step:[1065,1066,1067,1068],inner_v:[1065,1066,1067],innermost:[799,803,830,831],inp:1069,inplac:[40,41,924,933,968,972,1004,1018,1021,1023,1025,1026,1027,1175,1176,1202,1203,1204,1205,1206,1207],inplace_arrays_support:[405,924],inplace_decr:[134,258,405,535,666,924],inplace_incr:[134,258,405,535,666,924],inplace_oper:[0,11,12],inplace_upd:[40,41,134,258,405,535,666,924,1175,1176],inplace_variables_support:[405,924],input:[15,18,19,40,41,42,43,799,802,803,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,833,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,859,860,867,868,869,872,873,876,882,894,895,900,904,905,907,908,909,910,911,915,916,924,925,926,929,931,932,933,934,936,937,938,939,940,942,944,945,947,948,949,950,951,952,953,954,955,956,963,965,966,967,969,970,971,973,974,978,979,980,981,988,990,997,998,1000,1003,1004,1005,1006,1008,1009,1010,1011,1013,1014,1016,1018,1022,1024,1029,1033,1034,1035,1036,1037,1038,1040,1041,1044,1046,1048,1049,1050,1051,1054,1056,1057,1058,1062,1063,1064,1065,1066,1067,1068,1069,1125,1126,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1200,1201,1212],input_ax:[850,894,1069],input_channel:[1186,1187,1188,1189,1190,1191,1192,1195,1196],input_queu:1069,inputs_split:1069,insert:[837,838,924,953],insid:43,inspect:1069,inspir:1215,instal:1169,instanc:[15,16,17,18,19,40,41,43,453,850,859,1069,1175,1176,1208,1209],instead:[40,41,43,453,1132,1134,1135,1136,1137,1138,1139,1140,1215],int32:43,int64:[900,904,924,927,930,966,985,1017],int_dtyp:[900,909,919],integ:[40,41,453,805,807,809,812,813,830,834,844,845,846,900,916,924,927,954,990,999,1125,1127,1130],integr:1169,intend:43,inter:1169,interact:1169,interchang:[40,41,924,1005],interest:1169,interfac:[924,930,1212],intermedi:[40,41],intern:[40,41,850,1018,1032,1069,1113,1114,1121,1122,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1208,1209],interpol:[924,974],intersect:[1051,1052],interv:[40,41,844,845,846,924,927,936,975,976,1051,1053,1125,1129],introduc:1215,inv:[739,1041,1215],invalid:[844,845,846],invalid_dtyp:900,invers:[809,810,811,1041,1043,1045,1051,1052,1053,1054,1056,1215],invert:[1041,1043,1045],invest:1215,investig:43,invoc:[848,849],irrespect:1169,is_al:1069,is_arrai:[134,258,405,535,666,924,1069],is_float_dtyp:900,is_int_dtyp:900,is_mean:1069,is_sum:1069,is_vari:[165,305,437,569,729,1018],isfinit:[88,221,362,489,617,809],isinf:[88,221,362,489,617,809],isinst:1069,isnan:[88,221,362,489,617,809],isnumer:1069,issu:[1169,1170],issue_numb:43,item:[15,19,40,41,850,859,860,862,869,871,873,875,881,900,907,924,941,964,1001,1002,1069,1113,1117,1118,1119,1122,1123,1124,1169,1198,1199,1211],iter:[15,16,17,18,19,40,41,42,848,849,850,853,854,856,857,859,860,863,864,871,873,874,875,876,881,894,924,926,934,939,940,966,980,985,988,989,992,997,999,1003,1006,1011,1016,1069,1113,1114,1115,1117,1121,1122],iterbal:[850,871,875,881,1069],its:[453,850,894,924,966,989,1005,1011,1069,1169],itself:[1113,1122],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,351,352,353,354,355,356,357,359,360,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,798,799,800,801,802,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1213,1214],ivy_backend:[40,41],ivy_bay:1215,ivy_test:43,ivyfcmodel:1211,ivyh:[40,41,42],ivymodul:[196,785],jame:1169,jax:[43,1018,1024,1169,1215],jax_concat:1169,jnp:1169,join:[40,41,924,939,1003,1069],journal:1169,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1169,1186,1195,1215],kaimingnorm:[1177,1181],kalman:1215,kalman_filt:1215,kalman_filter_step:1215,kalman_filter_upd:1215,keep:[40,41,850,895,924,1013,1069,1169,1170,1215],keep_inner_v:[1065,1066,1067],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1065,1066,1067],keepdim:[40,41,405,435,446,447,830,834,837,838,842,843,844,845,846,924,1013,1041,1044,1132,1134,1135,1136,1137,1138,1139,1140],kei:[15,16,17,40,41,42,43,850,862,924,941,1065,1066,1067,1069,1113,1116,1120,1150,1161,1162,1169,1175,1176,1186,1197,1202,1206],kept:[40,41,42,1065,1066,1067],kera:1215,kernel:[1150,1160],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,850,859,860,872,876,882,924,928,948,949,950,977,1069,1113,1117,1198,1199],keyword_color_dict:[40,41,42],kind:[805,806,807,1215],kwarg:[15,16,17,40,41,42,59,63,850,859,872,876,882,924,977,1069,1175,1176,1198,1199],kwarg_stateful_idx:[1198,1199],kwargs_clon:1069,kwargs_dist:1069,kwargs_uni:1069,label:[43,1163,1164,1165,1166],lamb:[1018,1025,1169,1202],lamb_upd:1018,lambda:[1069,1202,1205,1207,1211],lar:[1018,1025,1026,1169,1202],larger:[805,806,924,936],largest:[40,41,805,806,807,924,954],lars_upd:1018,last:[40,41,830,831,833,835,836,840,841,844,845,846,924,927,943,974,999,1003,1041,1044,1132,1137,1139,1142,1147,1150,1160,1186,1196],later:[40,41,924,935],latest:[1186,1195],layer:[1018,1021,1023,1025,1027,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1169,1177,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1215],layer_norm:1167,layernorm:[1169,1200],layerwis:[1018,1026,1202,1205],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1113,1114,1121],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1142,1143,1144],leaky_relu:[777,1142],learn:[842,843,1018,1021,1023,1025,1026,1027,1041,1046,1065,1066,1067,1068,1125,1131,1169,1202,1203,1204,1205,1206,1207,1212,1215],learnabl:[1167,1168,1200,1201],least:43,leav:[15,18,19,40,41,1113,1114,1115,1121,1122],left:[40,41,43,837,838,1041,1044,1132,1134,1135,1136,1137,1138,1139,1140,1169],leftmost:[40,41],len:1069,length:[40,41,42,924,927,989,1000,1011],lenton2021ivi:1169,lenton:1169,less:[40,41,43,88,221,362,489,617,809,810,813,820,822,827,830,834,1069,1125,1129],less_equ:[362,617],less_util_node_str:1069,let:[1212,1215],level:1169,librari:[809,823,824,1169,1211,1215],lightweight:1169,like:[43,1018,1024,1125,1129,1169,1211,1212,1215],likewis:43,limit:[40,41,42,43,805,806,807,924,936,937,938],linalg:[29,1042,1043,1044,1045,1046,1047,1169],line:43,linear0:[1169,1211],linear1:1169,linear2:1211,linear:[924,956,974,1041,1142,1143,1144,1145,1150,1158,1169,1186,1187,1188,1189,1190,1191,1192,1193,1211],linear_algebra:[446,447,448,449,830,831,832,833,834],linear_resampl:[134,258,405,535,666,924],linearli:[924,956],link:[43,1169],linspac:[134,258,405,535,666,924,927],list:[15,18,19,40,41,351,352,353,356,799,800,801,804,835,836,844,845,846,850,859,860,869,870,872,873,874,876,879,880,894,924,927,930,932,980,998,999,1008,1013,1065,1066,1067,1069,1113,1114,1115,1117,1121,1122,1150,1151,1152,1153,1154,1155,1156,1157,1169,1170,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193],list_join:[40,41,42],list_stack:[40,41],liter:[830,834],littl:1212,load:[40,41],loaded_kwarg:1069,loader:1169,local:43,local_set:[924,964],locat:[43,1125,1126],log10:[88,362,489,617,809],log1p:[88,362,489,617,809],log2:[88,362,489,617,809],log:[749,809,821,830,832,924,976,1051,1069,1163,1164,1165,1166],logarithm:[809,820,821,822,830,832,1051,1061],logdet:[830,832],logic:[31,809,823,824,844,845,846,1049,1050,1169],logical_and:[319,746,1048],logical_not:[88,221,362,489,617,809],logical_or:[88,319,362,489,617,746,809,1048],logit:[1163,1166],logspac:[134,258,405,535,666,924],look:[43,1212,1215],loop:[1065,1066,1067,1068],loss:[1164,1165,1166,1169,1211],loss_fn:[1169,1211],lot:1212,low:[40,41,453,1125,1127,1129],lower:[40,41,43,799,803,924,979,1125,1129],lower_depth:[1198,1199],lowest:[15,18,19,40,41,1113,1122,1125,1127],lstm:[1150,1160,1169,1186],lstm_updat:[43,1150],machin:[805,806,807,842,843,1041,1046,1125,1131,1169,1212,1215],made:43,mai:[809,823,824,840,841,924,927,947,951,1169,1212,1215],main:[799,803,830,831,924,966,1169],mainli:1169,maintain:[43,840,841],make:[43,453,850,1069,1169,1212],maml:[1065,1066,1067],maml_step:1065,manag:[850,1069],manhattan:[830,834],mani:[40,41,43,924,999,1169],manipulation_funct:[835,836],manner:[15,18,19,40,41,43,1113,1122],manual:[1113,1114,1121,1215],map:[40,41,42,850,859,1069,1113,1118,1119,1122,1186,1197,1211],map_cont:[40,41],map_nest_at_index:1113,map_nest_at_indic:1113,map_sequ:[40,41],mapper:[850,859,860,1069],mark:43,mask:[1150,1161,1162],master:43,match:[40,41,924,977],match_kwarg:924,math:[33,452,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1169],mathbb:[1041,1047],mathbf:[1041,1047],mathemat:[798,830,834],matmul:[43,258,405,535,666,924,1215],matplotlib:1212,matric:[799,803,830,831,1150,1159],matrix:[40,41,799,803,830,831,924,926,937,978,1041,1042,1043,1044,1045,1046,1047,1150,1159,1186,1196],matrix_norm:[40,41,172,314,446,578,739,1041],matter:1169,max:[40,41,357,805,806,807,924,937,938,949,979,991,992,1069,1132,1134,1202,1204],max_batch_s:[40,41],max_chunk_s:[850,894,1069],max_depth:[40,41,850,854,857,864,872,876,882,924,964,1069,1113,1122],max_dev_dim_step_ratio:850,max_freq:[924,956],max_length:[40,41],max_node_dim_step_ratio:1069,max_norm:[40,41,924,937,938],max_split_factor_step_s:[850,1069],max_trust_ratio:[1018,1025,1202,1204],maxim:[1169,1212,1215],maximis:1169,maximum:[40,41,42,666,837,838,850,872,876,882,894,924,936,937,938,956,1018,1025,1069,1113,1122,1132,1134],mayb:[15,18,19],mdi:1069,mean:[40,41,453,850,879,880,881,882,894,924,949,1065,1066,1067,1068,1069,1113,1117,1125,1128,1132,1135,1138,1140,1177,1211,1215],measur:[1150,1161,1186,1197],mech:1169,mechan:[1169,1215],medic:1215,member:43,memori:[850,866,889,894,896,899,1069,1150,1160,1169],mention:43,merg:43,merge_with_upstream:43,meshgrid:[258,405,666,924],messag:[1213,1214],meta:[35,1066,1067,1068,1169],method:[40,41,42,43,453,924,930,941,980,991,992,1018,1025,1026,1069,1113,1114,1121,1122,1169,1186,1197,1198,1199,1212],might:[924,947,1215],min:[40,41,121,357,397,522,652,805,806,807,830,834,842,924,949,981,991,992,1001,1041,1046,1069,1132,1136],min_bas:[924,1002],min_denomin:[924,1001],min_dev_dim_s:850,min_node_dim_s:1069,min_sf_tune_step:[850,1069],min_unit_dev_tune_step:850,min_unit_node_tune_step:1069,mind:1169,mini:[1167,1168,1200,1201],minimum:[40,41,666,842,843,850,900,904,924,927,929,930,936,961,962,993,994,1001,1002,1069,1132,1136],miss:[1202,1206],ml_framework:[924,927,1041,1046],mod:[924,955],mod_depth:[1198,1199],mod_height:[1198,1199],mod_with_top_mod_key_chain:[1198,1199],mode:[40,41,446,448,830,833,848,849,850,879,880,881,882,894,1041,1046,1069,1212],model:[1169,1211],modul:[40,41,42,59,924,982,1069,1169,1170,1172,1173,1174,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1200,1201,1208,1209,1215],moment:[1018,1020,1021,1025,1202,1203,1204],more:[43,835,836,924,1003,1069,1169,1212,1215],more_util_node_str:1069,most:[40,41,1041,1046,1169,1215],move:[40,41,43,850,895,1069],much:[43,1169,1215],multi:[453,924,982,1150,1161,1186,1197],multi_head_attent:1150,multi_index_nest:1113,multi_map:[40,41],multi_nod:1069,multidev:[850,861,862,863,882],multidevcontain:[40,41],multidevic:[850,859],multidevit:[850,853,856,859,860,864],multidevitem:[850,852,855],multidevnest:[850,854,857],multiheadattent:[1169,1186],multinod:[1069,1073],multinodecontain:1069,multinodeit:1069,multinodeitem:1069,multinodenest:1069,multinomi:[178,323,453,584,761,1125],multipl:[40,41,844,845,846,924,977,999,1041,1043,1132,1134,1135,1136,1137,1138,1140,1167,1168,1186,1196,1212],multipli:[40,41,924,944,1132,1137],multiprocess:[40,41,42,405,666,850,859,924,1069],must:[40,41,42,43,799,800,801,802,803,804,809,810,811,812,813,814,815,816,817,819,820,822,823,824,826,827,828,830,831,834,835,836,840,841,842,843,844,845,846,850,879,880,881,882,894,924,927,939,941,943,951,979,981,992,1003,1051,1055,1058,1069,1125,1130,1202,1206],mutabl:[1113,1115,1122],mutlidevic:[850,859],mutlinod:1069,mw_tm1:[1018,1021,1025],mx_concat:1169,mxn:[799,803,830,831],mxnet:[1169,1215],my_func:43,mymodel:1169,name:[43,848,849,1211],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1212],nan:[40,41,43,798,809,810,811,813,814,815,816,818,820,822,826,827,844,845,846,924,965,1014],nativ:[15,17,18,19,40,41,43,850,866,868,877,878,889,896,899,900,905,912,913,1069,1169,1170,1175,1176],native_modul:[1175,1176],native_module_class:[1175,1176],nativearrai:[15,18,19,43,799,802,803,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,832,833,834,835,836,837,838,840,841,842,843,844,845,846,850,868,894,895,900,904,910,915,916,924,925,926,927,929,930,931,932,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,958,959,963,965,966,967,974,975,976,978,979,980,981,984,985,988,989,990,991,992,997,999,1000,1003,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1069,1113,1115,1122],natur:[809,821,830,832,1051,1061,1215],ncdhw:[1150,1155,1156,1186,1191,1192],nchw:[1150,1153,1154,1157,1186,1189,1190,1193],ncw:[1150,1151,1152,1186,1187,1188],ndarrai:[351,352,353,354,355,356,357,359,360,453,924,1009],ndhwc:[1150,1155,1156,1186,1191,1192],nearest:[924,990],need:[43,924,937,938,1150,1152,1154,1156,1169,1186,1188,1190,1192,1215],neg:[40,41,88,221,362,489,617,809,816,817,830,834,835,836,844,845,846,1132,1137,1139,1142,1144],negative_slop:1177,neither:1069,nest:[15,16,17,18,19,40,41,42,850,872,876,882,924,930,1008,1065,1066,1067,1069,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1198,1199,1202,1203,1204,1205,1206,1207],nested_indices_wher:1113,nested_map:[1069,1113],network:[1150,1159,1169,1170,1172,1186,1198,1199,1215],neural:[1150,1169,1172,1186,1211],never:43,new_node_percent_mem:1069,new_node_util:1069,new_node_utils_kei:1069,new_std:[1167,1168,1200,1201],newli:[43,848,849,924,934,935],newlin:[40,41,42],newshap:[924,934,989],next:[805,806,1069,1198,1199,1202,1203,1204,1205,1206,1207],nhwc:[1150,1153,1154,1157,1186,1189,1190,1193],node:[40,41,1113,1114,1121],node_clon:1069,node_dist:1069,node_dist_arrai:1069,node_dist_it:1069,node_in:1069,node_mapp:1069,node_str:1069,node_to_str:1069,node_util:1069,nodedistit:1069,nodedistitem:1069,nodedistnest:1069,nodemanag:[1069,1080],nodemapp:1069,nodemappermultiproc:1069,noinspect:[851,901,902,903,1019,1069],non:[40,41,809,823,824,830,834,844,845,846,848,849,900,914,1198,1199,1202,1206,1212],none:[40,41,42,43,59,61,64,351,352,353,354,356,403,405,406,408,410,417,418,419,420,427,428,429,430,431,432,433,434,436,446,447,453,454,799,800,801,802,804,805,806,807,830,834,835,836,837,838,842,843,844,845,846,848,849,850,859,860,866,867,892,893,894,895,900,907,908,909,924,927,930,946,947,952,957,958,959,964,966,968,969,970,971,972,975,976,982,984,985,988,991,992,993,994,999,1000,1001,1002,1011,1012,1017,1018,1021,1023,1025,1026,1027,1033,1034,1038,1041,1044,1046,1065,1066,1067,1068,1069,1113,1114,1117,1121,1122,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1152,1154,1156,1159,1160,1161,1162,1167,1168,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],norm:[40,41,830,834,924,937,938,1041,1044,1168,1169,1201,1202,1204],normal:[1125,1128,1167,1168,1200,1201],normalized_idx:[1167,1168],normalized_shap:[1200,1201],notat:[40,41,1132,1133],note:[43,1041,1046],noth:[40,41,1212],notimplementederror:1069,now:[40,41,43,850,895,924,925,1069,1169,1186,1197,1198,1199,1211,1212,1215],np_concat:1169,np_finfo:357,ns_tune_step:1069,num:[405,427,428,924,975,976],num_arrai:[40,41],num_arrays_in_memori:924,num_arrays_on_dev:850,num_band:[924,956],num_channel:[1186,1193],num_chunk:1069,num_chunks_floor:1069,num_class:[1125,1126],num_cpu_cor:850,num_gpu:[127,403,850,1069],num_head:[1150,1161,1186,1197],num_kei:[1150,1161,1162],num_lay:[1186,1195],num_or_size_split:[40,41,405,432,924,999],num_output:1069,num_queri:[1150,1161,1162],num_sampl:[405,426,453,454,924,974,1034,1035,1125,1126],num_task:[1065,1066,1067,1068],number:[40,41,42,798,805,806,807,809,813,830,832,833,844,845,846,848,849,850,886,887,888,900,911,915,916,924,927,936,940,953,956,963,966,974,975,976,979,983,988,999,1006,1010,1014,1016,1065,1066,1067,1068,1069,1125,1126,1130,1132,1134,1135,1136,1138,1140,1150,1161,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1212,1215],numer:[43,809,813,816,817,818,819,823,824,825,924,961,962,993,994,1001,1002,1051,1058,1177],numhead:[1150,1161],numpi:[40,41,43,351,352,353,354,355,356,357,359,360,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,830,833,924,1009,1041,1046,1132,1133,1169,1211,1212,1215],nwc:[1150,1151,1152,1186,1187,1188],obj:[40,41],object:[40,41,42,59,357,805,806,850,900,904,924,927,930,1018,1113,1116,1118,1119,1120,1123,1124,1125,1131,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199],object_in:[405,408,924,930],observ:1069,obvious:43,occupi:[805,806,807,924,991,992],off:[830,831,924,927],offer:1169,offset:[830,831,1167,1168],often:1212,old:[40,41],on_init:[1186,1197,1198,1199],onc:[43,850,894,1069,1125,1126,1169],one:[40,41,43,830,834,835,836,837,838,850,879,880,881,882,894,900,906,924,966,977,984,991,992,1000,1003,1041,1044,1069,1132,1133,1134,1135,1136,1137,1138,1139,1140,1169,1212,1215],one_hot:[134,405,535,666,924],onearrai:[924,953],ones:[40,41,77,210,351,478,606,799,802,924,966,984,1169],ones_lik:[77,210,351,478,606,799],ongo:43,onli:[40,41,43,453,809,823,824,835,836,850,1041,1046,1069,1113,1114,1115,1121,1202,1203,1204,1205,1206,1207,1211,1212],onlin:[43,1169],onto:[850,879,880,895,1069,1113,1117,1122],oom:[850,1069],open:[924,927,1125,1129,1169,1215],opencv:1212,oper:[40,41,43,924,933,948,949,950,975,976,1004,1018,1021,1023,1025,1026,1027,1048,1049,1050,1150,1151,1152,1153,1154,1155,1156,1157,1159],operand:[40,41,809,810,811,813,814,815,820,822,826,827,1132,1133],oppos:[924,956],optim:[850,1018,1021,1023,1025,1026,1027,1065,1066,1067,1068,1069,1169,1203,1204,1205,1207,1211,1215],optimizer_upd:1018,option:[15,18,19,40,41,42,43,351,352,353,354,356,799,800,801,802,804,830,834,835,836,837,838,842,843,844,845,846,848,849,850,859,860,868,872,873,874,875,876,879,880,881,882,889,892,893,894,895,899,900,905,910,914,923,924,926,927,929,930,937,938,939,944,946,947,956,957,958,959,963,965,966,973,974,975,976,977,980,982,984,985,988,991,992,995,997,999,1000,1001,1002,1003,1011,1013,1014,1017,1018,1021,1023,1024,1025,1026,1027,1029,1034,1038,1041,1044,1046,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212],ord:[830,833,834],order:[40,41,42,43,830,834,835,836,840,841,1018,1021,1023,1025,1026,1027,1041,1044,1065,1066,1067,1208,1209],ordered_node_util_kei:1069,org:1215,organ:43,origin:[40,41,42,924,989,1017,1041,1044],other:[40,41,43,848,849,924,926,927,966,1018,1022,1125,1129,1169,1211,1212,1215],otherwis:[15,16,17,18,19,40,41,809,816,817,818,830,834,837,838,844,845,846,850,867,900,907,908,909,924,933,1011,1012,1015,1018,1024,1029,1033,1065,1066,1067,1069,1132,1134,1135,1136,1138,1140],our:[43,1169,1215],out:[43,453,799,801,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,826,827,830,831,832,834,835,836,837,838,840,841,844,845,846,924,927,1051,1054,1150,1158,1160,1169,1186,1194],out_feat_dim:[1150,1161],out_featur:[1150,1158,1159],out_i:[809,816,817,818],outdat:1215,outer:[1065,1066,1067,1068],outer_batch_fn:[1065,1066,1067],outer_batch_shap:[1150,1159],outer_cost_fn:[1065,1066,1067],outer_v:[1065,1066,1067],outlin:1212,output:[40,41,43,799,800,801,802,804,835,836,850,859,860,894,924,927,935,957,966,988,1006,1018,1022,1051,1055,1069,1125,1127,1128,1129,1150,1152,1154,1156,1158,1160,1161,1162,1169,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197],output_ax:[850,894,1069],output_axi:1069,output_channel:[1186,1187,1188,1189,1190,1191,1192,1195,1196],output_queu:1069,output_shap:[1150,1152,1154,1156,1186,1188,1190,1192],outsid:[924,936],over:[40,41,830,834,844,845,846,1041,1044,1125,1129,1132,1134,1135,1136,1138,1140,1167,1168,1200,1201],overal:1212,overflow:[924,927],overhead:1212,overrid:[924,984,1017],overriden:[1202,1206],overwrit:[40,41,850,894,1069],overwrite_at_key_chain:[40,41],own:[1169,1212,1215],packag:[43,1212],pad:[924,940,956,1016,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],pad_width:[405,924,940,1016],page:1169,pair:[1150,1162],parallel:[850,859,860,1069],parallelis:[850,859,860,1069],param:[40,41,42,405,418,419,799,800,802,837,838,842,843,850,894,924,925,958,959,984,985,1069,1198,1199,1211],paramet:[15,16,17,18,19,40,41,42,43,799,800,802,809,817,825,828,830,831,833,842,843,848,849,850,859,860,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,889,892,893,894,895,896,899,900,904,905,906,910,911,912,913,914,915,916,923,924,926,927,929,930,931,932,933,934,935,936,937,938,939,940,942,943,944,945,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,969,970,971,973,974,975,976,977,978,979,980,981,982,985,988,989,990,991,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1029,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],parameter:[1125,1128,1129],pardo:1169,pars:[924,941],part:[799,803,1018,1021,1023,1025,1026,1027,1051,1054,1169,1198,1199,1212],partial:[40,41,43,1198,1199],particl:1215,particular:[43,1215],pass:[40,41,42,43,850,859,894,900,905,924,935,1018,1032,1065,1066,1067,1069,1175,1176,1198,1199,1202,1206,1208,1209],pattern:[40,41,924,948,949,950],peopl:43,per:[850,1069,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],percent_used_mem_on_dev:850,percent_used_mem_on_nod:1069,percentag:[850,889,1069],perf_count:1069,perform:[40,41,43,844,845,846,850,924,929,944,948,949,950,969,970,971,974,975,976,1018,1021,1023,1025,1026,1027,1034,1035,1065,1066,1067,1068,1069,1113,1118,1119,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1158,1160],period:43,permissable_step:1069,permit:43,permut:[453,924,1005,1011],perpendicular:[924,943],person:[43,1169],physci:1215,pickl:[40,41,1069],pickle_filepath:[40,41],pinv:[314,739,1041],pip:1169,pipelin:1211,pkk:1215,pkkm1:1215,pkm1km1:1215,place:[40,41,43,799,800,801,802,804,850,895,924,953,957,969,970,971,1069,1202,1203,1204,1205,1206,1207],placehold:[43,1113,1122],pleas:[43,453,1041,1046],point:[43,798,799,800,801,804,805,806,809,810,811,813,814,815,820,822,826,827,828,830,834,900,915,924,927,1051,1058],popul:[40,41,1125,1126],popular:1215,population_s:[453,454,1125,1126],portabl:[1169,1170],posit:[15,16,17,805,806,809,816,817,844,845,846,850,872,876,882,924,925,927,953,956,1069,1125,1130,1175,1176],possibi:[40,41],possibl:[43,924,977,1008,1034,1039,1215],post:[1167,1168],post_shap:[40,41],power:[924,961,993,1002,1177],practic:1169,pre:[850,1069,1169],pre_shap:[40,41],precis:[805,806,809,827],pred:[1163,1164,1165,1166],predict:[1163,1164,1165,1166,1215],preprint:1169,present:[40,41],preserv:[40,41,42,835,836,1018,1029],preserve_typ:[40,41,437,440,1018,1029],press:1169,prevent:[43,1018,1020,1021,1025,1069,1202,1203,1204],prevet:43,previou:[1018,1021,1025],previous:[924,935],prime:1169,print:[40,41,42,850,890,924,986,1169,1211],print_all_arrays_in_memori:924,print_all_arrays_on_dev:850,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1202,1206],prob:[453,454,1125,1126,1150,1158,1186,1194],probabl:[1125,1126,1150,1158,1186,1194],problem:[43,1215],process:[43,850,859,860,889,899,924,982,1069],process_specif:[850,889,899,1069],prod:[40,41,924,949],produc:[850,859,860,1069],product:[40,41,924,943,944,978,1132,1133,1150,1161,1162,1186,1197],profil:[127,252,403,528,658,850,1069],progress:43,project:[1169,1211,1212,1215],promot:[809,810,811,812,814,815,820,822,826,827,830,834,1051,1058],prompt:1169,properti:[40,41,357,850,862,1069,1198,1199,1202,1203,1204,1205,1207],provid:[40,41,43,835,836,837,838,844,845,846,848,849,850,867,900,907,908,909,914,923,924,947,984,992,1017,1018,1021,1023,1025,1026,1027,1033,1069,1169,1186,1195,1202,1203,1204,1205,1206,1207,1212],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1041,1045],pull:[1169,1170],pure:[40,41,1169,1215],purpos:[43,1215],put:1069,pybroadexcept:1069,pyprotectedmemb:1069,pyshadowingnam:[851,901,902,903,1019,1069],python:[40,41,850,889,899,924,927,1069,1169],pytorch:[1018,1021,1023,1025,1026,1027,1041,1046,1169,1202,1203,1204,1205,1206,1207,1211,1212,1215],pyunresolvedrefer:1069,quadrant:[1051,1055],qualiti:43,queri:[40,41,850,883,893,1069,1150,1161,1162,1186,1197],query_dim:[1186,1197],query_kei:[40,41],queue:[40,41,42,850,859,860,924,987,995,1069],queue_class:[850,859,860,1069],queue_load_s:[40,41,42],queue_timeout:[40,41,42,924,1069],quick:[453,1169],quickli:[43,1211],radian:[809,814,826,1051,1052,1053,1055,1063],rai:[1051,1052],rais:[40,41,844,845,846,924,933,961,993,1000,1002,1012,1069,1198,1199,1202,1206],ram:[850,889,896,899,1069],randint:[178,323,453,584,761,1125],random:[37,40,41,454,1126,1127,1128,1129,1130,1131,1169],random_crop:1034,random_norm:[178,323,453,584,761,1125],random_uniform:[178,323,453,584,761,1125],randomli:[453,1034,1038,1150,1158,1186,1194],rang:[453,924,927,975,976,1051,1055,1069,1169,1211,1215],rank:[830,834,844,845,846,924,940,1013,1016],rate:[1018,1021,1023,1025,1026,1027,1065,1066,1067,1068,1186,1197,1202,1203,1204,1205,1206,1207],rather:[40,41,43,850,894,924,927,973,1018,1024,1069],ratio:[850,1018,1025,1034,1039,1069,1202,1204],raw:[40,41,1041,1046],raw_delta:1069,reach:[43,850,872,876,882,1069,1113,1122],read:[40,41],readi:[1069,1211],real:[1051,1052,1054],realiti:1212,rearrang:[40,41,924,948,950],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1065,1067],receiv:[43,850,859,860,924,928,977,1069,1186,1196],receivess:[850,1069],receivng:[1065,1068],recev:[1065,1066,1067],recognit:1215,recommend:[809,823,824,1169],rectifi:[1142,1144,1145],recurr:[1150,1160],recurrent_bia:[1150,1160],recurrent_kernel:[1150,1160],recurs:[40,41,1113,1114,1115,1121,1122],reduc:[40,41,837,838,844,845,846,850,894,924,949,1041,1046,1069,1132,1134,1135,1136,1137,1138,1139,1140],reduce_max:[40,41,185,328,455,589,768,1132],reduce_mean:[40,41,185,328,455,589,768,1132,1169,1211],reduce_min:[40,41,185,328,455,589,768,1132],reduce_prod:[40,41,185,328,455,589,768,1132],reduce_std:[40,41,328,1132],reduce_sum:[40,41,185,328,455,589,768,1069,1132],reduce_var:[40,41,185,328,455,589,768,1132],reduct:[39,40,41,405,430,431,844,845,846,924,949,991,992,1133,1134,1135,1136,1137,1138,1139,1140,1169],refactor:43,refer:[43,809,821,844,845,846,1018,1020,1021,1041,1047,1186,1196,1215],reflect:43,reflected_oper:[0,13,14],regard:[850,1069],regardless:[40,41,848,849],register_paramet:1211,reimplement:1215,rel:[830,831,835,836,840,841,1018,1021,1023,1025,1026,1027],rel_slice_obj:1069,relat:43,relev:[1202,1203,1204,1205,1206,1207],relu:[777,1142,1143,1144,1169,1211],remain:[43,924,989,1113,1117],remaind:[40,41,924,955,999],remov:[40,41,43,830,831,837,838,924,1000,1065,1066,1067],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,835,836],rep:[924,1006],repeat:[40,41,43,258,666,924,950,1006,1069,1212],repeated_config_check:[850,1069],repeatedli:[1113,1120],repetit:[40,41,924,988,1006],replac:[40,41,43,453,454,924,936,991,992,1125,1126],repo:[43,1169],repositori:43,repres:[43,809,810,811,815,828,830,832,900,906,911,1150,1159],represent:[40,41,42,43,798,805,806,807,809,812,850,877,878,900,906,912,913,924,998,1008,1069],reptil:[1065,1068],reptile_step:1065,request:[1169,1170],requir:[43,809,827,848,849,900,904,924,927,930,1175,1176],resampl:[924,974],reserv:43,reshap:[40,41,453,666,924],reshape_lik:[40,41],respect:[809,812,819,824,924,951,1018,1020,1021,1022,1023,1025,1026,1027,1041,1046,1051,1058,1065,1066,1067,1068],respond:43,respons:[43,1069],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,830,831,834,837,838,844,845,846,850,859,924,927,951,991,992,1003,1041,1044,1048,1049,1050,1051,1058,1069,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1169],ret:1069,ret_dict:1069,ret_fn:[850,859,860,1069],retain:[1018,1022],retain_grad:[437,438,1018,1022],retreiv:1069,retrn:[924,998],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1065,1066,1067,1068],return_sequ:[1186,1195],return_st:[1186,1195],rev:[924,947],revers:[40,41,835,836,924,947,1011],review:43,right:[40,41,43],rk_e:1215,robot:1169,ronald:1169,root:[43,809,827],round:[258,405,666,809,813,827,924,927,1069],row:[924,966,1125,1126],rule:[924,927,1051,1058],run:[43,850,859,1018,1020,1021,1025,1065,1066,1067,1068,1069,1169,1170,1186,1197,1198,1199],safe:[850,859,1069],safety_factor:[850,1069],same:[15,16,17,40,41,43,799,802,803,809,813,830,831,833,835,836,837,838,840,841,850,859,860,894,895,900,904,924,925,939,954,955,958,959,984,990,991,992,1003,1017,1018,1024,1029,1051,1054,1065,1066,1067,1069,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1169,1186,1187,1188,1189,1190,1191,1192,1193,1211,1215],same_arrai:[40,41],sampl:[924,974,1034,1035,1125,1126,1128,1129,1150,1158,1169,1186,1194],satisfi:[924,930,1041,1043,1047],save:[40,41,924,996,1007,1034,1036,1198,1199],save_dir:[403,404,850,865,1069],save_weight:[1198,1199],scalar:[830,834,924,936,984,1010,1014],scale:[850,892,893,1018,1026,1069,1150,1158,1161,1162,1167,1168,1186,1194,1197,1202,1205],scaled_dot_product_attent:1150,scatter:[924,984,991,992],scatter_flat:[134,258,405,535,666,924],scatter_nd:[134,258,405,535,666,924],scene:[1018,1021,1023,1025,1026,1027],schemat:1169,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[837,838],second:[40,41,809,812,819,824,830,831,850,881,924,931,943,951,987,995,1005,1018,1020,1021,1025,1065,1067,1069,1202,1203,1204],secondli:1215,sector:[809,810,811],see:[59,357,403,404,453,809,812,819,824,830,834,844,845,846,850,862,863,864,865,900,924,927,975,976,1018,1051,1058,1169,1177,1179,1180,1182,1183,1185],seed:[40,41,178,453,761,1125],seed_valu:[40,41,453,1125,1130],seem:1169,seen_set:[924,964],select:[924,930,1000,1212,1215],self:[40,41,59,357,403,404,850,862,863,864,865,900,1018,1069,1169,1177,1179,1180,1182,1183,1185,1202,1206,1211,1215],sent:1069,seper:[43,924,956],seq:[40,41,42,1132,1133,1198,1199],sequenc:[15,16,17,40,41,42,43,453,848,849,850,859,860,869,870,871,872,873,874,875,876,879,880,894,900,904,924,927,930,932,934,939,940,966,977,980,985,988,989,992,999,1003,1006,1011,1016,1018,1022,1034,1038,1039,1041,1044,1069,1113,1124,1125,1127,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1198,1199,1200,1201,1202,1206,1208,1209],sequenti:1169,seri:43,set:[15,18,19,40,41,837,838,840,841,850,879,880,892,893,894,924,926,946,966,993,994,995,996,1018,1021,1023,1024,1025,1026,1027,1041,1044,1069,1113,1114,1121,1123,1124,1125,1126,1130,1132,1134,1135,1136,1137,1138,1139,1140,1169,1186,1195,1202,1203,1204,1205,1206,1207,1212,1215],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:850,set_default_dtyp:900,set_default_float_dtyp:900,set_default_int_dtyp:900,set_default_nod:1069,set_exception_debug_mod:44,set_framework:[40,41,43,59,1069,1169,1211,1212,1215],set_ivy_backend:[40,41],set_min_bas:924,set_min_denomin:924,set_nest_at_index:1113,set_nest_at_indic:1113,set_queue_timeout:924,set_split_factor:[850,1069],set_stat:[1202,1203,1204,1205,1206,1207],set_tmp_dir:924,set_with_grad:1018,setter:1069,sever:1215,sgd:[1169,1202],shape0:1069,shape:[40,41,43,351,352,353,356,405,417,431,453,666,799,800,801,802,803,804,830,831,835,836,837,838,840,841,850,862,900,904,924,925,934,939,940,953,954,955,957,959,963,966,984,985,988,989,990,991,992,998,1000,1003,1016,1017,1034,1038,1041,1043,1046,1051,1054,1055,1069,1125,1127,1128,1129,1132,1133,1150,1152,1154,1156,1186,1188,1189,1190,1191,1192,1193,1200,1201],shape_slic:[40,41],shape_to_tupl:924,share:[40,41,1169,1212],shift:1069,should:[40,41,42,43,453,799,803,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,834,837,838,848,849,850,924,934,935,941,984,989,1018,1021,1023,1025,1026,1027,1051,1058,1069,1132,1133,1169],show:[40,41,1169,1215],show_mod_in_top_mod:[1198,1199],show_structur:[1198,1199],show_sub_contain:[40,41],show_v:[1198,1199],show_v_in_top_v:[1198,1199],shown:[40,41],shp:1069,shuffl:[40,41,178,453,761,1125],shuffle_h5_fil:[40,41],side:43,sigmoid:[777,1142,1169,1211],sign:[830,832],signatur:[43,59,357,403,404,405,437,442,446,450,451,453,850,862,863,864,865,900,1018,1177,1179,1180,1182,1183,1185],signific:1215,similar:[43,1150,1161,1186,1197],similarli:[1041,1046],simpl:[43,924,952,1169,1212,1215],simpler:43,simplest:1212,simpli:[40,41,43,1169,1212,1215],simultan:1169,sin:[88,221,362,489,617,809,924,956,1051,1063,1212],sinco:1212,sine:[809,811,826,1051,1053,1062],singl:[40,41,848,849,850,859,860,879,880,881,882,924,1000,1010,1014,1034,1039,1069,1125,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1169,1212,1215],singleton:[830,834,844,845,846],singular:[830,833],sinh:[749,1051],siren:[1169,1177],situat:43,size:[40,41,42,405,430,830,831,833,837,838,844,845,846,850,873,874,875,876,892,893,894,924,927,934,975,976,991,999,1034,1038,1041,1044,1069,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1186,1187,1188],size_ordered_arrai:[40,41],skew:[1041,1047],skinv:1215,skip:[40,41],slice:[40,41,924,958,959,1069,1113,1120],slice_kei:[40,41],slice_obj:[40,41,1069],slice_via_kei:[40,41],slide:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],slodget:830,slogdet:[109,235,385,510,640],slope:[1142,1144],small:[1163,1164,1165,1166,1167,1168,1169,1200,1201,1212],smaller:[924,936],smallest:[40,41,805,806,807,809,813,924,929],smallest_norm:[357,805,806],softmax:[194,464,777,1142,1150,1161,1162],softplu:[777,1142],solut:43,solv:1215,some:[40,41,43,924,927,1018,1020,1021,1023,1025,1026,1027,1032,1150,1158,1169,1186,1194,1212,1215],some_backend:43,some_namespac:43,someth:[43,1215],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,830,833,841,1069],sort_by_kei:[40,41],sorting_funct:[840,841],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,351,352,353,354,355,356,357,359,360,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,799,800,801,802,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,852,853,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1213,1214,1215],space:[924,927,956,975,976],spars:[1163,1166],sparse_cross_entropi:1163,spawn:[924,982],special:[43,809,810,811,813,814,815,820,822,826,827],specif:[40,41,43,809,823,824,850,892,924,941,948,949,950,982,1065,1066,1067,1068,1069,1125,1131,1169,1198,1199,1211,1212],specifc:[1125,1126],specifi:[40,41,799,800,801,803,804,830,831,834,835,836,837,838,840,841,844,845,846,850,869,870,871,872,873,874,875,876,879,880,884,886,890,893,894,895,900,904,906,924,927,929,930,936,939,940,957,958,959,965,975,976,1003,1013,1016,1041,1044,1069,1113,1118,1119,1123,1124,1132,1133,1134,1135,1136,1137,1138,1139,1140],sphinx:43,split:[40,41,134,258,405,535,666,850,859,873,874,875,876,892,893,894,924,977,1069],split_arg:1069,split_factor:[850,859,1069],split_func_cal:[850,1069],split_siz:1069,spread:[850,882,1069],sqrt:[88,221,362,489,617,809,830,834],squar:[809,827,830,832,924,966,1041,1043],squeez:[134,258,405,535,666,924],stabil:[840,841,924,1001,1002],stabl:[840,841,924,961,962,993,994,1001,1002],stable_divid:924,stable_pow:924,stack:[40,41,258,666,799,803,830,831,924,1034,1039,1113,1114,1121,1186,1195],stack_imag:[168,310,442,574,735,1034],stacked_dim_s:1069,stage:43,standard:[40,41,805,806,1125,1128,1132,1138,1167,1168,1169,1170,1200,1201],start:[40,41,43,403,404,405,406,427,428,453,850,865,924,927,975,976,1069,1169,1212],starting_index:[40,41],starting_split_factor:[850,1069],state:[1069,1150,1160,1169,1172,1173,1174,1175,1176,1177,1179,1180,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211],statement:1212,static_argnam:[405,410,848,849],static_argnum:[405,410,848,849],statistical_funct:[842,843],std:[453,1125,1128],step:[40,41,405,406,850,924,927,975,976,1018,1020,1021,1023,1025,1026,1027,1065,1066,1067,1068,1069,1169,1202,1203,1204,1205,1206,1207,1211,1215],stephen:1169,stick:1169,still:[40,41,43],stochast:[1202,1207],stop:[40,41,403,404,405,406,427,428,850,865,894,924,927,975,976,1018,1021,1023,1025,1026,1027,1029,1065,1066,1067,1068,1069,1202,1203,1204,1205,1206,1207],stop_gradi:[40,41,305,437,569,729,850,894,1018,1021,1023,1025,1026,1027,1065,1066,1067,1068,1069,1202,1203,1204,1205,1206,1207],stopiter:1069,store:[40,41,924,956,999,1018,1032,1198,1199],store_var:[1198,1199],str:[15,16,17,40,41,42,43,351,352,353,354,356,357,359,360,799,802,805,806,807,848,849,850,859,860,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,894,900,905,906,911,912,913,914,915,916,923,924,930,946,948,949,950,980,982,985,991,992,1041,1044,1046,1065,1066,1067,1068,1069,1113,1117,1132,1133,1175,1176,1186,1197,1198,1199],str_to_nod:1069,straight:1212,strength:[1169,1215],stride:[1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],string:[40,41,43,850,866,868,877,878,883,889,895,896,899,900,904,910,912,913,914,923,924,927,930,946,966,985,1017,1069,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193,1198,1199],structur:[40,41,42,43,924,941],structural_diff:[40,41],style:43,sub:[40,41,43,830,831,850,873,874,879,880,881,882,924,999,1065,1066,1067,1068,1069],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1069,sub_mod:[1198,1199],sub_modul:[1208,1209],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1169,1170,1200,1201,1208,1209],subsequ:43,subset:43,substr:[40,41],suffici:[1041,1046],suggest:1169,suitabl:[1034,1039],sum:[40,41,405,430,431,830,834,850,879,880,881,882,894,924,945,949,991,992,1069,1132,1133,1139],summat:[40,41,1132,1133],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,115,117,120,122,124,125,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,179,180,181,182,183,184,186,187,188,189,190,191,192,195,197,198,200,201,202,203,204,205,206,211,212,213,214,215,217,218,219,222,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,313,315,316,317,318,320,321,324,325,326,327,329,330,331,332,333,334,335,336,339,341,342,343,344,345,346,347,352,353,354,355,356,358,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,391,393,396,398,400,401,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,443,444,445,447,448,449,452,454,456,457,458,459,460,461,462,465,466,468,469,470,471,472,473,474,479,480,481,482,483,485,486,487,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,511,512,513,514,516,518,521,523,525,526,529,530,531,532,533,534,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,570,571,572,573,575,576,577,579,580,581,585,586,587,588,590,591,592,593,594,595,596,600,601,602,607,608,609,610,611,613,614,615,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,641,642,643,644,646,648,651,653,655,656,659,660,661,662,663,664,665,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,730,731,732,733,734,736,737,738,740,741,742,743,744,745,747,748,750,751,752,753,754,755,756,757,758,759,760,762,763,764,765,766,767,769,770,771,772,773,774,775,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,800,801,802,803,804,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,836,838,841,843,845,846,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1169,1173,1174,1176,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1214,1215],supports_inplac:924,suppos:1215,sure:43,svd:[109,235,385,510,640,830],swap:[40,41,924,1005],swapax:[40,41,535,666,924,1215],symmetr:[1041,1047],syntax:[403,405,437,442,446,450,451,453],tab:1169,take:[43,924,974],taken:[43,830,831,1132,1134,1135,1136,1138,1140],tan:[749,1051,1054],tangent:[809,828,1051,1054,1055,1056,1063,1064,1142,1149],tanh:[88,221,362,489,617,777,809,1051,1142],target:[40,41,850,866,869,870,871,872,873,874,875,876,879,880,881,882,895,1069,1169],target_dict:[40,41],task:[43,1065,1066,1067,1068],team:[43,1215],templat:1169,temporari:[924,996,1007],tensor:[40,41,43,405,430,431,850,868,900,910,924,927,929,934,975,976,979,981,984,985,989,991,992,999,1017,1069,1125,1126,1127,1150,1158,1160,1169,1186,1194,1196,1202,1203,1204,1205,1206,1207,1211,1212],tensorflow:[43,1041,1046,1150,1152,1154,1156,1169,1186,1188,1190,1192,1212,1215],term:[40,41,43,1150,1160,1169,1186,1196],termcolor:[40,41,42],termin:[40,41,42,1069],test:[43,809,816,817,818,844,845,846,900,915,916],test_array_api:43,tf_concat:1169,than:[40,41,43,805,806,809,810,813,820,822,827,830,834,835,836,850,894,924,927,936,954,973,979,1000,1003,1018,1024,1069,1125,1129,1169,1212],thei:[40,41,1051,1055,1065,1066,1067,1125,1126,1169,1208,1209,1212],them:[1169,1215],themselv:[1113,1114],therefor:43,thi:[40,41,42,43,809,823,824,830,832,837,838,850,872,876,882,889,894,899,924,927,956,987,989,995,1018,1021,1023,1024,1025,1026,1027,1032,1041,1044,1069,1113,1117,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1159,1169,1198,1199,1202,1203,1204,1205,1206,1207,1211,1212,1215],thing:[43,1169],those:[40,41,43,830,833,924,936,1018,1032,1069],though:43,thought:43,threshold:[924,979,981],through:[40,41,43],tick:43,tickbox:43,tile:[258,535,666,924],time:[43,924,1006,1018,1021,1025,1065,1066,1067,1068,1069,1125,1126,1150,1160,1186,1197,1198,1199,1215],timeout:[40,41,42,850,859,860,924,987,995,1069],timestep:[1150,1160,1186,1195],titl:[43,1169],tmp_dir:924,tmp_dr:[924,996],to_appli:[40,41],to_clon:[850,1069],to_dev:[40,41,127,252,403,528,658,850],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[850,1069],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1169],to_ivy_modul:[196,785,1169,1175],to_json:[40,41],to_kv_fn:[1150,1161],to_kv_v:[1150,1161],to_list:[40,41,405,666,924],to_multi_dev:[40,41],to_mut:[1113,1115,1122],to_n:[15,40,41,1169],to_nod:1069,to_numpi:[40,41,405,666,924,1169,1211],to_out_fn:[1150,1161],to_out_v:[1150,1161],to_q_fn:[1150,1161],to_q_v:[1150,1161],to_raw:[40,41],to_scalar:[405,666,924],todo:[1069,1169,1170],togeth:[40,41,1208,1209],tool:[1169,1212],top_mod:[1198,1199],topic:1215,torch:[43,848,849,1169,1211,1212,1215],torch_concat:1169,torchfcmodel:1211,total:[40,41,42,850,896,1069],total_mem_on_dev:850,total_mem_on_nod:1069,tpu:[850,897,1069],tpu_is_avail:[403,528,658,850,1069],trace:[40,41,924,973],track:[43,850,1069,1113,1122,1198,1199],track_submod_call_ord:[1198,1199],track_submod_ret:[1198,1199],trail:[1200,1201],train:[1018,1020,1021,1025,1169,1170],trainabl:[1018,1024,1169,1170,1175,1176,1198,1199,1208],trainer:1169,tran:1215,transform:[1150,1158,1159],transpos:[40,41,134,258,405,666,850,881,924,1069,1150,1152,1154,1156,1186,1188,1190,1192],travers:[15,18,19,40,41,1113,1122],treat:[40,41,848,849],tri:[40,41],triangular:[799,803],trigonometr:[1051,1052,1054],tril:[77,210,351,478,606,799],trim_kei:[40,41],trust:[1018,1025,1202,1204],truth:[809,819,924,951,1048,1049,1050],try_else_non:924,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[850,1069],tune_dev_alloc:850,tune_dev_split:850,tune_node_alloc:1069,tune_node_split:1069,tune_step:[850,1069],tupl:[15,16,17,18,19,40,41,43,351,352,353,356,799,800,801,804,830,833,834,835,836,842,843,844,845,846,848,849,924,940,956,957,998,1016,1069,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1127,1132,1134,1135,1136,1137,1138,1139,1140],tutori:43,two:[40,41,799,803,830,831,832,833,924,927,931,943,978,1005,1041,1044],type:[15,18,40,41,42,43,59,359,360,403,404,799,800,801,802,803,804,806,807,809,810,811,812,813,814,815,816,817,818,819,820,822,823,824,826,827,828,830,831,834,835,836,840,841,844,845,846,850,862,863,864,865,877,878,882,894,900,904,905,906,910,911,912,913,914,915,916,923,924,925,927,930,939,941,951,954,955,957,966,973,984,985,990,1004,1014,1017,1018,1024,1029,1051,1058,1069,1169,1177,1179,1180,1182,1183,1185,1198,1199,1212],types_to_iteratively_nest:[40,41,42],uint8:[1034,1036,1040],uint8_img_to_float_img:1034,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[809,812],underwai:43,unecessari:43,unfairli:43,unif:1069,unifi:[40,41,850,879,880,881,882,894,1069,1169],uniform:[40,41,1125,1126,1128,1129,1177,1179,1180,1183,1184],uniformli:[1125,1127,1129],unify_arrai:1069,unify_it:1069,unify_nest:1069,uniniti:[799,800],union:[15,18,19,40,41,43,351,352,353,354,356,357,359,360,799,800,801,802,803,804,805,806,807,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,830,832,833,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,868,873,874,875,876,894,895,900,904,905,906,910,911,912,913,914,915,916,923,924,925,926,927,929,930,931,932,934,936,937,938,939,940,942,943,944,945,948,949,950,951,953,954,955,956,957,958,959,963,965,966,967,974,975,976,978,979,980,981,984,985,988,989,990,991,992,997,998,999,1000,1003,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1069,1113,1114,1115,1121,1122],uniqu:[850,859,860,1065,1066,1067,1068,1069,1113,1117],unique_kwarg:1069,unit:[43,850,1051,1052,1053,1069,1142,1143,1144,1145],unitari:[830,833],unless:[924,984,1017],unlik:[850,1069],unnorm:[1125,1126],unpack:[924,1013],unrol:[1150,1160],unset:1212,unset_debug_mod:44,unset_default_devic:850,unset_default_dtyp:900,unset_default_float_dtyp:900,unset_default_int_dtyp:900,unset_framework:[59,1212],unset_with_grad:1018,unstack:[40,41,134,258,405,535,666,924],until:43,unus:[848,849],updat:[40,41,405,430,431,850,859,924,971,991,992,1018,1020,1021,1023,1025,1026,1027,1065,1066,1067,1069,1113,1118,1119,1123,1124,1150,1160,1169,1170,1175,1176,1202,1203,1204,1205,1206,1207,1212,1215],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1125,1129],upper_depth:[1198,1199],upstream:43,usabl:[1169,1215],usag:[850,894,1069],use:[40,41,42,43,453,850,859,860,885,897,924,988,1001,1002,1041,1046,1069,1150,1161,1167,1168,1169,1200,1201,1212,1215],used:[40,41,43,453,830,831,850,859,889,892,893,899,900,911,924,961,962,977,991,992,993,994,1017,1018,1025,1026,1041,1044,1065,1066,1067,1068,1069,1113,1122,1186,1197,1202,1204,1205,1211,1212],used_dev:[850,859],used_mem_on_dev:850,used_mem_on_nod:1069,used_node_str:1069,used_node_strs_dict:1069,useful:[40,41,850,894,1069,1150,1159,1169,1212],user:[1169,1186,1197,1198,1199,1212,1215],uses:1169,using:[40,41,43,1018,1020,1021,1113,1116,1120,1132,1133,1150,1158,1162,1169,1186,1194,1211,1212,1215],util:[850,883,1069],utility_funct:[844,845,846],v_with_top_v_key_chain:[1198,1199],val:[40,41,405,422,423,424,924,969,970,971,993,994],valid:[844,845,846,900,905,924,1001,1002,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],valid_dtyp:900,valu:[40,41,405,809,813,819,830,832,833,834,837,838,840,841,842,843,850,862,893,894,924,925,927,929,936,937,938,940,941,947,951,956,957,958,959,975,976,979,981,987,988,989,990,991,992,993,994,995,1011,1014,1015,1016,1018,1022,1025,1034,1040,1048,1049,1050,1051,1059,1060,1061,1065,1066,1067,1069,1113,1117,1118,1119,1123,1124,1125,1128,1129,1132,1134,1136,1150,1161,1162,1167,1168,1186,1197,1200,1201,1202,1204],value_is_nan:924,vanilla:[1065,1067],var_shap:1177,variabl:[15,16,17,18,19,40,41,305,437,569,729,924,933,969,970,971,972,973,1004,1018,1021,1022,1023,1024,1025,1026,1027,1029,1032,1065,1066,1067,1068,1150,1161,1167,1168,1175,1176,1177,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209],variable_data:[437,729,1018],varianc:[40,41,1132,1140,1215],varieti:1212,variou:[43,1169],vector:[40,41,446,449,830,833,834,924,938,943,1041,1047,1150,1159,1186,1196],vector_norm:[40,41,109,235,385,510,640,830],vector_to_skew_symmetric_matrix:[172,314,446,578,739,1041],verbos:1214,veri:[43,1169],verifi:43,via:[1113,1114,1121,1212],view:[1034,1039],vision:1169,visual:1212,volum:[1150,1155],vw_tm1:[1018,1021,1025],wai:[1212,1215],wait:[40,41,42,43],want:[43,1169,1212,1215],warn:[59,66,67,68,69,70],warp:[442,443,1034,1035],watch:1211,websit:43,weight:[1018,1020,1021,1023,1025,1026,1027,1150,1159,1160,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1202,1204,1205],weight_initi:[1186,1187,1188,1189,1190,1191,1192,1193,1195,1196],weights_path:[1198,1199],well:[40,41,924,965],were:[40,41,1069],what:[43,1169],when:[40,41,42,43,830,833,850,924,935,1002,1015,1069,1169,1198,1199,1212,1215],where:[40,41,43,258,405,666,809,821,830,833,844,845,846,924,927,934,936,940,953,967,984,1016,1113,1114,1121,1125,1126],wherea:43,wherebi:[1113,1122],whether:[15,18,19,40,41,42,809,818,844,845,846,848,849,850,868,881,885,889,894,897,899,900,910,914,915,916,923,924,926,931,932,944,947,952,956,963,965,968,972,973,977,997,1004,1013,1014,1018,1021,1022,1023,1024,1025,1026,1027,1029,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1142,1143,1150,1158,1169,1175,1176,1186,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],which:[40,41,42,43,453,799,800,801,802,803,804,805,806,807,830,831,834,835,836,837,838,840,841,842,843,844,845,846,848,849,850,859,860,868,873,874,875,876,879,880,881,882,884,886,890,892,893,894,900,905,910,914,923,924,927,930,939,941,943,944,945,947,957,958,959,960,966,967,974,975,976,983,984,985,986,988,991,992,999,1003,1013,1015,1017,1018,1021,1022,1023,1025,1026,1027,1029,1031,1032,1034,1036,1041,1044,1051,1055,1069,1113,1117,1118,1119,1123,1124,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1161,1162,1169,1175,1176,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1211,1212],whilst:43,whitespac:[40,41,42],who:43,whose:[799,803,809,810,811,814,815,826,828,830,831,835,836,924,930,935,1132,1133,1134,1135,1136,1138,1140],why:[1169,1170],width:[1034,1039],wiki:1215,wikipedia:1215,window:[1034,1039,1150,1151,1152,1153,1154,1155,1156,1157,1186,1187,1188,1189,1190,1191,1192,1193],wise:[40,41,809,812,819,823,824,924,936,951,954,955,979,981,990,1018,1021,1023,1025,1027,1048,1049,1050,1051,1052,1053,1054,1055,1058,1059,1060,1061,1063,1142,1143,1144,1145,1146,1147,1148,1149],wish:1212,with_bia:[1186,1196],with_cal:[924,947],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1018,1028],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1069,with_partial_v:[1198,1199],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,405,432,924,999,1069],with_to_kv_fn:[1186,1197],with_to_out_fn:[1186,1197],with_to_q_fn:[1186,1197],within:[15,18,19,43,830,833,924,927,1125,1129],without:[40,41,43,924,987,989,995,1113,1115,1212],wonder:1169,word:[15,16,17,924,927,1125,1129,1175,1176],work:[43,1211],worker:[850,859,860,1069],worker_class:[850,859,860,1069],worker_kwarg:1069,would:[43,1142,1147,1169,1212,1215],wrap:[15,40,41,42,43,403,405,437,442,446,450,451,453,924,935,1018,1032,1169],write:[40,41,43,1169,1170,1215],written:[43,1169,1215],ws_new:[1018,1021,1023,1025,1026,1027],x1_i:[809,812,819,824,924,951,1051,1058],x2_i:[809,812,819,824,924,951,1051,1058],x_feat_dim:[1150,1161],x_i:[809,810,811,813,814,815,816,817,818,820,822,823,826,827,828],x_in:[1169,1211],x_inv:[1041,1043],x_max:[405,924,936],x_min:[405,924,936],x_sub:1069,xkk:1215,xkkm1:1215,xkm1km1:1215,xs0:1069,xs_t:1069,year:[1169,1215],yet:[1113,1122,1215],yield:[924,1015],you:[43,1169,1211,1212,1215],your:[1169,1170,1211,1212,1215],your_awesome_project:1212,yourself:[43,1169],yourslef:43,youtub:43,zero:[40,41,77,210,351,478,606,799,800,803,809,823,824,830,834,844,845,846,924,940,984,991,992,1016,1017,1018,1020,1021,1025,1026,1150,1158,1169,1177,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1202,1203,1204,1205],zero_pad:[258,405,535,666,924],zeros_lik:[134,258,405,535,666,924],zip:1069,zk_e:1215},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isinf","isnan","less","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isinf","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isinf","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isinf","isnan","less","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isinf","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isinf","isnan","less","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":947,"function":[77,83,88,108,114,116,118,119,121,123,210,216,221,234,240,242,244,245,247,248,351,357,362,384,390,392,394,395,397,399,478,484,489,509,515,517,519,520,522,524,606,612,617,639,645,647,649,650,652,654,799,805,809,829,835,837,839,840,842,844],Ones:1182,Using:1212,abs:[259,536,667,925],aco:[750,1052],acosh:[89,222,363,490,618,810],activ:[194,338,464,598,777,1142,1172],adam:1203,adam_step:1020,adam_upd:1021,algebra:[109,172,235,314,385,446,510,578,640,739,830],all:[124,249,400,525,655,845],all_equ:926,all_nested_indic:1114,ani:[125,250,401,526,656,846],api:[0,43,75,208,349,476,604,797],arang:[135,260,406,537,668,927],arg_nam:928,argmax:[117,243,393,518,648,838],argmin:[136,407,538,669,929],args_to_ivi:16,args_to_n:17,argsort:[120,246,396,521,651,841],arithmet:1,arrai:[0,3,43,75,137,208,261,349,408,476,539,604,670,797,930],array_equ:[262,671,931],arrays_equ:932,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[751,1053],asinh:[90,364,491,619,811],assert_supports_inplac:933,atan2:[753,1055],atan:[752,1054],atanh:[754,1056],attribut:5,backend:[43,73],bilinear_resampl:[169,311,443,575,736,1035],binary_cross_entropi:1164,bitwis:7,bitwise_and:[91,223,365,492,620,812],broadcast_to:[263,672,934],builder:51,cache_fn:935,cast:[138,264,409,540,673,904],ceil:[92,224,366,493,621,813],choleski:[740,1042],choose_random_framework:61,citat:1169,clear_framework_stack:62,clear_mem_on_dev:[660,866],clip:[265,674,936],clip_matrix_norm:937,clip_vector_norm:938,clone:1084,clone_arrai:1085,clone_it:1086,clone_nest:1087,clonedit:1071,cloneditem:1070,clonednest:1072,closest_valid_dtyp:905,code:1215,comparison:9,compil:[266,410,675,848,849],concaten:[139,267,411,541,676,939],constant:[76,209,350,477,605,798],constant_pad:[268,542,677,940],contain:[40,41],container_typ:[678,941],content:1169,contribut:43,conv1d:[200,341,468,789,1151,1187],conv1d_transpos:[201,342,469,790,1152],conv1dtranspos:1188,conv2d:[202,343,470,600,791,1153,1189],conv2d_transpos:[203,344,471,792,1154],conv2dtranspos:1190,conv3d:[204,345,472,601,793,1155,1191],conv3d_transpos:[205,346,473,794,1156],conv3dtranspos:1192,convers:15,convert:[196,785,1175],convert_dtyp:906,copy_arrai:[679,942],copy_nest:1115,core:[126,251,402,527,657,847],cos:[93,367,494,622,814],cosh:[94,368,495,623,755,815,1057],cprint:1214,creat:43,creation:[77,210,351,478,606,799],cross:[269,680,943],cross_entropi:1165,cumprod:[140,270,412,681,944],cumsum:[682,945],current_framework:63,current_framework_str:[683,946],data:[83,87,216,220,357,361,484,488,612,616,805,808],debug_mod:45,debugg:44,default_devic:867,default_dtyp:907,default_float_dtyp:908,default_int_dtyp:909,default_nod:1088,depthwise_conv2d:[206,347,474,602,795,1157],depthwiseconv2d:1193,design:43,dev:[129,254,530,661,868],dev_clon:869,dev_clone_arrai:870,dev_clone_it:871,dev_clone_nest:872,dev_dist:873,dev_dist_arrai:874,dev_dist_it:875,dev_dist_nest:876,dev_from_str:[130,255,531,662,877],dev_to_str:[131,256,532,663,878],dev_unifi:879,dev_unify_arrai:880,dev_unify_it:881,dev_unify_nest:882,dev_util:883,devclonedit:853,devcloneditem:852,devclonednest:854,devdistit:856,devdistitem:855,devdistnest:857,devic:[20,127,252,403,528,658,850],devmapp:859,devmappermultiproc:860,diagon:[110,236,386,511,641,831],distribute_nest:1089,divid:1058,document:1169,dropout:[1158,1194],dtype:[141,271,413,543,684,900,910],dtype_bit:[142,272,414,544,685,911],dtype_from_str:[143,273,415,545,686,912],dtype_to_str:[144,274,416,546,687,913],ecosystem:52,einops_rearrang:948,einops_reduc:949,einops_repeat:950,einsum:[186,329,456,590,769,1133],elementwis:[88,221,362,489,617,809],empti:[78,211,352,479,607,800],equal:[369,624,951],erf:[452,756,1059],execute_with_gradi:[166,306,438,570,730,1022],exist:952,exp:[757,1060],expand_dim:[275,688,953],finfo:[85,218,359,486,614,806],firstlayersiren:1179,flip:[115,241,391,516,646,836],float_img_to_uint8_img:1036,floor:[276,689,954],floormod:[277,690,955],fomaml_step:1066,fork:43,fourier_encod:956,framework:59,full:[145,278,417,547,691,957],func:72,gather:[146,279,418,548,692,958],gather_nd:[147,280,419,549,693,959],geglu:1173,gelu:[339,465,778,1143,1174],gener:[22,134,258,405,535,666,924],get_all_arrays_in_memori:960,get_all_arrays_on_dev:884,get_framework:64,get_min_bas:961,get_min_denomin:962,get_num_dim:[694,963],get_referrers_recurs:964,glorotuniform:1180,gpu_is_avail:[885,1090],gradient:[24,165,305,437,569,729,1018],gradient_descent_upd:1023,gradient_imag:[170,312,444,576,737,1037],gym:53,handler:59,has_nan:965,ident:[148,281,420,550,695,966],iinfo:[86,219,360,487,615,807],imag:[26,168,310,442,574,735,1034],index_nest:1116,indices_wher:[149,282,421,696,967],initi:1177,inplac:11,inplace_arrays_support:968,inplace_decr:[150,283,422,551,697,969],inplace_incr:[151,284,423,552,698,970],inplace_upd:[152,285,424,553,699,971],inplace_variables_support:972,inv:[741,1043],invalid_dtyp:914,is_arrai:[153,286,425,554,700,973],is_float_dtyp:915,is_int_dtyp:916,is_vari:[167,307,439,571,731,1024],isfinit:[95,225,370,496,625,816],isinf:[96,226,371,497,626,817],isnan:[97,227,372,498,627,818],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,796,1211,1212,1215],ivymodul:[197,786],jax:74,keep:43,lamb:1204,lamb_upd:1025,lar:1205,lars_upd:1026,layer:[199,340,467,599,788,1150,1186],layer_norm:1168,layernorm:1201,leaky_relu:[779,1144],less:[98,228,373,499,628,819],less_equ:[374,629],linalg:[28,1041],linear:[109,172,235,314,385,446,510,578,640,739,830,1159,1196],linear_resampl:[154,287,426,555,701,974],linspac:[155,288,427,556,702,975],list:43,log10:[99,375,500,630,820],log1p:[100,376,501,631,821],log2:[101,377,502,632,822],log:[758,1061],logic:[30,176,319,450,582,746,1048],logical_and:[320,747,1049],logical_not:[102,229,378,503,633,823],logical_or:[103,321,379,504,634,748,824,1050],logspac:[156,289,428,557,703,976],loss:1163,lstm:1195,lstm_updat:1160,maml_step:1067,manipul:[114,240,390,515,645,835],map:1117,map_nest_at_index:1118,map_nest_at_indic:1119,match_kwarg:977,math:[32,177,322,451,583,749,1051],matmul:[290,558,704,978],matrix_norm:[173,315,447,579,742,1044],maximum:[705,979],mech:54,memori:55,meshgrid:[291,706,980],meta:[34,1065],method:[108,234,384,509,639,829],min:[122,398,523,653,843],minimum:[707,981],model:56,modul:[1198,1199,1211],multi:1069,multi_head_attent:1161,multi_index_nest:1120,multidevcontain:42,multidevit:863,multidevitem:862,multidevnest:864,multiheadattent:1197,multinodeit:1075,multinodeitem:1074,multinodenest:1076,multinomi:[179,324,454,585,762,1126],multiprocess:[708,982],mxnet:207,nativ:1211,neg:[104,230,380,505,635,825],nest:1113,nested_indices_wher:1121,nested_map:1122,network:1211,next:1169,node:[1069,1091],node_dist:1092,node_dist_arrai:1093,node_dist_it:1094,node_str:1095,node_to_str:1096,node_util:1097,nodedistit:1078,nodedistitem:1077,nodedistnest:1079,nodemapp:1081,nodemappermultiproc:1082,norm:[1167,1200],num_arrays_in_memori:983,num_arrays_on_dev:886,num_cpu_cor:887,num_gpu:[132,888,1098],numpi:348,nutshel:1169,one_hot:[157,429,559,709,984],ones:[79,212,353,480,608,801,985],ones_lik:[80,213,354,481,609,802],oper:[1,3,7,9,11,13],optim:[1202,1206],optimizer_upd:1027,overview:1169,percent_used_mem_on_dev:889,percent_used_mem_on_nod:1099,pinv:[316,743,1045],portabl:1215,print_all_arrays_in_memori:986,print_all_arrays_on_dev:890,profil:[128,253,404,529,659,865,1083],pull:43,queue_timeout:987,randint:[180,325,586,763,1127],random:[36,178,323,453,584,761,1125],random_crop:1038,random_norm:[181,326,587,764,1128],random_uniform:[182,327,588,765,1129],reduce_max:[187,330,457,591,770,1134],reduce_mean:[188,331,458,592,771,1135],reduce_min:[189,332,459,593,772,1136],reduce_prod:[190,333,460,594,773,1137],reduce_std:[334,1138],reduce_sum:[191,335,461,595,774,1139],reduce_var:[192,336,462,596,775,1140],reduct:[38,185,328,455,589,768,1132],reflect:13,relu:[780,1145],repeat:[292,710,988],reptile_step:1068,request:43,reshap:[711,989],robot:57,round:[293,712,990],run:1212,scaled_dot_product_attent:1162,scatter_flat:[158,294,430,560,713,991],scatter_nd:[159,295,431,561,714,992],search:[116,242,392,517,647,837],seed:[183,766,1130],sequenti:[1208,1209],set:[118,244,394,519,649,839],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:891,set_default_dtyp:917,set_default_float_dtyp:918,set_default_int_dtyp:919,set_default_nod:1100,set_exception_debug_mod:48,set_framework:65,set_min_bas:993,set_min_denomin:994,set_nest_at_index:1123,set_nest_at_indic:1124,set_queue_timeout:995,set_split_factor:[892,1101],set_tmp_dir:996,set_with_grad:1028,sgd:1207,shape:[715,997],shape_to_tupl:998,shuffl:[184,767,1131],sigmoid:[781,1146],signatur:[108,234,384,509,639,829],sin:[105,231,381,506,636,826],sinh:[759,1062],siren:1183,slodget:832,slogdet:[111,237,387,512,642],softmax:[195,466,782,1147],softplu:[783,1148],sort:[119,245,395,520,650,840],sparse_cross_entropi:1166,split:[160,296,432,562,716,999],split_factor:[893,1102],split_func_cal:[894,1103],sqrt:[106,232,382,507,637,827],squeez:[161,297,433,563,717,1000],stable_divid:1001,stable_pow:1002,stack:[298,718,1003],stack_imag:[171,313,445,577,738,1039],standard:43,statist:[121,247,397,522,652,842],stop_gradi:[308,440,572,732,1029],str_to_nod:1104,submodul:43,supports_inplac:1004,svd:[112,238,388,513,643,833],swapax:[564,719,1005],tan:[760,1063],tanh:[107,233,383,508,638,784,828,1064,1149],tensorflow:475,tile:[299,565,720,1006],tmp_dir:1007,to_dev:[133,257,533,664,895],to_ivi:18,to_ivy_modul:[198,787,1176],to_list:[721,1008],to_n:19,to_nod:1105,to_numpi:[722,1009],to_scalar:[723,1010],todo:43,torch:603,total_mem_on_dev:896,total_mem_on_nod:1106,tpu_is_avail:[534,665,897,1107],train:1211,trainabl:1211,transpos:[162,300,434,724,1011],tree:1169,tril:[81,214,355,482,610,803],try_else_non:1012,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,216,220,357,361,484,488,612,616,805,808],uint8_img_to_float_img:1040,unifi:1108,unify_arrai:1109,unify_it:1110,unify_nest:1111,unset_debug_mod:49,unset_default_devic:898,unset_default_dtyp:920,unset_default_float_dtyp:921,unset_default_int_dtyp:922,unset_framework:71,unset_with_grad:1030,unstack:[163,301,435,566,725,1013],updat:43,used_mem_on_dev:899,used_mem_on_nod:1112,util:[123,248,399,524,654,844],valid_dtyp:923,value_is_nan:1014,variabl:[309,441,573,733,1031],variable_data:[734,1032],vector_norm:[113,239,389,514,644,834],vector_to_skew_symmetric_matrix:[175,318,449,581,745,1047],verbos:1213,vision:58,where:[302,726,1015,1169],why:1215,with_grad:1033,wrapper:72,write:1212,your:43,zero:[82,215,356,483,611,804,1185],zero_pad:[303,567,727,1016],zeros_lik:[164,304,436,568,728,1017]}})