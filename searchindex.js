Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isinf","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isinf","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isinf","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isinf","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isinf","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isinf","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isinf.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isinf.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isinf.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isinf.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isinf.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isinf.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[833,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[388,0,0,"-"],creation_functions:[389,0,0,"-"],data_type_functions:[392,0,0,"-"],data_types:[396,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[390,2,1,""],zeros:[391,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[392,1,1,""],finfo:[394,2,1,""],iinfo:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[392,3,1,""],bits:[392,3,1,""],eps:[392,3,1,""],max:[392,3,1,""],min:[392,3,1,""],smallest_normal:[392,3,1,""]},"ivy.functional.backends.numpy.core":{device:[433,0,0,"-"],general:[435,0,0,"-"],gradients:[469,0,0,"-"],image:[474,0,0,"-"],linear_algebra:[478,0,0,"-"],logic:[482,0,0,"-"],math:[483,0,0,"-"],random:[485,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[434,1,1,""],clear_mem_on_dev:[433,2,1,""],dev:[433,2,1,""],dev_from_str:[433,2,1,""],dev_to_str:[433,2,1,""],gpu_is_available:[433,2,1,""],num_gpus:[433,2,1,""],to_dev:[433,2,1,""],tpu_is_available:[433,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[434,3,1,""],start:[434,3,1,""],stop:[434,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[435,2,1,""],arange:[436,2,1,""],argmax:[437,2,1,""],argmin:[438,2,1,""],array:[439,2,1,""],asarray:[435,2,1,""],astype:[435,2,1,""],cast:[440,2,1,""],ceil:[435,2,1,""],clip:[435,2,1,""],compile:[441,2,1,""],concatenate:[442,2,1,""],constant_pad:[435,2,1,""],container_types:[435,2,1,""],copy_array:[435,2,1,""],cumprod:[443,2,1,""],current_framework_str:[435,2,1,""],dtype:[444,2,1,""],dtype_bits:[445,2,1,""],dtype_from_str:[446,2,1,""],dtype_to_str:[447,2,1,""],equal:[435,2,1,""],floor:[435,2,1,""],floormod:[435,2,1,""],full:[448,2,1,""],gather:[449,2,1,""],gather_nd:[450,2,1,""],get_num_dims:[435,2,1,""],identity:[451,2,1,""],indices_where:[452,2,1,""],inplace_arrays_supported:[435,2,1,""],inplace_decrement:[453,2,1,""],inplace_increment:[454,2,1,""],inplace_update:[455,2,1,""],inplace_variables_supported:[435,2,1,""],is_array:[456,2,1,""],linear_resample:[457,2,1,""],linspace:[458,2,1,""],logspace:[459,2,1,""],matmul:[435,2,1,""],meshgrid:[435,2,1,""],multiprocessing:[435,2,1,""],one_hot:[460,2,1,""],ones_like:[461,2,1,""],round:[435,2,1,""],scatter_flat:[462,2,1,""],scatter_nd:[463,2,1,""],shape:[435,2,1,""],split:[464,2,1,""],squeeze:[465,2,1,""],to_list:[435,2,1,""],to_numpy:[435,2,1,""],to_scalar:[435,2,1,""],transpose:[466,2,1,""],unstack:[467,2,1,""],where:[435,2,1,""],zero_pad:[435,2,1,""],zeros_like:[468,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[470,2,1,""],is_variable:[471,2,1,""],stop_gradient:[472,2,1,""],variable:[473,2,1,""],variable_data:[469,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[475,2,1,""],gradient_image:[476,2,1,""],stack_images:[477,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[479,2,1,""],qr:[480,2,1,""],vector_to_skew_symmetric_matrix:[481,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[484,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[486,2,1,""],randint:[485,2,1,""],random_normal:[485,2,1,""],random_uniform:[485,2,1,""],seed:[485,2,1,""],shuffle:[485,2,1,""]},"ivy.functional.ivy":{array_api:[834,0,0,"-"],core:[873,0,0,"-"],nn:[1212,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[835,0,0,"-"],creation_functions:[836,0,0,"-"],data_type_functions:[839,0,0,"-"],data_types:[842,0,0,"-"],elementwise_functions:[843,0,0,"-"],function_and_method_signatures:[859,0,0,"-"],linear_algebra:[860,0,0,"-"],manipulation_functions:[863,0,0,"-"],searching_functions:[865,0,0,"-"],set_functions:[866,0,0,"-"],sorting_functions:[867,0,0,"-"],statistical_functions:[869,0,0,"-"],utility_functions:[870,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[835,4,1,""],nan:[835,4,1,""],pi:[835,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[837,2,1,""],zeros:[838,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[840,2,1,""],iinfo:[841,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[844,2,1,""],bitwise_and:[845,2,1,""],ceil:[846,2,1,""],cos:[847,2,1,""],cosh:[848,2,1,""],isfinite:[849,2,1,""],isinf:[850,2,1,""],isnan:[851,2,1,""],less:[852,2,1,""],less_equal:[853,2,1,""],log1p:[854,2,1,""],log2:[855,2,1,""],logical_not:[856,2,1,""],sin:[857,2,1,""],sqrt:[858,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[861,2,1,""],vector_norm:[862,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[864,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[868,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[871,2,1,""],any:[872,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[874,0,0,"-"],compilation:[913,0,0,"-"],device:[915,0,0,"-"],dtype:[965,0,0,"-"],general:[989,0,0,"-"],gradients:[1086,0,0,"-"],image:[1102,0,0,"-"],linalg:[1109,0,0,"-"],logic:[1117,0,0,"-"],math:[1120,0,0,"-"],meta:[1136,0,0,"-"],multi_node:[1140,0,0,"-"],nest:[1184,0,0,"-"],random:[1196,0,0,"-"],reductions:[1203,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[875,2,1,""],builtin_add:[876,2,1,""],builtin_and:[877,2,1,""],builtin_bool:[878,2,1,""],builtin_contains:[879,2,1,""],builtin_deepcopy:[880,2,1,""],builtin_dir:[881,2,1,""],builtin_eq:[882,2,1,""],builtin_float:[883,2,1,""],builtin_floordiv:[884,2,1,""],builtin_ge:[885,2,1,""],builtin_getattr:[886,2,1,""],builtin_getattribute:[887,2,1,""],builtin_getitem:[888,2,1,""],builtin_gt:[889,2,1,""],builtin_int:[890,2,1,""],builtin_invert:[891,2,1,""],builtin_le:[892,2,1,""],builtin_lt:[893,2,1,""],builtin_mul:[894,2,1,""],builtin_ne:[895,2,1,""],builtin_neg:[896,2,1,""],builtin_or:[897,2,1,""],builtin_pos:[898,2,1,""],builtin_pow:[899,2,1,""],builtin_radd:[900,2,1,""],builtin_rand:[901,2,1,""],builtin_rfloordiv:[902,2,1,""],builtin_rmul:[903,2,1,""],builtin_ror:[904,2,1,""],builtin_rpow:[905,2,1,""],builtin_rsub:[906,2,1,""],builtin_rtruediv:[907,2,1,""],builtin_rxor:[908,2,1,""],builtin_setitem:[909,2,1,""],builtin_sub:[910,2,1,""],builtin_truediv:[911,2,1,""],builtin_xor:[912,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[914,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[915,1,1,""],DevClonedItem:[917,1,1,""],DevClonedIter:[918,1,1,""],DevClonedNest:[919,1,1,""],DevDistItem:[920,1,1,""],DevDistIter:[921,1,1,""],DevDistNest:[922,1,1,""],DevManager:[915,1,1,""],DevMapper:[924,1,1,""],DevMapperMultiProc:[925,1,1,""],MultiDev:[915,1,1,""],MultiDevItem:[927,1,1,""],MultiDevIter:[928,1,1,""],MultiDevNest:[929,1,1,""],Profiler:[930,1,1,""],clear_mem_on_dev:[931,2,1,""],default_device:[932,2,1,""],dev:[933,2,1,""],dev_clone:[934,2,1,""],dev_clone_array:[935,2,1,""],dev_clone_iter:[936,2,1,""],dev_clone_nest:[937,2,1,""],dev_dist:[938,2,1,""],dev_dist_array:[939,2,1,""],dev_dist_iter:[940,2,1,""],dev_dist_nest:[941,2,1,""],dev_from_str:[942,2,1,""],dev_to_str:[943,2,1,""],dev_unify:[944,2,1,""],dev_unify_array:[945,2,1,""],dev_unify_iter:[946,2,1,""],dev_unify_nest:[947,2,1,""],dev_util:[948,2,1,""],get_all_arrays_on_dev:[949,2,1,""],gpu_is_available:[950,2,1,""],num_arrays_on_dev:[951,2,1,""],num_cpu_cores:[952,2,1,""],num_gpus:[953,2,1,""],percent_used_mem_on_dev:[954,2,1,""],print_all_arrays_on_dev:[955,2,1,""],set_default_device:[956,2,1,""],set_split_factor:[957,2,1,""],split_factor:[958,2,1,""],split_func_call:[959,2,1,""],to_dev:[960,2,1,""],total_mem_on_dev:[961,2,1,""],tpu_is_available:[962,2,1,""],unset_default_device:[963,2,1,""],used_mem_on_dev:[964,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[915,3,1,""],da_tune_step:[915,3,1,""],dim_size:[915,3,1,""],ds_tune_step:[915,3,1,""],map:[915,3,1,""],repeated_config_check:[915,3,1,""],tune_step:[915,3,1,""],tuned:[915,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[924,3,1,""],map:[924,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[927,3,1,""],items:[927,3,1,""],keys:[927,3,1,""],shape:[927,3,1,""],values:[927,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[928,3,1,""],at_dev:[928,3,1,""],at_devs:[928,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[929,3,1,""],at_dev:[929,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[930,3,1,""],start:[930,3,1,""],stop:[930,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[965,1,1,""],DefaultFloatDtype:[965,1,1,""],DefaultIntDtype:[965,1,1,""],astype:[965,2,1,""],cast:[969,2,1,""],closest_valid_dtype:[970,2,1,""],convert_dtype:[971,2,1,""],default_dtype:[972,2,1,""],default_float_dtype:[973,2,1,""],default_int_dtype:[974,2,1,""],dtype:[975,2,1,""],dtype_bits:[976,2,1,""],dtype_from_str:[977,2,1,""],dtype_to_str:[978,2,1,""],invalid_dtype:[979,2,1,""],is_float_dtype:[980,2,1,""],is_int_dtype:[981,2,1,""],set_default_dtype:[982,2,1,""],set_default_float_dtype:[983,2,1,""],set_default_int_dtype:[984,2,1,""],unset_default_dtype:[985,2,1,""],unset_default_float_dtype:[986,2,1,""],unset_default_int_dtype:[987,2,1,""],valid_dtype:[988,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[965,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[965,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[965,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1014,2,1,""],abs:[990,2,1,""],all_equal:[991,2,1,""],arange:[992,2,1,""],arg_names:[993,2,1,""],argmax:[994,2,1,""],argmin:[995,2,1,""],array:[996,2,1,""],array_equal:[997,2,1,""],arrays_equal:[998,2,1,""],asarray:[989,2,1,""],assert_supports_inplace:[999,2,1,""],broadcast_to:[1000,2,1,""],cache_fn:[1001,2,1,""],ceil:[1002,2,1,""],clip:[1003,2,1,""],clip_matrix_norm:[1004,2,1,""],clip_vector_norm:[1005,2,1,""],concatenate:[1006,2,1,""],constant_pad:[1007,2,1,""],container_types:[1008,2,1,""],copy_array:[1009,2,1,""],cross:[1010,2,1,""],cumprod:[1011,2,1,""],cumsum:[1012,2,1,""],current_framework_str:[1013,2,1,""],einops_rearrange:[1015,2,1,""],einops_reduce:[1016,2,1,""],einops_repeat:[1017,2,1,""],equal:[1018,2,1,""],exists:[1019,2,1,""],expand_dims:[1020,2,1,""],floor:[1021,2,1,""],floormod:[1022,2,1,""],fourier_encode:[1023,2,1,""],full:[1024,2,1,""],gather:[1025,2,1,""],gather_nd:[1026,2,1,""],get_all_arrays_in_memory:[1027,2,1,""],get_min_base:[1028,2,1,""],get_min_denominator:[1029,2,1,""],get_num_dims:[1030,2,1,""],get_referrers_recursive:[1031,2,1,""],has_nans:[1032,2,1,""],identity:[1033,2,1,""],indices_where:[1034,2,1,""],inplace_arrays_supported:[1035,2,1,""],inplace_decrement:[1036,2,1,""],inplace_increment:[1037,2,1,""],inplace_update:[1038,2,1,""],inplace_variables_supported:[1039,2,1,""],is_array:[1040,2,1,""],linear_resample:[1041,2,1,""],linspace:[1042,2,1,""],logspace:[1043,2,1,""],match_kwargs:[1044,2,1,""],matmul:[1045,2,1,""],maximum:[1046,2,1,""],meshgrid:[1047,2,1,""],minimum:[1048,2,1,""],multiprocessing:[1049,2,1,""],num_arrays_in_memory:[1050,2,1,""],one_hot:[1051,2,1,""],ones:[1052,2,1,""],ones_like:[1053,2,1,""],print_all_arrays_in_memory:[1054,2,1,""],queue_timeout:[1055,2,1,""],repeat:[1056,2,1,""],reshape:[1057,2,1,""],round:[1058,2,1,""],scatter_flat:[1059,2,1,""],scatter_nd:[1060,2,1,""],set_min_base:[1061,2,1,""],set_min_denominator:[1062,2,1,""],set_queue_timeout:[1063,2,1,""],set_tmp_dir:[1064,2,1,""],shape:[1065,2,1,""],shape_to_tuple:[1066,2,1,""],split:[1067,2,1,""],squeeze:[1068,2,1,""],stable_divide:[1069,2,1,""],stable_pow:[1070,2,1,""],stack:[1071,2,1,""],supports_inplace:[1072,2,1,""],swapaxes:[1073,2,1,""],tile:[1074,2,1,""],tmp_dir:[1075,2,1,""],to_list:[1076,2,1,""],to_numpy:[1077,2,1,""],to_scalar:[1078,2,1,""],transpose:[1079,2,1,""],try_else_none:[1080,2,1,""],unstack:[1081,2,1,""],value_is_nan:[1082,2,1,""],where:[1083,2,1,""],zero_pad:[1084,2,1,""],zeros_like:[1085,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1086,1,1,""],adam_step:[1088,2,1,""],adam_update:[1089,2,1,""],execute_with_gradients:[1090,2,1,""],gradient_descent_update:[1091,2,1,""],is_variable:[1092,2,1,""],lamb_update:[1093,2,1,""],lars_update:[1094,2,1,""],optimizer_update:[1095,2,1,""],set_with_grads:[1096,2,1,""],stop_gradient:[1097,2,1,""],unset_with_grads:[1098,2,1,""],variable:[1099,2,1,""],variable_data:[1100,2,1,""],with_grads:[1101,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1086,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1103,2,1,""],float_img_to_uint8_img:[1104,2,1,""],gradient_image:[1105,2,1,""],random_crop:[1106,2,1,""],stack_images:[1107,2,1,""],uint8_img_to_float_img:[1108,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1110,2,1,""],inv:[1111,2,1,""],matrix_norm:[1112,2,1,""],pinv:[1113,2,1,""],qr:[1114,2,1,""],svd:[1115,2,1,""],vector_to_skew_symmetric_matrix:[1116,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1118,2,1,""],logical_or:[1119,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1121,2,1,""],acosh:[1122,2,1,""],asin:[1123,2,1,""],atan2:[1125,2,1,""],atan:[1124,2,1,""],atanh:[1126,2,1,""],cosh:[1127,2,1,""],divide:[1128,2,1,""],erf:[1129,2,1,""],exp:[1130,2,1,""],log:[1131,2,1,""],sin:[1132,2,1,""],sinh:[1133,2,1,""],tan:[1134,2,1,""],tanh:[1135,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1137,2,1,""],maml_step:[1138,2,1,""],reptile_step:[1139,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1140,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1185,2,1,""],copy_nest:[1186,2,1,""],index_nest:[1187,2,1,""],map:[1188,2,1,""],map_nest_at_index:[1189,2,1,""],map_nest_at_indices:[1190,2,1,""],multi_index_nest:[1191,2,1,""],nested_indices_where:[1192,2,1,""],nested_map:[1193,2,1,""],set_nest_at_index:[1194,2,1,""],set_nest_at_indices:[1195,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1197,2,1,""],randint:[1198,2,1,""],random_normal:[1199,2,1,""],random_uniform:[1200,2,1,""],seed:[1201,2,1,""],shuffle:[1202,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1204,2,1,""],reduce_max:[1205,2,1,""],reduce_mean:[1206,2,1,""],reduce_min:[1207,2,1,""],reduce_prod:[1208,2,1,""],reduce_std:[1209,2,1,""],reduce_sum:[1210,2,1,""],reduce_var:[1211,2,1,""]},"ivy.functional.ivy.nn":{activations:[1213,0,0,"-"],layers:[1221,0,0,"-"],losses:[1234,0,0,"-"],norms:[1238,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1214,2,1,""],leaky_relu:[1215,2,1,""],relu:[1216,2,1,""],sigmoid:[1217,2,1,""],softmax:[1218,2,1,""],softplus:[1219,2,1,""],tanh:[1220,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1222,2,1,""],conv1d_transpose:[1223,2,1,""],conv2d:[1224,2,1,""],conv2d_transpose:[1225,2,1,""],conv3d:[1226,2,1,""],conv3d_transpose:[1227,2,1,""],depthwise_conv2d:[1228,2,1,""],dropout:[1229,2,1,""],linear:[1230,2,1,""],lstm_update:[1231,2,1,""],multi_head_attention:[1232,2,1,""],scaled_dot_product_attention:[1233,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1235,2,1,""],cross_entropy:[1236,2,1,""],sparse_cross_entropy:[1237,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1239,2,1,""]},"ivy.graph_compiler":{compiler:[1240,0,0,"-"],globals:[1243,0,0,"-"],graph:[1246,0,0,"-"],helpers:[1248,0,0,"-"],op_logging:[1249,0,0,"-"],param:[1250,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1241,2,1,""],show_graph:[1242,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1244,2,1,""],log_global_inference_rel_times:[1245,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1246,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1246,3,1,""],add_fn_to_dict:[1246,3,1,""],add_param:[1246,3,1,""],compiled:[1246,3,1,""],connect:[1246,3,1,""],debug_info:[1246,3,1,""],get_param:[1246,3,1,""],get_param_recursive:[1246,3,1,""],include_generators:[1246,3,1,""],increment_param_count:[1246,3,1,""],log_all_ops:[1246,3,1,""],params_all_empty:[1246,3,1,""],save_debug_info:[1246,3,1,""],set_param:[1246,3,1,""],show:[1246,3,1,""],show_debug_info:[1246,3,1,""],update_inference_times:[1246,3,1,""],with_array_caching:[1246,3,1,""]},"ivy.graph_compiler.param":{Param:[1250,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1250,3,1,""],count:[1250,3,1,""],depth:[1250,3,1,""],get:[1250,3,1,""],is_var:[1250,3,1,""],ptype:[1250,3,1,""],set:[1250,3,1,""],set_count:[1250,3,1,""],shape:[1250,3,1,""]},"ivy.stateful":{activations:[1255,0,0,"-"],converters:[1258,0,0,"-"],initializers:[1260,0,0,"-"],layers:[1269,0,0,"-"],module:[1281,0,0,"-"],norms:[1283,0,0,"-"],optimizers:[1285,0,0,"-"],sequential:[1291,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1256,1,1,""],GELU:[1257,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1256,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1257,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1259,2,1,""]},"ivy.stateful.initializers":{Constant:[1260,1,1,""],FirstLayerSiren:[1262,1,1,""],GlorotUniform:[1263,1,1,""],KaimingNormal:[1260,1,1,""],Ones:[1265,1,1,""],Siren:[1266,1,1,""],Uniform:[1260,1,1,""],Zeros:[1268,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1260,3,1,""],create_variables:[1260,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1262,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1263,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1260,3,1,""],create_variables:[1260,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1265,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1266,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1260,3,1,""],create_variables:[1260,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1268,3,1,""]},"ivy.stateful.layers":{Conv1D:[1270,1,1,""],Conv1DTranspose:[1271,1,1,""],Conv2D:[1272,1,1,""],Conv2DTranspose:[1273,1,1,""],Conv3D:[1274,1,1,""],Conv3DTranspose:[1275,1,1,""],DepthwiseConv2D:[1276,1,1,""],Dropout:[1277,1,1,""],LSTM:[1278,1,1,""],Linear:[1279,1,1,""],MultiHeadAttention:[1280,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1272,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1273,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1275,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1277,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1278,3,1,""],get_initial_state:[1278,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1279,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1280,3,1,""]},"ivy.stateful.module":{Module:[1282,1,1,""]},"ivy.stateful.module.Module":{__init__:[1282,3,1,""],build:[1282,3,1,""],build_mode:[1282,3,1,""],built:[1282,3,1,""],check_submod_rets:[1282,3,1,""],compile_graph:[1282,3,1,""],compile_on_next_step:[1282,3,1,""],get_mod_key:[1282,3,1,""],mod_depth:[1282,3,1,""],mod_height:[1282,3,1,""],mod_with_top_mod_key_chain:[1282,3,1,""],save_weights:[1282,3,1,""],show_graph:[1282,3,1,""],show_mod_in_top_mod:[1282,3,1,""],show_structure:[1282,3,1,""],show_v_in_top_v:[1282,3,1,""],sub_mods:[1282,3,1,""],track_submod_call_order:[1282,3,1,""],track_submod_rets:[1282,3,1,""],v_with_top_v_key_chains:[1282,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1284,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1284,3,1,""]},"ivy.stateful.optimizers":{Adam:[1286,1,1,""],LAMB:[1287,1,1,""],LARS:[1288,1,1,""],Optimizer:[1289,1,1,""],SGD:[1290,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1286,3,1,""],set_state:[1286,3,1,""],state:[1286,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1287,3,1,""],set_state:[1287,3,1,""],state:[1287,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1288,3,1,""],set_state:[1288,3,1,""],state:[1288,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1289,3,1,""],compile_graph:[1289,3,1,""],compile_on_next_step:[1289,3,1,""],set_state:[1289,3,1,""],show_graph:[1289,3,1,""],step:[1289,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1290,3,1,""],set_state:[1290,3,1,""],state:[1290,3,1,""]},"ivy.stateful.sequential":{Sequential:[1292,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1292,3,1,""]},"ivy.verbosity":{cprint:[1297,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1296,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1285,1286,1287],"02886":1252,"100":[1140,1252,1294],"141592653589793":835,"2021":1252,"2102":1252,"360":[1120,1132,1134],"718281828459045":835,"754":[835,839,840,843,858],"999":[1086,1088,1089,1093,1285,1286,1287],"abstract":[915,930,1252,1285,1289],"boolean":[40,41,843,845,856,915,950,962,965,979,988,989,991,997,998,1032,1034,1035,1039,1040,1072,1082,1086,1092,1117,1118,1119,1136,1137,1138,1140],"break":43,"case":[15,18,19,40,41,42,43,843,844,846,847,848,855,857,858,915,954,961,964,989,992,1057,1059,1060,1109,1112,1114,1140,1184,1187,1191,1252,1269,1280,1281,1282,1285,1289,1298],"catch":[989,1014],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,392,433,434,839,841,915,917,918,919,920,921,922,924,925,927,928,929,930,942,943,965,989,993,1044,1086,1100,1140,1184,1186,1193,1234,1236,1237,1246,1250,1252,1255,1256,1257,1258,1259,1260,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1298],"default":[15,18,19,40,41,42,43,836,837,838,860,861,862,863,864,867,868,870,871,872,913,914,915,924,925,932,933,937,938,939,940,941,944,945,946,947,954,957,958,959,964,965,972,973,974,975,989,991,992,994,995,1004,1005,1006,1007,1010,1011,1012,1023,1024,1025,1030,1032,1033,1041,1043,1044,1047,1049,1052,1055,1056,1059,1060,1063,1065,1067,1069,1070,1079,1081,1082,1086,1089,1091,1092,1093,1094,1095,1097,1101,1109,1112,1114,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1196,1197,1199,1200,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1218,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292],"final":[40,41,43,989,1023,1042,1043,1140,1269,1280,1295],"float":[40,41,42,43,835,836,837,838,839,840,843,844,846,847,848,855,857,858,860,862,874,893,899,915,924,925,948,954,957,961,964,965,973,980,989,992,1004,1005,1007,1023,1024,1028,1029,1043,1061,1062,1063,1069,1070,1086,1088,1089,1091,1093,1094,1095,1102,1104,1108,1120,1128,1136,1137,1138,1139,1140,1196,1199,1200,1213,1215,1221,1229,1232,1233,1234,1235,1236,1237,1238,1239,1269,1277,1280,1283,1284,1285,1286,1287,1288,1289,1290],"function":[15,40,41,43,390,391,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,835,837,838,840,841,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,864,868,871,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1252,1255,1256,1257,1285,1288,1289,1290,1294,1295,1298],"import":[43,1252,1295,1298],"int":[40,41,42,43,389,390,391,485,836,837,838,839,840,841,860,861,862,863,864,867,868,870,871,872,874,893,899,913,914,915,937,938,939,940,941,944,945,946,947,952,953,959,965,974,976,981,989,994,995,1000,1006,1007,1011,1012,1015,1016,1017,1020,1023,1024,1025,1030,1033,1041,1042,1043,1051,1052,1056,1057,1059,1060,1065,1066,1067,1068,1071,1073,1074,1079,1081,1084,1086,1088,1089,1093,1102,1106,1107,1109,1112,1136,1137,1138,1139,1140,1184,1193,1196,1197,1198,1200,1201,1203,1205,1206,1207,1208,1209,1210,1211,1213,1218,1221,1222,1223,1224,1225,1226,1227,1228,1232,1234,1236,1237,1238,1239,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1283,1284],"long":[1221,1231],"new":[40,41,43,485,836,837,838,843,854,965,969,989,990,1000,1015,1016,1017,1020,1023,1024,1025,1026,1052,1057,1059,1060,1061,1062,1069,1070,1071,1086,1089,1091,1093,1094,1095,1102,1104,1106,1108,1120,1122,1126,1127,1133,1135,1140,1184,1194,1195,1196,1197,1238,1239,1252,1258,1259,1269,1279,1283,1284,1285,1286,1287,1288,1289,1290,1295,1298],"public":[989,1008],"return":[15,16,17,18,19,40,41,42,43,485,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,860,861,862,863,864,867,868,870,871,872,874,893,899,913,914,915,924,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,950,951,953,954,958,959,960,961,962,964,965,969,970,971,972,973,974,975,976,977,978,979,980,981,988,989,990,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1056,1057,1058,1059,1060,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1097,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1252,1258,1259,1269,1278,1279,1285,1289,1294,1295,1298],"short":[1221,1231,1252,1298],"static":[40,41,913,914],"super":1140,"true":[40,41,42,435,441,469,472,485,486,843,849,850,851,856,860,862,867,868,870,871,872,913,914,915,989,991,999,1001,1019,1023,1032,1034,1082,1083,1086,1089,1091,1092,1093,1094,1095,1097,1109,1112,1136,1137,1138,1139,1140,1184,1185,1192,1196,1197,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1221,1229,1234,1235,1236,1237,1240,1241,1242,1246,1269,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],"try":[40,41,989,1080,1140],"var":[40,41,1136,1137,1138,1298],"while":[40,41,42,843,856,1140],AND:[843,845,870,871,1117,1118],But:1298,For:[43,843,844,846,847,848,855,857,858,989,992,1003,1071,1086,1092,1100,1109,1114,1120,1121,1252,1258,1259,1295,1298],Its:[1120,1124],NOT:[843,856],Not:835,One:[40,41,43,989,1016,1057,1196,1198,1298],Ones:[1252,1260],PRs:43,Such:[989,1008],That:1295,The:[15,16,17,18,19,40,41,42,43,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,860,862,863,864,867,868,870,871,872,874,893,899,913,914,915,924,925,931,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,954,957,958,959,960,961,964,965,969,970,971,976,977,978,979,988,989,992,996,997,1000,1001,1004,1005,1006,1007,1009,1010,1013,1014,1018,1023,1025,1026,1033,1036,1037,1038,1040,1041,1043,1045,1047,1049,1052,1053,1056,1057,1059,1060,1061,1062,1063,1066,1067,1068,1069,1070,1071,1074,1082,1085,1086,1088,1089,1091,1093,1094,1095,1097,1100,1102,1104,1106,1108,1109,1112,1114,1115,1120,1121,1123,1124,1128,1129,1130,1131,1132,1134,1136,1137,1138,1139,1140,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1252,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1295,1298],There:[43,1252,1295],These:[43,1252],Used:[1184,1185,1192,1281,1282],Using:[1252,1253,1298],With:[40,41,1109,1112,1203,1205,1206,1207,1208,1209,1210,1211,1252,1294,1298],__array__:[989,996],__call__:[1269,1280,1281,1282],__del__:1140,__dict__:[1140,1295],__enter__:1140,__exit__:1140,__getitem__:1140,__getstate__:1140,__init__:[40,41,42,43,59,60,81,210,392,393,433,434,514,646,915,916,923,924,925,926,927,928,929,930,965,966,967,968,1086,1087,1140,1144,1151,1246,1247,1250,1251,1252,1255,1256,1257,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1298],__iter__:1140,__len__:1140,__next__:1140,__pow__:43,__repr__:1140,_assign_vari:1294,_axi:1140,_base:[1184,1185,1192],_compute_node_da_ratio:1140,_compute_node_strs_da:1140,_concat_unify_arrai:1140,_counter:1140,_cur_framework:[43,1140],_da_direct:1140,_da_directions_flip:1140,_da_step_tim:1140,_da_tim:1140,_da_tune_count:1140,_data:1140,_delta_da_dim_s:1140,_delta_sf:1140,_dict:1140,_dim_siz:1140,_first_da_tune_step:1140,_first_ns_tune_step:1140,_fn:1140,_forward:[1252,1294],_get_kalman_param:1298,_get_prior:1298,_get_some_model:1298,_handle_flat_arrays_in_out:43,_index:[1184,1185,1192],_input_queu:1140,_length:1140,_max_depth:1140,_max_node_dim_step_ratio:1140,_max_node_dim_step_s:1140,_max_split_factor_step_s:1140,_mean_unify_arrai:1140,_min_bas:[989,1070,1238,1239,1283,1284],_min_denomin:[989,1069],_min_node_dim_s:1140,_min_sf_tune_step:1140,_min_unit_node_tune_step:1140,_model:1298,_native_wrapp:43,_node_mapp:1140,_node_percent_mem:1140,_node_str:1140,_node_str_da_ratio:1140,_node_strs_da:1140,_node_strs_kei:1140,_node_strs_n:1140,_node_util:1140,_ns_step_tim:1140,_ns_time:1140,_ns_tune_count:1140,_num_nod:1140,_num_work:1140,_observed_config:1140,_output_queu:1140,_paramet:1294,_percent_mem_inc_per_sf:1140,_percent_mem_inc_per_unit_da_dim:1140,_percent_util_inc_per_unit_da_dim:1140,_ret_fn:1140,_safety_factor:1140,_save_dir:1140,_shift_da_split:1140,_shift_n:1140,_slice:1140,_step:[1285,1289],_sum_unify_arrai:1140,_timeout:1140,_tune:1140,_tune_da:1140,_tune_n:1140,_tune_step:1140,_unit_da_tune_count:1140,_unroll_step:1298,_with_node_mappig:1140,_worker:1140,_worker_class:1140,_worker_fn:1140,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,915,924,930,1140,1281,1282,1285,1289],abil:1252,abl:[40,41],about:[839,840,841],abov:[43,1196,1198],above_height:[40,41],abs:[293,435,567,695,860,862,989,1140],absolut:[40,41,989,990],abstractmethod:1140,accept:[15,43,843,856,1252],access:[40,41,43,1295],accord:[40,41,839,840,989,1007,1025,1059,1060,1079,1084],accordingli:[860,862,870,871,872],accur:[59,392,433,434,915,927,928,929,930,965,1086,1246,1250,1260,1262,1263,1265,1266,1268],aco:[783,1120],acosh:[783,1120],across:[40,41,915,924,925,934,935,937,938,939,940,941,947,957,958,989,994,995,997,998,1140,1184,1188],activ:[1214,1215,1216,1217,1218,1219,1220,1252,1256,1257],actual:1295,adam:[1086,1088,1089,1093,1252,1285,1287,1294],adam_step:1086,adam_upd:1086,adapt:[1086,1094,1285,1288],add:[40,41,43,1140,1234,1235,1236,1237,1238,1239,1252,1283,1284,1295],add_fn_to_dict:1246,add_param:1246,added:[43,989,1069,1070,1291,1292],adding:[989,1000],addit:[40,41,43,989,1015,1016,1017,1238,1239,1269,1279],address:43,adher:43,adjac:[989,992],adopt:[989,1008],affect:[989,992],affin:[1283,1284],after:[843,858,989,1041,1086,1089,1090,1091,1093,1094,1095,1102,1103,1238,1239,1285,1286,1287,1288,1289,1290,1298],after_1:[989,1007,1084],after_n:[989,1007,1084],again:43,against:[40,41,1109,1112,1203,1205,1206,1207,1208,1209,1210,1211],agnost:[43,1252,1294,1295],aim:1298,algebra:1109,algorithm:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276,1298],align:[40,41,43,989,1000],aliv:[915,949,951,955,989,1027,1050,1054],all:[15,16,17,18,19,40,41,43,108,235,420,546,673,860,862,863,864,870,913,914,915,924,949,955,989,990,991,997,998,1008,1027,1033,1054,1068,1109,1114,1136,1137,1138,1139,1140,1184,1185,1186,1192,1193,1196,1197,1200,1203,1205,1206,1207,1208,1209,1210,1211,1221,1231,1252,1295,1298],all_depth:[40,41],all_equ:989,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1184,all_tru:[40,41],alloc:[915,1140],allow:[989,1042,1043,1044,1281,1282],allow_dupl:[989,1044],alon:[915,954,964,1140,1252],along:[40,41,43,485,860,861,862,863,864,867,868,870,871,872,915,938,939,940,941,944,945,946,947,959,989,1006,1011,1012,1025,1041,1042,1043,1056,1067,1071,1074,1081,1109,1112,1136,1137,1138,1139,1140,1196,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211],alongsid:[1294,1295],alpha:[1213,1215],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,843,846,915,1140],also:[40,41,43,989,992,1086,1089,1136,1137,1138,1139,1184,1185,1186,1192,1193,1221,1230,1252,1269,1279,1294],altern:1294,alwai:[40,41,43,1086,1092,1097],among:[40,41],amount:[915,961,1140,1252],angl:[843,848,1120,1121,1125],ani:[15,16,17,18,19,40,41,43,108,235,420,546,673,843,853,870,913,914,915,917,920,924,925,927,936,937,940,941,946,989,991,992,996,1014,1015,1016,1017,1018,1019,1032,1040,1044,1069,1070,1086,1090,1140,1184,1185,1188,1192,1193,1194,1195,1196,1200,1252,1258,1259,1281,1282,1294,1295,1298],anoth:[40,41,43,965,971,1252],another_backend:43,anyth:[43,1298],anywai:43,apart:43,api:[1252,1253],appear:[989,1020],append:[40,41,1140],appli:[15,18,19,40,41,989,1015,1016,1017,1086,1093,1094,1109,1115,1117,1118,1119,1136,1137,1138,1184,1188,1191,1193,1213,1214,1215,1216,1217,1218,1219,1220,1221,1230,1232,1233,1238,1239,1252,1255,1256,1257,1283,1284],applic:[1184,1188,1193,1221,1232,1233,1252,1298],approxim:[43,843,844,847,848,854,855,857,874,899,1213,1214],arang:[128,293,435,485,567,695,989,1042,1043],arbitrari:[40,41,915,944,945,947,1140],arc:[1120,1125],arcco:[1120,1121],arctan:[1120,1124],area:[843,844,1252],arg:[15,16,17,40,41,43,59,63,915,924,937,941,947,959,989,1015,1016,1017,1060,1140,1240,1241,1242,1246,1258,1259,1281,1282],arg_nam:989,arg_stateful_idx:[1240,1241,1242,1246,1281,1282],argmax:[128,435,567,695,989],argmin:[128,435,567,695,989],args_clon:1140,args_dist:1140,args_to_ivi:[15,1252],args_to_n:[15,1252],args_uni:1140,argsort:[105,232,417,543,670,867],argument:[15,16,17,18,19,40,41,42,43,59,63,913,914,915,924,925,937,941,947,989,992,993,1001,1014,1044,1060,1120,1121,1140,1184,1188,1258,1259,1281,1282],aris:[1252,1298],arithmet:[43,1203,1206,1209,1211],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:485,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,128,293,435,485,567,695,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,863,864,867,868,870,871,872,893,899,915,933,934,935,938,939,940,941,944,945,946,947,949,951,955,959,960,965,969,975,980,981,989,990,991,992,994,995,997,998,999,1000,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1030,1032,1033,1034,1035,1036,1037,1038,1040,1041,1042,1043,1045,1046,1047,1048,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1065,1067,1068,1071,1072,1073,1074,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1088,1089,1092,1093,1097,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1140,1184,1186,1193,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1252,1253,1269,1277,1278,1280,1285,1289,1294,1295],arrang:[989,1015],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,389,390,391,392,394,395,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,863,864,867,868,870,871,872],array_api_methods_to_test:43,array_builtin:[43,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912],array_equ:[293,695,989],array_lik:[485,989,996],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,989],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1252],arraywithgener:[22,1252],arraywithgradi:[24,1252],arraywithimag:[26,1252],arraywithlinalg:[28,1252],arraywithlog:[30,1252],arraywithmath:[32,1252],arraywithmeta:[34,1252],arraywithrandom:[36,1252],arraywithreduct:[38,1252],arriv:[40,41,42],articl:1252,arxiv:1252,as_arrai:[40,41,989,1030,1065],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[433,435,444,915,933,965,972,973,974,975],as_tensor:435,as_vari:[40,41],as_zero:[40,41],asarrai:[435,989],asin:[783,1120],asinh:[85,397,518,650,843],aspect:[1102,1107],assert:[40,41,989,999,1140],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:989,associ:[43,1109,1116],assum:[843,847,857,1295,1298],astyp:[435,965],asynchron:[40,41,42],at_dev:[40,42,915,928,929],at_kei:[40,41],at_key_chain:[40,41],at_nod:1140,atan2:[783,1120],atan:[783,1120],atanh:[783,1120],attent:[43,1221,1232,1233,1269,1280],attribut:[0,6,40,41,839,840,841,989,1053,1085],audienc:[1252,1295],author:1252,avail:[40,41,43,915,950,952,953,962,989,1016,1140],averag:[1086,1088,1089,1093,1136,1137,1138,1203,1206],average_across_step:[1136,1137,1138],avoid:[915,1140,1295],axes:[40,41,43,435,466,478,479,860,862,863,864,870,871,872,915,959,989,994,995,1007,1020,1073,1079,1084,1109,1112,1140,1203,1205,1206,1207,1208,1209,1210,1211],axes_length:[40,41,989,1015,1016,1017],axi:[40,41,435,437,438,442,443,449,457,458,459,464,465,467,860,861,862,863,864,867,868,870,871,872,915,917,920,927,938,939,940,941,944,945,946,947,959,989,994,995,1006,1007,1010,1011,1012,1020,1025,1041,1042,1043,1056,1067,1068,1071,1073,1074,1081,1084,1140,1196,1202,1203,1205,1206,1207,1208,1209,1210,1211,1213,1218,1234,1236,1237],axis0:[40,41,989,1073],axis1:[40,41,860,861,989,1073],axis2:[860,861],back:[43,1281,1282,1285,1289],backend:[15,17,19,40,41,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,915,950,953,962,965,971,979,988,989,1035,1039,1086,1089,1091,1093,1094,1095,1100,1140,1252,1253,1258,1259,1285,1286,1287,1288,1289,1290,1294,1295,1298],backend_nam:43,background:[1252,1295],backprop:1298,backward:[870,871,872,1294],band:[989,1023],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,392,433,434,435,459,843,854,855,874,899,915,917,918,919,920,921,922,924,925,927,928,929,930,965,989,1028,1043,1061,1070,1086,1140,1203,1204,1246,1250,1252,1255,1256,1257,1260,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1298],batch:[40,41,860,862,915,957,958,989,1023,1033,1102,1106,1109,1115,1136,1137,1138,1139,1140,1221,1230,1238,1239,1283,1284],batch_shap:[435,451,989,1033,1051,1102,1103,1104,1105,1106,1107,1108,1109,1116,1196,1197,1221,1231,1232,1233,1269,1278],batch_siz:[485,486,1140,1196,1197,1221,1222,1223,1224,1225,1226,1227,1228],bayesian:1298,becaus:[43,989,992],becom:[989,1003,1120,1125,1298],been:[989,1015,1016,1017,1196,1197],befor:[40,41,43,915,959,1136,1137,1138,1140,1184,1193,1203,1205,1206,1207,1208,1209,1210,1211,1221,1232,1233,1298],before_1:[989,1007,1084],before_n:[989,1007,1084],begin:[1184,1185,1192,1295],behaviour:[43,1298],behind:[1086,1089,1091,1093,1094,1095,1252],being:[40,41,43,989,992,1055,1063,1140],belong:[40,41],below:[43,1252,1295,1298],below_depth:[40,41],benefit:1252,bernoul:[1221,1229,1269,1277],best:[43,989,1044,1252],beta1:[1086,1088,1089,1093,1285,1286,1287],beta2:[1086,1088,1089,1093,1285,1286,1287],beta:[1238,1239],between:[40,41,42,839,840,989,992,1109,1114,1184,1188,1196,1198,1234,1236,1237,1285,1287],bia:[1221,1230,1231,1269,1270,1271,1272,1273,1274,1275,1276,1279],bias_initi:[1269,1270,1271,1272,1273,1274,1275,1276,1279],bilinear:[1102,1103],bilinear_resampl:[164,347,474,609,768,1102],bilinearli:[1102,1103],binari:[843,845,1234,1235],binary_cross_entropi:1234,bit:[392,839,840,841,965,976,1102,1104,1108,1252],bitwis:[843,845],bitwise_and:[85,214,397,518,650,843],bitwise_oper:[0,7,8],block:[1252,1295],bool:[15,18,19,40,41,42,43,843,849,850,851,852,853,856,860,862,867,868,870,871,872,874,893,913,914,915,933,946,950,954,959,962,964,965,975,989,991,997,998,1011,1014,1018,1019,1023,1030,1032,1040,1044,1065,1067,1081,1082,1083,1086,1089,1090,1091,1092,1093,1094,1095,1097,1109,1112,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1196,1197,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1221,1229,1258,1259,1269,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],both:[43,989,1010],bottom:1252,boundari:[40,41,1196,1200],branch:[43,913,914],brittl:43,broadcast:[40,41,43,843,845,852,853,860,862,870,871,872,874,893,899,989,1000,1018,1046,1047,1048,1056,1109,1112,1120,1125,1128,1203,1205,1206,1207,1208,1209,1210,1211],broadcast_to:[293,695,989],build:[1140,1252,1269,1280,1281,1282],build_mod:[1269,1280,1281,1282],builder:1252,built:[915,989,992,1140,1269,1280,1281,1282],builtin:43,builtin_ab:[248,874],builtin_add:[248,874],builtin_and:[248,874],builtin_bool:[248,874],builtin_contain:[248,874],builtin_deepcopi:[248,874],builtin_dir:[248,874],builtin_eq:[248,874],builtin_float:[248,874],builtin_floordiv:[248,874],builtin_g:[248,874],builtin_getattr:[248,874],builtin_getattribut:[248,874],builtin_getitem:[248,874],builtin_gt:[248,874],builtin_int:[248,874],builtin_invert:[248,874],builtin_l:[248,874],builtin_lt:[248,555,682,874],builtin_mul:[248,874],builtin_n:[248,874],builtin_neg:[248,874],builtin_or:[248,874],builtin_po:[248,874],builtin_pow:[43,248,874],builtin_radd:[248,874],builtin_rand:[248,874],builtin_rfloordiv:[248,874],builtin_rmul:[248,874],builtin_ror:[248,874],builtin_rpow:[248,874],builtin_rsub:[248,874],builtin_rtruediv:[248,874],builtin_rxor:[248,874],builtin_setitem:[248,874],builtin_some_op:43,builtin_sub:[248,874],builtin_truediv:[248,874],builtin_xor:[248,874],bypass:1295,cach:[915,931,989,1001],cache_fn:989,calcul:[40,41,42,43,843,844,847,848,854,855,857,858,874,899,1120,1128],call:[43,915,959,989,1055,1063,1080,1086,1090,1140,1184,1185,1188,1192,1269,1280,1281,1282,1285,1289,1295,1298],callabl:[40,41,913,914,915,924,925,959,989,1001,1014,1016,1044,1080,1136,1137,1138,1139,1140,1184,1188,1189,1190,1192,1193,1221,1232],can:[43,915,957,958,959,989,1057,1102,1104,1140,1252,1294,1295,1298],cancel_join_thread:1140,cannot:43,captur:1252,cast:[40,41,128,293,435,567,695,965,989,1006,1102,1104,1108],catch_except:[989,1014],categori:43,caus:43,ceil:[214,293,435,518,695,843,989,992],cell:[1221,1231,1269,1278],certain:[40,41,989,992,1042,1043],chain:[40,41,1136,1137,1138,1291,1292],chang:[43,915,989,1057,1140,1184,1186,1193,1252,1294],channel:[989,1023,1102,1104,1105,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279],check:[15,16,17,18,19,40,41,43,915,954,964,965,970,979,988,989,999,1019,1032,1040,1072,1082,1086,1092,1140,1184,1185,1192,1252,1295],check_nest:[1184,1192],check_shap:[40,41],check_submod_ret:[1281,1282],check_typ:[40,41],choic:[1252,1295],choleski:[772,1109],choos:[843,856,989,1083,1109,1114,1120,1125,1252],choose_random_framework:59,chosen:[40,41,989,992,1083],chunk:[915,957,958,959,1140],chunk_siz:[915,959,1140],circl:[1120,1121,1123],clark:1252,clear:[915,931,1140],clear_framework_stack:59,clear_mem_on_dev:[433,687,915],click:1252,clip:[40,41,293,435,695,989,1004,1005,1046,1048,1252],clip_matrix_norm:989,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,989],clipped_delta:1140,clone:[40,41,915,934,935,936,937,1140],clone_arrai:1140,clone_it:1140,clone_nest:1140,clonedit:1140,cloneditem:1140,clonednest:1140,close:[43,1102,1107,1120,1123,1140,1298],closest:[843,846,965,970],closest_valid_dtyp:965,code:[40,41,42,43,485,1252,1253,1294,1295],codebas:[915,957,958,1140,1252,1295,1298],codomain:[843,844,847,848,855,857,858],colab:1252,collect:[15,40,41,433,435,469,474,478,482,483,485,874,913,915,965,989,1086,1102,1109,1117,1120,1140,1184,1196,1203,1213,1221,1234,1238,1255,1269,1283,1285],color:[40,41,42,1296,1297],column:[989,1033],combin:[40,41,42,1102,1107,1252,1298],combined_batch_s:1140,come:1295,command:1252,comment:43,commit:1298,common:[40,41,43,1120,1125],common_key_chain:[40,41],commun:[43,1252,1295],compar:[40,41,989,991,997,998],comparison_oper:[0,9,10],compat:[43,843,845,852,853,860,862,870,871,872,874,893,899,989,1018,1057,1120,1128,1252,1298],compil:[293,435,695,1241,1242,1246,1252,1281,1282,1285,1286,1287,1288,1289,1290],compile_graph:[1240,1252,1281,1282,1285,1289],compile_on_next_step:[1281,1282,1285,1286,1287,1288,1289,1290],complet:[40,41,1109,1114,1140],complex:[1295,1298],compliant:[843,856],compon:[989,1010],composit:43,comput:[40,41,843,845,852,853,856,860,862,874,893,915,959,989,1004,1005,1011,1012,1018,1045,1086,1088,1089,1090,1091,1093,1094,1095,1097,1099,1102,1105,1109,1110,1111,1112,1113,1114,1117,1118,1119,1120,1121,1123,1124,1125,1129,1130,1131,1132,1134,1184,1188,1203,1204,1205,1206,1207,1208,1209,1210,1211,1221,1222,1223,1224,1225,1226,1227,1228,1230,1232,1234,1235,1236,1237],concat:[40,41,915,944,945,946,947,959,989,1023,1140],concaten:[40,41,128,293,435,567,695,989,1023,1140,1252],concatten:[40,41,915,944,945,946,947,959,1140],condit:[435,913,914,989,1083,1184,1192],conditon:[1184,1192],config:[40,41,1140],config_list:1140,configur:[40,41],conflict:43,conform:43,conjunct:1295,connect:[1246,1269,1279,1280],consid:[40,41,843,856,1109,1114,1294,1298],consist:[40,41,915,947,1140,1203,1204,1281,1282,1295],constant:[915,924,925,989,1007,1140,1184,1188,1234,1235,1236,1237,1238,1239,1260,1261,1265,1268,1281,1282,1283,1284,1295],constant_kwarg:1140,constant_pad:[293,435,567,695,989],constitu:[40,41],construct:[989,1074,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294],constructor:[40,41,42,989,993,1291,1292],consum:[915,1140],cont_feat_dim:[1221,1232],contaienr:[40,41],contain:[15,18,19,42,43,836,837,838,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,862,867,868,870,871,872,874,893,899,915,934,938,959,965,969,989,990,994,995,1003,1004,1005,1008,1018,1032,1046,1048,1058,1069,1070,1086,1088,1089,1091,1093,1094,1095,1120,1128,1136,1137,1138,1139,1140,1196,1197,1203,1205,1206,1207,1209,1211,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[435,695,989],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[435,989,1049,1221,1232,1269,1280],context_dim:[1269,1280],contextmanag:[59,60],continu:[43,1140,1295],contract:[40,41,1203,1204],contribut:[1252,1253],contributor:[43,1252],control:1252,conv1d:[195,378,499,825,1221,1252,1269],conv1d_transpos:[195,378,499,825,1221],conv1dtranspos:[1252,1269],conv2d:[195,378,499,635,825,1221,1252,1269],conv2d_transpos:[195,378,499,825,1221],conv2dtranspos:[1252,1269],conv3d:[195,378,499,635,825,1221,1252,1269],conv3d_transpos:[195,378,499,825,1221],conv3dtranspos:[1252,1269],convent:[40,41,1203,1204],conver:[915,931,942,954,961,964,1140],convers:[16,17,18,19,40,41,1140,1252],convert:[15,16,17,18,19,40,41,43,915,942,943,965,971,977,978,989,1066,1077,1078,1102,1104,1108,1109,1116,1140,1184,1186,1193,1252,1259],convert_dtyp:965,convolut:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],cool:43,cooler:43,coordin:[989,1047,1120,1121,1123,1125],copi:[40,41,485,989,1009,1140,1184,1186],copy_arrai:[435,695,989],copy_nest:1184,core:[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1252],corner:43,correct:[43,1252,1295],correctli:[40,41,1109,1112,1120,1125,1203,1205,1206,1207,1208,1209,1210,1211],correspond:[40,41,43,874,899,989,1006,1196,1197],cos:[85,397,518,650,843,989,1023,1120,1121,1134,1295],cosh:[85,397,518,650,783,843,1120],cosin:[843,847,848,1120,1121,1122,1127],cost:[1086,1088,1089,1091,1093,1094,1095,1136,1137,1138,1139],cost_fn:[1136,1139],could:1298,count:[40,41,863,864,870,871,872,1140,1203,1208,1210,1250],cprint:1296,cpu:[40,41,43,915,952,954,960,961,964,989,992,996,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1085,1140,1196,1197,1198,1199,1200,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1294,1295],creat:[40,41,836,837,838,915,924,925,989,992,996,1024,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1076,1085,1086,1099,1140,1196,1197,1198,1199,1200,1252,1253,1258,1259,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1298],create_if_abs:[40,41],create_vari:1260,creation:[40,41,42,43],creation_funct:[389,390,391,836,837,838],crop:[1102,1106],crop_siz:[1102,1106],cross:[293,695,989,1234,1235,1236,1237],cross_entropi:1234,cuda:[40,41,915,924,943,960,989,992,996,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1085,1140,1196,1197,1198,1199,1200,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292],cumprod:[128,293,435,695,989],cumsum:[695,989],cumul:[989,1011,1012],current:[40,41,42,43,915,924,948,949,951,955,965,971,979,988,989,1013,1027,1035,1039,1050,1054,1140,1184,1185,1192,1252,1298],current_framework:59,current_framework_str:[435,695,989,1140],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1246,d_in:[1221,1222,1223,1224,1225,1226,1227],d_out:[1221,1222,1223,1224,1225,1226,1227],da_can_termin:1140,da_dim_s:[915,1140],da_direct:1140,da_tune_step:[915,1140],dai:1298,daniel:1252,data:[40,41,42,43,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,860,862,863,864,870,871,872,874,893,899,915,917,918,919,920,921,922,927,928,929,943,965,969,970,971,975,976,977,978,979,980,981,988,989,992,996,1018,1024,1033,1040,1052,1053,1057,1068,1072,1085,1086,1092,1100,1120,1128,1140,1221,1230,1252],data_format:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],data_type_funct:[392,394,395,839,840,841],dataset:[40,41],datatyp:[40,41,965,970,980,981],dcdw:[1086,1088,1089,1091,1093,1094],debug_info:1246,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1086,1093,1094,1285,1287,1288],decay_lambda:[1086,1093,1094,1285,1287,1288],decid:[40,41,1298],decompos:[1109,1110,1114],decomposit:[1109,1110,1114,1115],decor:43,decrement:[989,1036],dedic:[1086,1100,1258,1259],deep:[40,41,1252],deep_copi:[40,41],deeper:[915,937,941,947,1140,1184,1193,1252],deepli:[1184,1186],def:[43,60,81,210,393,514,646,916,923,926,966,967,968,1087,1140,1144,1151,1247,1251,1252,1261,1264,1267,1294,1295,1298],default_dev:43,default_devic:915,default_dtyp:[43,965],default_float_dtyp:965,default_int_dtyp:965,default_key_color:[40,41,42],default_nod:1140,default_rng:485,default_v:[989,1014],defaultdevic:[915,916],defaultdtyp:[965,966],defaultfloatdtyp:[965,967],defaultintdtyp:[965,968],defer:43,defin:[43,989,1010,1051,1053,1085,1196,1198],degre:[1120,1132,1134],del:1140,delta:[1086,1088,1140,1246],delta_dim_s:1140,delta_percent_mem:1140,delta_sf:1140,delta_util:1140,demo:1252,denomin:[989,1022,1029,1062,1069,1070,1238,1239,1283,1284],dens:[1269,1279],depend:[43,843,844,847,848,854,855,857,874,899,989,1083,1109,1115,1252],depth:[40,41,435,460,915,937,941,947,989,1031,1051,1140,1184,1193,1246,1250,1281,1282],depth_cutoff:[40,41],depthwis:[1221,1228,1269,1276],depthwise_conv2d:[195,378,499,635,825,1221],depthwiseconv2d:[1252,1269],deriv:[1086,1088,1089,1091,1093,1094,1095,1184,1186,1193,1252,1281,1285,1289,1291],descend:[867,868,1109,1115],descent:[1086,1091,1285,1290],describ:[40,41,1203,1204],descript:[860,862],design:[1252,1253],desir:[40,41,915,960,965,969,989,992,996,1033,1034,1052,1053,1085,1102,1107,1140,1203,1205,1206,1207,1209,1211],desired_aspect_ratio:[474,477,1102,1107],desired_percent_increas:1140,detail:1298,detect:[40,41,1184,1185,1192],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,843,844,845,847,848,849,850,851,855,857,858,860,862,870,871,872,874,899,915,950,952,953,962,965,969,970,976,979,980,981,988,989,991,992,996,997,998,1032,1035,1039,1040,1072,1082,1086,1092,1120,1128,1136,1137,1138,1139,1140,1221,1232],dev:[40,41,42,43,121,287,433,435,436,439,449,450,451,458,459,460,461,462,463,468,485,486,560,687,915,918,919,921,922,924,925,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,951,954,955,956,957,958,959,960,961,964,989,992,996,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1085,1086,1101,1196,1197,1198,1199,1200,1258,1259,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292],dev_clon:[40,41,915],dev_clone_arrai:915,dev_clone_it:915,dev_clone_nest:915,dev_dist:[40,41,915],dev_dist_arrai:915,dev_dist_it:915,dev_dist_nest:915,dev_from_str:[43,121,287,433,560,687,915],dev_mapp:915,dev_str:[40,41],dev_to_str:[121,287,433,560,687,915],dev_unifi:915,dev_unify_arrai:915,dev_unify_it:915,dev_unify_nest:915,dev_util:915,devclonedit:915,devcloneditem:915,devclonednest:915,devdistit:915,devdistitem:915,devdistnest:915,develop:[43,1252,1295,1298],deviat:[40,41,1196,1199,1203,1209,1238,1239,1283,1284],devic:[21,40,41,43,389,390,391,434,435,448,836,837,838,917,918,919,920,921,922,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,989,992,996,1024,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1085,1086,1101,1196,1197,1198,1199,1200,1252,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292],devmanag:[915,923],devmapp:[915,925],devmappermultiproc:915,diag:[1109,1115],diagon:[98,225,410,536,663,860,989,1033],dict:[15,16,17,18,19,40,41,42,915,917,920,924,925,927,937,938,939,940,941,989,1015,1016,1017,1044,1136,1137,1138,1140,1184,1186,1187,1188,1191,1193,1258,1259],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,839,840,915,934,935,938,939,1109,1114,1140,1221,1230,1252,1295,1298],differenti:[1252,1295],dilat:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],dim:[40,41,43,989,1051,1102,1103,1107,1109,1115,1140,1269,1280],dim_siz:[40,41,915,1140],dimens:[40,41,42,860,861,862,863,864,870,871,872,915,946,989,1000,1006,1010,1015,1016,1017,1020,1023,1030,1041,1051,1056,1057,1067,1068,1071,1079,1081,1102,1106,1109,1112,1115,1136,1137,1138,1139,1140,1196,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1218,1221,1222,1223,1224,1225,1226,1227,1228,1231,1234,1236,1237,1269,1270,1271,1272,1273,1274,1275,1276,1279,1280],dimension:[40,41,485,860,862,870,871,872,989,1067,1068,1109,1115],direct:1140,directli:[43,1184,1193,1295,1298],directori:[989,1064,1075],discret:[1234,1236],disk:[40,41,1102,1104],distanc:[989,992],distribut:[40,41,915,934,938,939,940,941,1140,1196,1197,1198,1199,1200,1221,1229,1269,1277,1281,1282],distribute_nest:1140,distributedarrai:[40,41],distrubt:[1234,1236],dive:[1252,1295],divid:[40,41,989,1067,1069,1120],dividend:[1120,1128],divis:[989,1022,1029,1062,1069,1070,1086,1088,1089,1093,1120,1128,1285,1286,1287],divisor:[1086,1088,1089,1093,1120,1128,1285,1286,1287],doc:1252,docstr:43,doe:[40,41,43,989,992,1067,1294],doesn:[1109,1114,1252],doing:43,domain:[843,844,847,848,855,857,858,1120,1121],don:1252,done:43,door:1298,dot:[1109,1111,1221,1232,1233,1269,1280],down:1294,downscal:[989,1004,1005],drag:[1252,1298],draw:[1196,1197,1199,1200],drawn:[1196,1197,1198,1199,1200],drop:[1252,1298],dropout:[1221,1252,1269,1280],dropout_r:[1269,1280],ds_tune_step:915,dtype:[40,41,43,128,293,389,390,391,392,394,395,435,436,439,440,448,451,461,468,567,695,836,837,838,839,840,841,969,970,971,972,973,974,976,977,978,979,980,981,982,983,984,985,986,987,988,989,992,996,1024,1033,1051,1052,1053,1085],dtype_bit:[128,293,435,567,695,965],dtype_from_str:[43,128,293,435,567,695,965],dtype_in:[435,445,446,447,965,971,976,977,978,979,980,981,988],dtype_to_str:[128,293,435,567,695,965],duplic:[40,41],dure:[40,41,43,913,914,989,1080,1086,1088,1089,1093,1136,1137,1138,1139,1281,1282,1285,1286,1287,1289],dynam:[435,441,913,914],each:[40,41,42,43,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,867,868,874,893,899,915,924,925,934,935,936,937,938,939,940,946,958,959,989,990,991,1007,1018,1056,1067,1071,1074,1084,1086,1089,1091,1093,1094,1095,1102,1105,1109,1115,1120,1123,1128,1130,1131,1140,1184,1188,1196,1197,1203,1204,1221,1222,1223,1224,1225,1226,1227,1228,1229,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1295],eager:1295,easi:1298,easili:1252,econom:1298,ecosystem:1252,edg:[989,1003,1007,1084],effect:[1086,1095],effective_grad:[1086,1095],effici:1298,einop:[40,41,989,1015,1016,1017],einops_rearrang:[40,41,989],einops_reduc:[40,41,989],einops_repeat:[40,41,989],einstein:[40,41,1203,1204],einsum:[40,41,181,366,487,625,805,1203],either:[40,41,43,843,850,855,857,989,1014,1044,1047,1049,1136,1137,1138,1139,1140,1269,1280,1281,1282,1295],eleg:1140,element:[40,41,43,485,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,863,864,867,868,870,871,872,874,893,899,915,936,940,946,965,969,989,990,992,994,995,997,998,1002,1003,1004,1005,1011,1012,1018,1021,1022,1033,1034,1046,1048,1056,1058,1067,1078,1083,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1140,1203,1204,1206,1208,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1229,1269,1277],elementwis:[40,41],elementwise_affin:[1283,1284],elementwise_funct:[843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858],elemtn:[1196,1197],elif:1140,els:[989,999,1014,1019,1140],elsewher:[989,1083],emphas:1252,empti:[40,41,1109,1114,1140],enabl:[40,41,42,43,1252],encapsul:[839,841],encod:[989,1023,1102,1104],end:[989,992,1252,1295],ensur:43,entir:[40,41,870,871,872,915,959,1140,1252,1269,1278],entri:[40,41,989,1042,1043,1067,1068],entropi:[1234,1235,1236,1237],enumer:1140,environ:1252,eps:[392,839,840],epsilon:[1086,1088,1089,1093,1234,1235,1236,1237,1238,1239,1283,1284,1285,1286,1287],equal:[40,41,435,518,567,695,843,849,850,989,991,997,998,1007,1067,1084,1120,1132,1134,1196,1200],equality_matrix:[989,991],equat:[40,41,1203,1204],equival:[843,856,860,862,989,992,1120,1134],erf:[483,783,1120],error:[40,41,43,915,989,1068,1120,1129,1140,1213,1214,1281,1282,1285,1289],essenti:43,etc:[40,41,43,915,960,989,992,996,1025,1026,1033,1042,1043,1051,1052,1053,1059,1060,1085,1140,1196,1197,1198,1199,1200,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1298],euclidean:[860,862],euler:835,evalu:[40,41,843,854,855,870,871,872,989,1047,1184,1185,1192],even:[43,1298],evenli:[40,41,989,992,1042,1043,1067],everi:[989,991,1298],exact:[40,41],exampl:[43,913,914,989,1003,1071,1109,1114,1252,1294,1295,1298],example_input:[435,441,913,914],exc_tb:1140,exc_typ:1140,exc_val:1140,exce:[989,1048],except:[40,41,44,47,870,871,872,989,992,999,1006,1014,1080,1140],excess_s:1140,excit:[1252,1295],exclud:[59,61,989,992,1196,1200],exclus:[40,41,435,443,456,469,471,989,1011,1040,1086,1092,1196,1198],execut:[43,989,1080,1295],execute_with_gradi:[161,342,469,604,762,1086,1252,1294],exist:[40,41,989,1014,1140,1252,1285,1289,1298],exp:[783,1120],expand:[40,41,989,1020,1023],expand_dim:[40,41,293,695,989,1140],expect:[989,993],explain:[43,1295],explicitli:[43,1269,1278,1280,1281,1282,1295],expon:[43,874,899,989,1070],exponenti:[43,874,899,1120,1129,1130],expos:[989,996,1008],express:[843,847,857,989,1047],exsit:[40,41],extend:43,extra:[40,41,42,1086,1090],extract:[860,861],eye:[1109,1111],fabian:1252,fabio:1252,factor:[915,924,957,958,959,1086,1088,1089,1093,1094,1109,1115,1140,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276,1285,1286,1287,1288],fail:43,falck:1252,fall:[1281,1282,1285,1289],fallback_to_non_compil:[1281,1282,1285,1289],fals:[15,18,19,40,41,42,59,66,67,68,69,70,433,435,443,444,456,464,467,469,470,471,478,479,843,849,850,851,856,860,862,867,868,870,871,872,915,933,946,954,959,964,965,972,973,974,975,989,991,1011,1014,1019,1023,1030,1040,1044,1065,1067,1081,1083,1086,1089,1090,1091,1092,1093,1094,1095,1109,1112,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1203,1205,1206,1207,1208,1209,1210,1211,1240,1241,1242,1246,1250,1258,1259,1281,1282,1285,1286,1287,1288,1289,1290],fan_in:1260,fan_mod:1260,fan_out:1260,far:[1184,1185,1192,1294],faster:[913,914],favourit:[1252,1294],feasibl:1298,feat_dim:[1221,1232,1233],fed:[915,959,1140],feed:[915,959,1140],few:43,field:1298,file:[40,41,43,989,1064,1075,1281,1282],filepath:[40,41],fill:[40,41,836,837,838,989,1024,1052,1196,1198],fill_valu:[435,448,989,1024],filter:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276,1298],filter_s:[1269,1270,1271],filter_shap:[1269,1272,1273,1274,1275,1276],find:[40,41,1298],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,209,210,392,393,513,514,645,646,839],finish:[1252,1298],finit:[843,849],first:[40,41,43,485,843,845,852,853,913,914,915,946,989,997,1006,1010,1018,1042,1043,1071,1073,1086,1090,1109,1115,1136,1137,1138,1139,1140,1184,1185,1192,1196,1202,1203,1208,1210,1269,1280,1281,1282,1285,1289,1295,1298],firstlayersiren:[1252,1260],firstli:[1295,1298],fist:[915,959,1140],fit:[40,41,433,435,469,474,478,482,483,485,989,1056,1102,1107],fix:43,fkt:1298,flag:[40,41,43,1086,1092],flat:[40,41,43,989,1056,1059],flat_list:[40,41],flatten:[40,41,860,862,989,1023,1056,1203,1205,1206,1207,1209,1211],flatten_key_chain:[40,41,1281,1282],flexibl:[1252,1295],flip:[40,41,101,228,413,539,666,863],float32:[43,435,451,965,969,977,978,989,992,996,1033,1052,1053,1085],float_dtyp:[965,973,983],float_img_to_uint8_img:1102,floor:[293,435,695,989,1022,1140],floormod:[293,435,695,989],fluid:1298,fname:[1240,1242,1246,1281,1282],folder:[43,1252],follow:[40,41,43,839,841,860,862,915,959,989,1036,1037,1038,1069,1070,1086,1089,1091,1093,1094,1095,1140,1184,1188,1193,1221,1232,1233,1252,1269,1279,1285,1289],followng:[839,840],fomaml_step:1136,forget:[1086,1088,1089,1093,1285,1286,1287],fork:[989,1049,1252,1253],forkserv:[989,1049,1140],form:[15,16,17,18,19,40,41,989,996,1086,1089,1091,1093,1094,1095,1184,1186,1193,1221],format:[40,41,43,915,933,965,969,971,975,989,992,996,1033,1052,1053,1085,1140,1203,1204,1252,1294,1295],format_fn:[40,41],format_key_chain:[40,41],forward:[1281,1282,1285,1289,1294],found:[40,41,42],fourier:[989,1023],fourier_encod:989,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,222,223,226,227,229,233,236,237,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,348,349,350,352,353,354,355,356,358,359,362,363,364,365,367,368,369,370,371,372,373,374,377,379,380,381,382,383,384,385,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,537,538,540,544,547,548,556,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,605,606,607,608,610,611,612,614,615,616,617,621,622,623,624,626,627,628,629,630,631,632,636,637,638,643,644,646,647,648,651,652,653,654,655,656,657,658,659,660,661,664,665,667,671,674,675,683,688,689,690,691,692,693,694,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,763,764,765,766,767,769,770,771,773,774,775,776,777,778,779,781,782,784,785,786,787,788,789,790,791,792,793,794,795,796,797,799,800,801,802,803,804,806,807,808,809,810,811,812,815,816,817,818,819,820,821,823,824,826,827,828,829,830,831,832,837,838,840,841,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,864,868,871,872,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1239,1241,1242,1244,1245,1247,1251,1252,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1297,1298],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1140,framewrk:[989,1049],freeli:43,frequenc:[989,1023],from:[40,41,42,43,843,858,860,861,863,864,870,871,872,915,924,925,959,965,971,989,1014,1025,1026,1033,1057,1068,1076,1083,1086,1089,1093,1102,1106,1109,1114,1136,1137,1138,1139,1140,1184,1186,1193,1196,1197,1198,1199,1200,1203,1208,1210,1221,1229,1232,1252,1258,1259,1269,1277,1280,1285,1289,1294,1295],from_cal:[1281,1282],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[128,293,435,567,695,839,840,989,1109,1114,1252],full_matric:[1109,1115],fulli:[43,1252,1269,1279,1280,1294],func:[40,41,435,441,469,470,913,914,915,959,989,1001,1086,1090,1140],further:[43,1298],furthermor:1298,futur:1298,gain:1260,gamma:[1238,1239],gather:[40,41,128,293,435,567,695,989,1026],gather_nd:[40,41,128,293,435,567,695,989],gauss:[1120,1129],gaussian:[1213,1214],geglu:[1252,1255],gelu:[376,496,814,1213,1252,1255],gener:[23,40,41,43,433,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,485,913,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1092,1196,1198,1200,1201,1252,1285,1289],geometr:[989,1023],get:[40,41,43,839,840,841,915,924,925,933,948,949,954,958,961,964,965,975,976,989,993,1027,1028,1029,1055,1140,1250,1252,1269,1278,1298],get_all_arrays_in_memori:989,get_all_arrays_on_dev:915,get_framework:59,get_initial_st:[1269,1278],get_min_bas:989,get_min_denomin:989,get_mod_kei:[1281,1282],get_num_dim:[435,695,989],get_param:1246,get_param_recurs:1246,get_referrers_recurs:989,getfullargspec:1140,gist:1252,give:[43,867,868,989,1057,1295],given:[40,41,43,836,837,838,863,864,867,868,915,948,954,957,958,959,961,964,965,969,989,992,996,1003,1011,1012,1026,1042,1043,1052,1053,1056,1059,1060,1067,1074,1079,1081,1085,1086,1088,1089,1091,1093,1094,1095,1109,1111,1116,1120,1121,1140,1184,1189,1190,1196,1199,1200,1202,1203,1206,1208,1209,1210,1211,1221,1222,1223,1224,1225,1226,1227,1228,1258,1259,1298],global:[40,41,42,915,924,925,932,957,958,959,965,972,973,974,989,1013,1028,1029,1055,1061,1062,1063,1069,1070,1086,1101,1140,1238,1239,1244,1245,1252,1283,1284],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1252,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279],googl:1252,got:[43,1252],gpu0:43,gpu2:43,gpu:[915,950,953,1140],gpu_is_avail:[433,915,1140],grad:[1252,1285,1289,1294],gradient:[25,40,41,470,471,472,473,915,959,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1105,1136,1137,1138,1139,1252,1285,1286,1287,1288,1289,1290,1294,1298],gradient_descent_upd:[1086,1136,1137,1138,1139],gradient_imag:[164,347,474,609,768,1102],gradienttrack:[1086,1087],graph:[1086,1089,1091,1093,1094,1095,1240,1241,1242,1247,1252,1281,1282],graph_compil:[1240,1241,1242,1243,1244,1245,1246,1250],greater:[40,41,989,992,1021,1068,1196,1200],green:[40,41,42,1296,1297],grid:[989,1047],group:[1102,1107],guid:[1252,1253,1298],gym:1252,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1298,half:[989,992,1140,1196,1200],hand:1252,handl:[40,41,42,43,913,914,915,931,933,942,943,954,961,964,1086,1089,1091,1093,1094,1095,1140,1285,1286,1287,1288,1289,1290],has:[40,41,43,989,1071,1109,1114,1120,1124],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,989],hasattr:1140,have:[40,41,43,839,840,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,860,862,863,864,870,871,872,874,893,899,989,1006,1010,1015,1016,1017,1018,1024,1071,1086,1092,1100,1109,1115,1120,1128,1140,1252,1294,1295],haven:43,hdf5:[40,41,1281,1282],head:[1221,1232,1269,1280],head_dim:[1269,1280],height:[1102,1107],height_cutoff:[40,41],help:[59,392,433,434,915,927,928,929,930,965,1086,1246,1250,1252,1260,1262,1263,1265,1266,1268],helper:1252,here:[43,1252],hidden:[1221,1231,1269,1278],hierarch:[989,1008],hierarchi:[40,41],high:[40,41,485,1196,1198,1200],higher:[1086,1089,1091,1093,1094,1095,1109,1115],highest:[1196,1198],highest_util:1140,highest_util_nod:1140,highli:1252,highlight:1298,highlight_subgraph:[1240,1242,1246],hint:43,hkt:1298,hold:[965,969,989,992,996,1059,1060],host:1252,hot:[989,1051],how:[1252,1269,1280,1281,1282,1295,1298],howev:[43,1295],http:1298,hyperbol:[843,844,848,1120,1122,1126,1127,1133,1135,1213,1220],hypothet:1298,icon:1252,idea:1252,ident:[40,41,43,128,293,435,567,695,989],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[835,839,840,843,858],if_exist:[40,41],ignor:[40,41,1285,1289],ignore_key_error:[40,41],ignore_miss:[1285,1289],ignore_non:[40,41],iinfo:[80,209,392,513,645,839],imag:[27,475,476,477,989,1041,1103,1104,1105,1106,1107,1108,1221,1222,1223,1224,1225,1227,1228,1252,1298],image_dim:[1102,1106],imkkhk:1298,immedi:[1252,1295,1298],implement:[43,843,844,847,848,854,855,857,874,899,1252,1295,1298],in_featur:[1221,1230],inadvert:43,includ:[40,41,43,860,862,870,871,872,989,992,1032,1069,1070,1082,1184,1185,1196,1200,1269,1279,1280,1283,1284,1294],include_deriv:[1184,1186,1193],include_empti:[40,41],include_gener:[1240,1241,1242,1246,1281,1282],include_inf:[40,41,989,1032,1082],include_nest:[1184,1185],include_self:[40,41],inclus:[1196,1198],incom:[1221,1230],increas:[915,937,941,947,989,1007,1020,1084,1140,1184,1193],increasingli:1298,increment:[989,1037,1140],increment_param_count:1246,inde:1252,indent:[40,41,42],independ:[1196,1197],index:[40,41,435,485,989,994,995,1025,1026,1047,1068,1071,1184,1187,1189,1190,1191,1194],index_nest:1184,indic:[40,41,435,449,450,460,462,463,860,862,867,868,989,994,995,1025,1026,1034,1051,1059,1060,1184,1185,1187,1189,1190,1191,1192,1194,1195,1196,1197,1213,1218,1221,1222,1223,1224,1225,1226,1227,1228,1238,1239,1269,1270,1271,1272,1273,1274,1275,1276,1281,1282],indices_wher:[128,293,435,695,989],indistinguish:[843,858],inevit:1298,inf:[40,41,860,862,989,1032,1082,1120,1124],infer:[860,861,913,914,989,1030,1033,1057,1065,1102,1106,1109,1114,1295,1298],infin:[843,844,846,847,848,849,850,855,857,858,860,862],infinit:[843,858],inform:[839,840,841,1086,1097],init_c:[1221,1231],init_h:[1221,1231],init_on_first_step:[1285,1289],initi:[40,41,42,59,392,433,434,915,927,928,929,930,965,1086,1140,1221,1231,1246,1250,1252,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1285,1289],initialz:[1281,1282],inner:[1136,1137,1138,1139],inner_batch_fn:[1136,1137,1138],inner_batch_shap:[1221,1230],inner_cost_fn:[1136,1137,1138],inner_grad_step:[1136,1137,1138,1139],inner_learning_r:[1136,1137,1138,1139],inner_optimization_step:[1136,1137,1138,1139],inner_v:[1136,1137,1138],inp:1140,inplac:[40,41,989,999,1035,1039,1072,1086,1089,1091,1093,1094,1095,1258,1259,1285,1286,1287,1288,1289,1290],inplace_arrays_support:[435,989],inplace_decr:[128,293,435,567,695,989],inplace_incr:[128,293,435,567,695,989],inplace_oper:[0,11,12],inplace_upd:[40,41,128,293,435,567,695,989,1258,1259],inplace_variables_support:[435,989],input:[15,18,19,40,41,42,43,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,863,864,867,868,870,871,872,913,914,915,924,925,932,933,934,937,938,941,947,959,960,965,969,970,972,973,974,975,976,980,981,989,990,991,994,995,997,998,999,1000,1002,1003,1004,1005,1006,1007,1009,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1030,1032,1033,1034,1036,1037,1038,1040,1041,1045,1046,1047,1048,1056,1058,1065,1066,1068,1071,1072,1073,1074,1076,1077,1078,1079,1081,1082,1084,1086,1090,1092,1097,1101,1102,1103,1104,1105,1106,1108,1109,1112,1114,1115,1117,1118,1119,1120,1122,1124,1126,1127,1128,1132,1133,1134,1135,1136,1137,1138,1139,1140,1196,1197,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1238,1239,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1283,1284,1295],input_ax:[915,959,1140],input_channel:[1269,1270,1271,1272,1273,1274,1275,1278,1279],input_queu:1140,inputs_split:1140,insert:[989,1020],insid:43,inspect:1140,inspir:1298,instal:1252,instanc:[15,16,17,18,19,40,41,43,485,874,893,899,915,924,1140,1258,1259,1291,1292],instead:[40,41,485,1203,1205,1206,1207,1208,1209,1210,1211,1298],int32:43,int64:[965,969,989,992,996,1033,1052,1053,1085],int_dtyp:[965,974,984],integ:[40,41,485,839,841,843,845,846,860,862,870,871,872,965,981,989,992,1002,1021,1058,1067,1196,1198,1201],integr:1252,intend:43,inter:1252,interact:1252,interchang:[40,41,989,1073],interest:1252,interfac:[989,996,1295],intermedi:[40,41],intern:[40,41,915,1086,1100,1140,1184,1185,1192,1193,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1291,1292],interpol:[989,1041],intersect:[1120,1121],interv:[40,41,870,871,872,989,992,1003,1042,1043,1120,1123,1196,1200],introduc:1298,inv:[772,1109,1298],invalid:[870,871,872],invalid_dtyp:965,invers:[843,844,1109,1111,1113,1120,1121,1122,1123,1124,1126,1298],invert:[1109,1111,1113],invest:1298,invoc:[913,914],irrespect:1252,is_al:1140,is_arrai:[128,293,435,567,695,989,1140],is_float_dtyp:965,is_int_dtyp:965,is_mean:1140,is_sum:1140,is_var:[1246,1250],is_vari:[161,342,469,604,762,1086],isfinit:[85,214,397,518,650,843],isinf:[85,214,397,518,650,843],isinst:1140,isnan:[85,214,397,518,650,843],isnumer:1140,issu:43,item:[15,19,40,41,874,886,887,915,924,925,927,934,936,938,940,946,965,972,989,1008,1031,1069,1070,1140,1184,1188,1189,1190,1193,1194,1195,1252,1281,1282,1294],iter:[15,16,17,18,19,40,41,42,913,914,915,918,919,921,922,924,925,928,929,936,938,939,940,941,946,959,989,991,1000,1006,1007,1033,1047,1052,1056,1057,1060,1065,1067,1071,1074,1079,1084,1140,1184,1185,1186,1188,1192,1193],iterbal:[915,936,940,946,1140],its:[485,867,868,915,959,989,1033,1057,1073,1079,1140,1252],itself:[43,1184,1193],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,863,864,867,868,870,871,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1250,1252,1253,1255,1256,1257,1258,1259,1260,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1296,1297],ivy_backend:[40,41],ivy_bay:1298,ivy_test:43,ivyfcmodel:1294,ivyh:[40,41,42],ivymodul:[192,822],jame:1252,jax:[43,1086,1092,1252,1298],jax_concat:1252,jnp:1252,join:[40,41,989,1006,1071,1140],journal:1252,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1252,1269,1278,1298],kaimingnorm:[1260,1264],kalman:1298,kalman_filt:1298,kalman_filter_step:1298,kalman_filter_upd:1298,keep:[40,41,915,960,989,1081,1140,1252,1253,1298],keep_inner_v:[1136,1137,1138],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1136,1137,1138],keepdim:[40,41,435,467,478,479,860,862,870,871,872,989,1081,1109,1112,1203,1205,1206,1207,1208,1209,1210,1211],kei:[15,16,17,40,41,42,43,874,879,915,927,989,1008,1136,1137,1138,1140,1184,1187,1191,1221,1232,1233,1252,1258,1259,1269,1280,1285,1289],kept:[40,41,42,1136,1137,1138],kera:1298,kernel:[1221,1231],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,915,924,925,937,941,947,989,993,1015,1016,1017,1044,1140,1184,1188,1281,1282],keyword_color_dict:[40,41,42],kind:[839,840,841,1298],kwarg:[15,16,17,40,41,42,59,63,915,924,937,941,947,989,1044,1140,1240,1241,1242,1246,1258,1259,1281,1282],kwarg_stateful_idx:[1240,1241,1242,1246,1281,1282],kwargs_clon:1140,kwargs_dist:1140,kwargs_uni:1140,label:[43,1234,1235,1236,1237],lamb:[1086,1093,1252,1285],lamb_upd:1086,lambda:[1140,1285,1288,1290,1294],lar:[1086,1093,1094,1252,1285],larger:[839,840,989,1003],largest:[40,41,839,840,841,989,994,1021],lars_upd:1086,last:[40,41,863,864,870,871,872,989,992,1010,1041,1067,1071,1109,1112,1115,1203,1208,1210,1213,1218,1221,1231,1269,1279],later:[40,41,989,1001],latest:[1269,1278],layer:[1086,1089,1091,1093,1095,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1238,1239,1252,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1298],layer_norm:1238,layernorm:[1252,1283],layerwis:[1086,1094,1285,1288],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1184,1185,1192],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1213,1214,1215],leaky_relu:[814,1213],learn:[860,861,1086,1089,1091,1093,1094,1095,1109,1114,1136,1137,1138,1139,1196,1202,1252,1285,1286,1287,1288,1289,1290,1295,1298],learnabl:[1238,1239,1283,1284],least:43,leav:[15,18,19,40,41,1184,1185,1186,1192,1193],left:[40,41,43,1109,1112,1203,1205,1206,1207,1208,1209,1210,1211,1252],leftmost:[40,41],len:1140,length:[40,41,42,989,992,1057,1068,1079],lenton2021ivi:1252,lenton:1252,less:[40,41,43,85,214,397,518,650,843,846,855,858,860,862,989,1002,1140,1196,1200],less_equ:[518,843],less_util_node_str:1140,let:[1295,1298],level:1252,librari:[843,856,1252,1294,1298],lightweight:1252,like:[43,1086,1092,1196,1200,1252,1294,1295,1298],limit:[40,41,42,839,840,841,989,1003,1004,1005],linalg:[29,1110,1111,1112,1113,1114,1115,1116,1252],line:43,linear0:[1252,1294],linear1:1252,linear2:1294,linear:[989,1023,1041,1109,1213,1214,1215,1216,1221,1229,1252,1269,1270,1271,1272,1273,1274,1275,1276,1294],linear_algebra:[478,479,480,481,860,861,862],linear_resampl:[128,293,435,567,695,989],linearli:[989,1023],link:[43,1252],linspac:[128,293,435,567,695,989,992],list:[15,18,19,40,41,43,389,390,391,836,837,838,863,864,870,871,872,915,924,925,934,935,937,938,939,941,944,945,959,989,992,996,998,1047,1066,1067,1076,1081,1136,1137,1138,1140,1184,1185,1186,1188,1192,1193,1221,1222,1223,1224,1225,1226,1227,1228,1252,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276],list_join:[40,41,42],list_stack:[40,41],liter:[860,862],littl:1295,load:[40,41],loaded_kwarg:1140,loader:1252,local:43,local_set:[989,1031],locat:[43,1196,1197],log1p:[518,843],log2:[85,397,518,650,843],log:[783,843,854,989,1043,1120,1140,1234,1235,1236,1237,1252],log_all_op:1246,log_global_inference_abs_tim:[1243,1252],log_global_inference_rel_tim:[1243,1252],logarithm:[843,854,855,1120,1131],logic:[31,843,856,870,871,872,1118,1119,1252],logical_and:[357,780,1117],logical_not:[85,214,397,518,650,843],logical_or:[357,780,1117],logit:[1234,1237],logspac:[128,293,435,567,695,989],look:[43,1295,1298],loop:[1136,1137,1138,1139],loss:[1235,1236,1237,1252,1294],loss_fn:[1252,1294],lot:1295,low:[40,41,485,1196,1198,1200],lower:[40,41,43,989,1046,1196,1200],lower_depth:[1281,1282],lowest:[15,18,19,40,41,1184,1193,1196,1198],lstm:[1221,1231,1252,1269],lstm_updat:[43,1221],machin:[839,840,841,860,861,1109,1114,1196,1202,1252,1295,1298],made:43,mai:[843,853,856,989,992,1014,1018,1252,1295,1298],main:[989,1033,1252],mainli:1252,maintain:43,make:[43,485,915,1140,1252,1295],maml:[1136,1137,1138],maml_step:1136,manag:[915,1140],manhattan:[860,862],mani:[40,41,43,989,1067,1252],manipulation_funct:[863,864],manner:[15,18,19,40,41,43,1184,1193],manual:[1184,1185,1192,1298],map:[40,41,42,915,924,1140,1184,1189,1190,1193,1269,1280,1294],map_cont:[40,41],map_nest_at_index:1184,map_nest_at_indic:1184,map_sequ:[40,41],mapper:[915,924,925,1140],mask:[1221,1232,1233],master:43,match:[40,41,989,1044],match_kwarg:989,math:[33,484,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1140,1252],mathbb:[1109,1116],mathbf:[1109,1116],mathemat:[835,860,862],matmul:[43,293,435,567,695,989,1298],matplotlib:1295,matric:[1221,1230],matrix:[40,41,860,861,989,991,1004,1045,1109,1110,1111,1112,1113,1114,1116,1221,1230,1269,1279],matrix_norm:[40,41,168,351,478,613,772,1109],matter:1252,max:[40,41,392,839,840,841,989,1004,1005,1016,1046,1059,1060,1140,1203,1205,1285,1287],max_batch_s:[40,41],max_chunk_s:[915,959,1140],max_depth:[40,41,915,919,922,929,937,941,947,989,1031,1140,1184,1193],max_dev_dim_step_ratio:915,max_freq:[989,1023],max_length:[40,41],max_node_dim_step_ratio:1140,max_norm:[40,41,989,1004,1005],max_split_factor_step_s:[915,1140],max_trust_ratio:[1086,1093,1285,1287],maxim:[1252,1295,1298],maximis:1252,maximum:[40,41,42,695,915,937,941,947,959,989,994,1003,1004,1005,1023,1086,1093,1140,1184,1193,1203,1205],mayb:[15,18,19],mdi:1140,mean:[40,41,485,915,944,945,946,947,959,989,1016,1136,1137,1138,1139,1140,1184,1188,1196,1199,1203,1206,1209,1211,1260,1294,1298],measur:[1221,1232,1269,1280],mech:1252,mechan:[1252,1298],medic:1298,member:43,memori:[915,931,954,959,961,964,1140,1221,1231,1252],merg:43,merge_with_upstream:43,meshgrid:[293,435,695,989],messag:[1296,1297],meta:[35,1137,1138,1139,1252],method:[40,41,42,43,485,989,996,1008,1047,1059,1060,1086,1093,1094,1140,1184,1185,1192,1193,1252,1269,1280,1281,1282,1295],might:[989,1014,1298],min:[40,41,392,839,840,841,860,862,989,1016,1048,1059,1060,1069,1109,1114,1140,1203,1207],min_bas:[989,1070],min_denomin:[989,1069],min_dev_dim_s:915,min_node_dim_s:1140,min_sf_tune_step:[915,1140],min_unit_dev_tune_step:915,min_unit_node_tune_step:1140,mind:1252,mini:[1238,1239,1283,1284],minimum:[40,41,695,915,965,969,989,992,995,996,1003,1028,1029,1061,1062,1069,1070,1140,1203,1207],miss:[1285,1289],ml_framework:[860,861,989,992,1109,1114],mod:[989,1022],mod_depth:[1281,1282],mod_height:[1281,1282],mod_with_top_mod_key_chain:[1281,1282],mode:[40,41,478,480,913,914,915,944,945,946,947,959,1109,1114,1115,1140,1295],model:[1252,1294],modul:[40,41,42,59,989,1049,1140,1252,1253,1255,1256,1257,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1283,1284,1291,1292,1298],moment:[1086,1088,1089,1093,1285,1286,1287],more:[43,863,864,989,1071,1140,1252,1295,1298],more_util_node_str:1140,most:[40,41,43,1109,1114,1252,1298],move:[40,41,43,915,960,1140],much:[43,1252,1298],multi:[485,989,1049,1221,1232,1269,1280],multi_head_attent:1221,multi_index_nest:1184,multi_map:[40,41],multi_nod:1140,multidev:[915,926,927,928,947],multidevcontain:[40,41],multidevic:[915,924],multidevit:[915,918,921,924,925,929],multidevitem:[915,917,920],multidevnest:[915,919,922],multiheadattent:[1252,1269],multinod:[1140,1144],multinodecontain:1140,multinodeit:1140,multinodeitem:1140,multinodenest:1140,multinomi:[174,361,485,620,798,1196],multipl:[40,41,870,871,872,989,1044,1067,1109,1111,1203,1205,1206,1207,1208,1209,1211,1238,1239,1269,1279,1295],multipli:[40,41,989,1011,1203,1208],multiprocess:[40,41,42,435,695,915,924,989,1140],must:[40,41,42,43,836,837,838,843,844,845,846,847,848,849,850,852,853,855,856,857,858,860,862,863,864,870,871,872,874,893,899,915,944,945,946,947,959,989,992,1006,1008,1010,1018,1046,1048,1060,1071,1120,1125,1128,1140,1196,1201,1285,1289],mutabl:[1184,1186,1193],mutlidevic:[915,924],mutlinod:1140,mw_tm1:[1086,1089,1093],mx_concat:1252,mxnet:[43,1252,1298],my_func:43,mymodel:1252,name:[913,914,1240,1241,1242,1246,1294],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1295],nan:[40,41,835,843,844,846,847,848,849,851,855,857,858,989,1032,1082],nativ:[15,17,18,19,40,41,43,915,931,933,942,943,954,961,964,965,970,977,978,1140,1252,1253,1258,1259],native_modul:[1258,1259],native_module_class:[1258,1259],nativearrai:[15,18,19,43,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,862,863,864,867,868,870,871,872,874,893,899,915,933,959,960,965,969,975,980,981,989,990,991,992,994,995,996,997,998,1000,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1025,1026,1030,1032,1033,1034,1041,1042,1043,1045,1046,1047,1048,1051,1052,1053,1056,1057,1058,1059,1060,1065,1067,1068,1071,1073,1074,1076,1077,1078,1079,1081,1082,1083,1084,1085,1140,1184,1186,1193],natur:[843,854,1120,1131,1298],ncdhw:[1221,1226,1227,1269,1274,1275],nchw:[1221,1224,1225,1228,1269,1272,1273,1276],ncw:[1221,1222,1223,1269,1270,1271],ndarrai:[43,389,390,391,392,394,395,485,989,1077],ndhwc:[1221,1226,1227,1269,1274,1275],nearest:[989,1058],need:[43,989,1004,1005,1221,1223,1225,1227,1252,1269,1271,1273,1275,1298],neg:[40,41,843,849,850,860,862,863,864,870,871,872,1203,1208,1210,1213,1215],negative_slop:1260,neither:1140,nest:[15,16,17,18,19,40,41,42,915,937,941,947,989,996,1076,1136,1137,1138,1140,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1281,1282,1285,1286,1287,1288,1289,1290],nested_indices_wher:1184,nested_map:[1140,1184],network:[1221,1230,1252,1253,1255,1269,1281,1282,1298],neural:[1221,1252,1255,1269,1294],new_node_percent_mem:1140,new_node_util:1140,new_node_utils_kei:1140,new_std:[1238,1239,1283,1284],newli:[43,913,914,989,1000,1001],newlin:[40,41,42],newshap:[989,1000,1057],next:[839,840,1140,1281,1282,1285,1286,1287,1288,1289,1290],nhwc:[1221,1224,1225,1228,1269,1272,1273,1276],node:[40,41,1184,1185,1192],node_clon:1140,node_dist:1140,node_dist_arrai:1140,node_dist_it:1140,node_in:1140,node_mapp:1140,node_str:1140,node_to_str:1140,node_util:1140,nodedistit:1140,nodedistitem:1140,nodedistnest:1140,nodemanag:[1140,1151],nodemapp:1140,nodemappermultiproc:1140,noinspect:[43,916,966,967,968,1087,1140,1247],non:[40,41,843,856,860,862,870,871,872,913,914,965,979,1281,1282,1285,1289,1295],none:[40,41,42,43,59,61,64,389,390,391,433,435,436,439,441,448,449,450,451,458,459,460,461,462,463,464,465,466,468,478,479,485,486,836,837,838,839,840,841,860,861,862,863,864,870,871,872,913,914,915,924,925,931,932,957,958,959,960,965,972,973,974,989,992,996,1013,1014,1019,1024,1025,1026,1031,1033,1035,1036,1037,1038,1039,1042,1043,1049,1051,1052,1053,1056,1059,1060,1061,1062,1067,1068,1069,1070,1079,1080,1085,1086,1089,1091,1093,1094,1095,1101,1102,1106,1109,1112,1114,1136,1137,1138,1139,1140,1184,1185,1188,1192,1193,1196,1197,1198,1199,1200,1203,1205,1206,1207,1208,1209,1210,1211,1221,1223,1225,1227,1230,1231,1232,1233,1238,1239,1240,1241,1242,1246,1250,1258,1259,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292],norm:[40,41,860,862,989,1004,1005,1109,1112,1239,1252,1284,1285,1287],normal:[1196,1199,1238,1239,1283,1284],normalized_idx:[1238,1239],normalized_shap:[1283,1284],notat:[40,41,1203,1204],note:[43,1109,1114],noth:[40,41,1295],notimplementederror:1140,now:[40,41,915,960,989,990,1140,1252,1269,1280,1281,1282,1294,1295,1298],np_concat:1252,np_finfo:392,ns_tune_step:1140,num:[435,458,459,989,1042,1043],num_arrai:[40,41],num_arrays_in_memori:989,num_arrays_on_dev:915,num_band:[989,1023],num_channel:[1269,1276],num_chunk:1140,num_chunks_floor:1140,num_class:[1196,1197],num_cpu_cor:915,num_gpu:[121,433,915,1140],num_head:[1221,1232,1269,1280],num_kei:[1221,1232,1233],num_lay:[1269,1278],num_or_size_split:[40,41,435,464,989,1067],num_output:1140,num_queri:[1221,1232,1233],num_sampl:[435,457,485,486,989,1041,1102,1103,1196,1197],num_task:[1136,1137,1138,1139],number:[40,41,42,835,839,840,841,843,846,870,871,872,913,914,915,951,952,953,965,976,980,981,989,992,1003,1007,1020,1023,1030,1033,1041,1042,1043,1046,1050,1056,1067,1074,1078,1082,1084,1109,1115,1136,1137,1138,1139,1140,1196,1197,1201,1203,1205,1206,1207,1209,1211,1221,1232,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1295,1298],numer:[43,843,846,849,850,851,852,856,874,893,899,989,1028,1029,1061,1062,1069,1070,1120,1128,1260],numhead:[1221,1232],numpi:[40,41,43,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,989,1077,1109,1114,1115,1203,1204,1252,1294,1295,1298],nwc:[1221,1222,1223,1269,1270,1271],obj:[40,41],object:[40,41,42,59,392,839,840,841,915,965,969,989,992,996,1086,1184,1187,1189,1190,1191,1194,1195,1196,1202,1246,1250,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1281,1282],object_in:[435,439,989,996],observ:1140,occupi:[839,840,841,989,1059,1060],off:[989,992],offer:1252,offset:[860,861,1238,1239],often:1295,old:[40,41],on_init:[1269,1280,1281,1282],onc:[43,915,959,1140,1196,1197,1252],one:[40,41,43,860,862,863,864,915,944,945,946,947,959,965,971,989,1033,1044,1051,1059,1060,1068,1071,1109,1112,1140,1203,1204,1205,1206,1207,1208,1209,1210,1211,1252,1295,1298],one_hot:[128,435,567,695,989],onearrai:[989,1020],ones:[40,41,77,206,389,510,642,836,989,1033,1051,1053,1252],ones_lik:[128,293,435,567,695,989],ongo:43,onli:[40,41,43,485,843,856,863,864,915,1109,1114,1140,1184,1185,1186,1192,1285,1286,1287,1288,1289,1290,1294,1295],onlin:1252,onto:[915,944,945,960,1140,1184,1188,1193],oom:[915,1140],open:[989,992,1196,1200,1252,1298],opencv:1295,oper:[40,41,989,999,1015,1016,1017,1042,1043,1072,1086,1089,1091,1093,1094,1095,1117,1118,1119,1221,1222,1223,1224,1225,1226,1227,1228,1230,1252,1253],operand:[40,41,843,844,846,847,848,855,857,858,1203,1204],oppos:[989,1023],optim:[915,1086,1089,1091,1093,1094,1095,1136,1137,1138,1139,1140,1252,1286,1287,1288,1290,1294,1298],optimizer_upd:1086,option:[15,18,19,40,41,42,43,389,390,391,836,837,838,860,861,862,863,864,870,871,872,913,914,915,924,925,933,937,938,939,940,941,944,945,946,947,954,957,958,959,960,964,965,970,975,979,988,989,991,992,994,995,996,1004,1005,1006,1011,1013,1014,1023,1024,1025,1026,1030,1032,1033,1040,1041,1042,1043,1044,1047,1049,1051,1052,1053,1056,1059,1060,1063,1065,1067,1068,1069,1070,1071,1079,1081,1082,1085,1086,1089,1091,1092,1093,1094,1095,1097,1102,1106,1109,1112,1114,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1196,1197,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1218,1221,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1295],ord:[860,862,1109,1115],order:[40,41,42,43,860,862,863,864,867,868,1086,1089,1091,1093,1094,1095,1109,1112,1136,1137,1138,1291,1292],ordered_node_util_kei:1140,org:1298,organ:43,origin:[40,41,42,989,1053,1057,1085,1109,1112],other:[40,41,43,874,876,877,882,884,885,889,891,892,893,894,895,897,899,900,901,902,903,904,906,907,908,910,911,912,913,914,989,991,992,1033,1086,1090,1196,1200,1252,1294,1295,1298],other_i:[43,874,893,899],otherwis:[15,16,17,18,19,40,41,843,849,850,851,860,862,870,871,872,915,932,965,972,973,974,989,999,1079,1080,1083,1086,1092,1097,1101,1136,1137,1138,1140,1203,1205,1206,1207,1209,1211],our:[43,1252,1298],out:[43,485,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,874,893,989,992,1120,1124,1221,1229,1231,1252,1269,1277],out_feat_dim:[1221,1232],out_featur:[1221,1229,1230],out_i:[843,849,850,851],outdat:1298,outer:[1136,1137,1138,1139],outer_batch_fn:[1136,1137,1138],outer_batch_shap:[1221,1230],outer_cost_fn:[1136,1137,1138],outer_v:[1136,1137,1138],outlin:1295,output:[40,41,43,836,837,838,863,864,915,924,925,959,989,992,1001,1024,1033,1056,1074,1086,1090,1120,1125,1140,1196,1198,1199,1200,1221,1223,1225,1227,1229,1231,1232,1233,1252,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280],output_ax:[915,959,1140],output_axi:1140,output_channel:[1269,1270,1271,1272,1273,1274,1275,1278,1279],output_connected_onli:[1240,1242,1246,1281,1282],output_queu:1140,output_shap:[1221,1223,1225,1227,1269,1271,1273,1275],outsid:[989,1003],over:[40,41,860,862,870,871,872,1109,1112,1196,1200,1203,1205,1206,1207,1209,1211,1238,1239,1283,1284],overal:1295,overflow:[989,992],overhead:1295,overrid:[989,1051,1053,1085],overriden:[1285,1289],overwrit:[40,41,915,959,1140],overwrite_at_key_chain:[40,41],own:[1252,1295,1298],packag:[43,1295],pad:[989,1007,1023,1084,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],pad_width:[435,989,1007,1084],page:1252,pair:[1221,1233],parallel:[915,924,925,1140],parallelis:[915,924,925,1140],param:[40,41,42,43,435,449,450,915,959,989,990,1025,1026,1051,1052,1140,1251,1252,1281,1282,1294],paramet:[15,16,17,18,19,40,41,42,836,837,838,839,840,841,843,853,860,861,862,863,864,867,868,870,871,872,874,893,899,913,914,915,924,925,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,954,957,958,959,960,961,964,965,969,970,971,975,976,977,978,979,980,981,988,989,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1036,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1052,1053,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1097,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294],parameter:[1196,1199,1200],params_all_empti:1246,pardo:1252,pars:[989,1008],part:[1086,1089,1091,1093,1094,1095,1120,1124,1252,1281,1282,1295],partial:[40,41,1281,1282],particl:1298,particular:[43,1298],pass:[40,41,42,43,915,924,959,965,970,989,1001,1086,1100,1136,1137,1138,1140,1258,1259,1281,1282,1285,1289,1291,1292],pattern:[40,41,989,1015,1016,1017],per:[915,1140,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],percent_used_mem_on_dev:915,percent_used_mem_on_nod:1140,percentag:[915,954,1140],perf_count:1140,perform:[40,41,43,867,868,870,871,872,915,989,994,995,1011,1015,1016,1017,1036,1037,1038,1041,1042,1043,1086,1089,1091,1093,1094,1095,1102,1103,1136,1137,1138,1139,1140,1184,1189,1190,1203,1205,1206,1207,1208,1209,1210,1211,1213,1218,1221,1229,1231],permissable_step:1140,permit:43,permut:[485,989,1073,1079],perpendicular:[989,1010],person:1252,physci:1298,pickl:[40,41,1140],pickle_filepath:[40,41],pid:1246,pinv:[351,772,1109],pip:1252,pipelin:1294,pkk:1298,pkkm1:1298,pkm1km1:1298,place:[40,41,43,836,837,838,915,960,989,1020,1024,1036,1037,1038,1140,1285,1286,1287,1288,1289,1290],placehold:[1184,1193],pleas:[485,1109,1114],point:[43,835,836,837,838,839,840,843,844,846,847,848,855,857,858,860,862,965,980,989,992,1120,1128],popul:[40,41,1196,1197],popular:1298,population_s:[485,486,1196,1197],portabl:[1252,1253],posit:[15,16,17,839,840,843,849,850,915,937,941,947,989,990,992,1020,1023,1140,1196,1201,1258,1259],possibi:[40,41],possibl:[43,989,1044,1076,1102,1107,1298],post:[1238,1239],post_shap:[40,41],power:[43,874,899,905,989,1028,1061,1070,1260],practic:1252,pre:[915,1140,1252],pre_shap:[40,41],precis:[839,840,843,858],pred:[1234,1235,1236,1237],predict:[1234,1235,1236,1237,1298],preprint:1252,present:[40,41],preserv:[40,41,42,863,864,1086,1097],preserve_typ:[40,41,469,472,1086,1097],press:1252,prevent:[43,1086,1088,1089,1093,1140,1285,1286,1287],previou:[1086,1089,1093],previous:[989,1001],prime:1252,print:[40,41,42,915,955,989,1054,1252,1294],print_all_arrays_in_memori:989,print_all_arrays_on_dev:915,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1285,1289],prob:[485,486,1196,1197,1221,1229,1269,1277],probabl:[1196,1197,1221,1229,1269,1277],problem:[43,1298],process:[43,915,924,925,954,964,989,1049,1140],process_specif:[915,954,964,1140],prod:[40,41,989,1016],produc:[915,924,925,1140],product:[40,41,989,1010,1011,1045,1203,1204,1221,1232,1233,1269,1280],profil:[121,287,433,560,687,915,1140],project:[1252,1294,1295,1298],promot:[43,843,844,845,847,848,855,857,858,860,862,874,899,1120,1128],prompt:1252,properli:43,properti:[40,41,392,915,927,1140,1246,1250,1281,1282,1285,1286,1287,1288,1290],provid:[40,41,43,863,864,870,871,872,913,914,915,932,965,972,973,974,979,988,989,1014,1051,1053,1060,1085,1086,1089,1091,1093,1094,1095,1101,1140,1252,1269,1278,1285,1286,1287,1288,1289,1290,1295],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1109,1113],ptype:[1246,1250],pull:[1252,1253],pure:[40,41,1252,1298],purpos:1298,put:1140,pybroadexcept:1140,pyprotectedmemb:[1140,1247],pyshadowingbuiltin:43,pyshadowingnam:[916,966,967,968,1087,1140],python:[40,41,915,954,964,989,992,1140,1252],pytorch:[1086,1089,1091,1093,1094,1095,1109,1114,1252,1285,1286,1287,1288,1289,1290,1294,1295,1298],pyunresolvedrefer:1140,quadrant:[1120,1125],queri:[40,41,874,888,909,915,948,958,1140,1221,1232,1233,1269,1280],query_dim:[1269,1280],query_kei:[40,41],queue:[40,41,42,915,924,925,989,1055,1063,1140],queue_class:[915,924,925,1140],queue_load_s:[40,41,42],queue_timeout:[40,41,42,989,1140],quick:[485,1252],quickli:[43,1294],radian:[843,847,857,1120,1121,1123,1125,1132,1134],rai:[1120,1121],rais:[40,41,43,870,871,872,874,899,989,999,1028,1061,1068,1070,1080,1140,1281,1282,1285,1289],ram:[915,954,961,964,1140],randint:[174,361,485,620,798,1196],random:[37,40,41,486,1197,1198,1199,1200,1201,1202,1252],random_crop:1102,random_norm:[174,361,485,620,798,1196],random_uniform:[174,361,485,620,798,1196],randomli:[485,1102,1106,1221,1229,1269,1277],randomness_factor:[1240,1242,1246,1281,1282],rang:[485,989,992,1042,1043,1120,1125,1140,1252,1294,1298],rank:[860,862,870,871,872,989,1007,1081,1084],rate:[1086,1089,1091,1093,1094,1095,1136,1137,1138,1139,1269,1280,1285,1286,1287,1288,1289,1290],rather:[40,41,915,959,989,992,1040,1086,1092,1140],ratio:[915,1086,1093,1102,1107,1140,1285,1287],raw:[40,41,1109,1114],raw_delta:1140,reach:[915,937,941,947,1140,1184,1193],read:[40,41],readi:[1140,1294],real:[1120,1121,1124],realiti:1295,rearrang:[40,41,989,1015,1017],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1136,1138],receiv:[43,915,924,925,989,993,1044,1140,1269,1279],receivess:[915,1140],receiving_fn:1246,receivng:[1136,1139],recev:[1136,1137,1138],recognit:1298,recommend:[843,856,1252],rectifi:[1213,1215,1216],recurr:[1221,1231],recurrent_bia:[1221,1231],recurrent_kernel:[1221,1231],recurs:[40,41,1184,1185,1186,1192,1193],redefin:43,reduc:[40,41,870,871,872,915,959,989,1016,1109,1114,1140,1203,1205,1206,1207,1208,1209,1210,1211],reduce_max:[40,41,181,366,487,625,805,1203],reduce_mean:[40,41,181,366,487,625,805,1203,1252,1294],reduce_min:[40,41,181,366,487,625,805,1203],reduce_prod:[40,41,181,366,487,625,805,1203],reduce_std:[40,41,366,1203],reduce_sum:[40,41,181,366,487,625,805,1140,1203],reduce_var:[40,41,181,366,487,625,805,1203],reduct:[39,40,41,435,462,463,870,871,872,989,1016,1059,1060,1204,1205,1206,1207,1208,1209,1210,1211,1252],refactor:43,refer:[43,843,854,870,871,872,1086,1088,1089,1109,1116,1269,1279,1298],reflected_oper:[0,13,14],regard:[915,1140],regardless:[40,41,913,914],register_paramet:1294,reimplement:1298,rel:[863,864,1086,1089,1091,1093,1094,1095],rel_slice_obj:1140,relev:[1285,1286,1287,1288,1289,1290],relu:[814,1213,1214,1215,1252,1294],remain:[43,989,1057,1184,1188],remaind:[40,41,989,1022,1067],remov:[40,41,989,1068,1136,1137,1138],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,863,864],rep:[989,1074],repeat:[40,41,43,293,695,989,1017,1074,1140,1295],repeated_config_check:[915,1140],repeatedli:[1184,1191],repetit:[40,41,989,1056,1074],replac:[40,41,43,485,486,989,1003,1059,1060,1196,1197],repo:[43,1252],repres:[43,843,844,848,965,971,976,1221,1230],represent:[40,41,42,43,835,839,840,841,843,845,915,942,943,965,971,977,978,989,1066,1076,1140],reptil:[1136,1139],reptile_step:1136,request:[1252,1253],requir:[43,843,858,913,914,965,969,989,992,996,1258,1259],resampl:[989,1041],reserv:43,reshap:[40,41,43,485,695,989],reshape_lik:[40,41],respect:[843,845,852,853,874,893,989,1018,1086,1088,1089,1090,1091,1093,1094,1095,1109,1114,1120,1128,1136,1137,1138,1139],respond:43,respons:1140,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,862,870,871,872,874,893,899,915,924,989,992,1018,1059,1060,1071,1109,1112,1117,1118,1119,1120,1128,1140,1203,1205,1206,1207,1208,1209,1210,1211,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1252],ret:1140,ret_dict:1140,ret_fn:[915,924,925,1140],retain:[1086,1090],retain_grad:[469,470,1086,1090],retreiv:1140,retrn:[989,1066],return_cont:[40,41],return_dict:[40,41],return_graph:[1240,1241,1242],return_inner_v:[1136,1137,1138,1139],return_sequ:[1269,1278],return_st:[1269,1278],rev:[989,1014],revers:[40,41,863,864,989,1014,1079],review:43,right:[40,41,43],rk_e:1298,robot:1252,ronald:1252,root:[43,843,858],round:[293,435,695,843,846,858,989,992,1140],row:[989,1033,1196,1197],rule:[43,874,899,989,992,1120,1128],run:[43,915,924,1086,1088,1089,1093,1136,1137,1138,1139,1140,1252,1253,1269,1280,1281,1282],safe:[915,924,1140],safety_factor:[915,1140],same:[15,16,17,40,41,43,843,846,863,864,915,924,925,959,960,965,969,989,990,1002,1006,1021,1022,1025,1026,1051,1053,1058,1059,1060,1071,1085,1086,1092,1097,1109,1115,1120,1124,1136,1137,1138,1140,1203,1204,1221,1222,1223,1224,1225,1226,1227,1228,1252,1269,1270,1271,1272,1273,1274,1275,1276,1294,1298],same_arrai:[40,41],sampl:[989,1041,1102,1103,1196,1197,1199,1200,1221,1229,1252,1269,1277],satisfi:[989,996,1109,1111,1116],save:[40,41,989,1064,1075,1102,1104,1281,1282],save_debug_info:1246,save_dir:[433,434,915,930,1140],save_to_disk:[1240,1242,1246,1281,1282],save_weight:[1281,1282],scalar:[860,862,989,1003,1051,1078,1082],scale:[915,957,958,1086,1094,1140,1221,1229,1232,1233,1238,1239,1269,1277,1280,1285,1288],scaled_dot_product_attent:1221,scatter:[989,1051,1059,1060],scatter_flat:[128,293,435,567,695,989],scatter_nd:[128,293,435,567,695,989],scene:[1086,1089,1091,1093,1094,1095],schemat:1252,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,843,845,852,853,915,946,989,997,1010,1018,1055,1063,1073,1086,1088,1089,1093,1136,1138,1140,1285,1286,1287],secondli:1298,sector:[843,844],see:[43,59,392,433,434,485,843,845,852,860,862,870,871,872,874,893,899,915,927,928,929,930,965,989,992,1042,1043,1086,1120,1128,1246,1250,1252,1260,1262,1263,1265,1266,1268],seed:[40,41,174,485,798,1196],seed_valu:[40,41,485,1196,1201],seem:1252,seen_set:[989,1031],select:[989,996,1068,1295,1298],self:[40,41,43,59,392,433,434,874,893,899,915,927,928,929,930,965,1086,1140,1246,1250,1252,1260,1262,1263,1265,1266,1268,1285,1289,1294,1298],self_i:[874,893],sent:1140,seper:[43,989,1023],seq:[40,41,42,1203,1204,1281,1282],sequenc:[15,16,17,40,41,42,43,485,913,914,915,924,925,934,935,936,937,938,939,940,941,944,945,959,965,969,989,992,996,998,1000,1006,1007,1033,1044,1047,1052,1056,1057,1060,1067,1071,1074,1079,1084,1086,1090,1102,1106,1107,1109,1112,1140,1184,1195,1196,1198,1200,1203,1205,1206,1207,1208,1209,1210,1211,1221,1222,1223,1224,1225,1226,1227,1228,1238,1239,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1278,1281,1282,1283,1284,1285,1289,1291,1292],sequenti:1252,seri:43,set:[15,18,19,40,41,915,944,945,957,958,959,989,991,1013,1033,1061,1062,1063,1064,1086,1089,1091,1092,1093,1094,1095,1109,1112,1140,1184,1185,1192,1194,1195,1196,1197,1201,1203,1205,1206,1207,1208,1209,1210,1211,1250,1252,1269,1278,1285,1286,1287,1288,1289,1290,1295,1298],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1250,set_debug_mod:44,set_default_devic:915,set_default_dtyp:965,set_default_float_dtyp:965,set_default_int_dtyp:965,set_default_nod:1140,set_exception_debug_mod:44,set_framework:[40,41,43,59,1140,1252,1294,1295,1298],set_ivy_backend:[40,41],set_min_bas:989,set_min_denomin:989,set_nest_at_index:1184,set_nest_at_indic:1184,set_param:1246,set_queue_timeout:989,set_split_factor:[915,1140],set_stat:[1285,1286,1287,1288,1289,1290],set_tmp_dir:989,set_with_grad:1086,setter:1140,sever:1298,sgd:[1252,1285],shape0:1140,shape:[40,41,43,389,390,391,435,448,463,485,695,836,837,838,863,864,915,927,965,969,989,990,1000,1002,1006,1007,1020,1021,1022,1024,1026,1030,1033,1051,1052,1053,1056,1057,1058,1059,1060,1066,1068,1071,1084,1085,1102,1106,1109,1111,1114,1120,1124,1125,1140,1196,1198,1199,1200,1203,1204,1221,1223,1225,1227,1246,1250,1269,1271,1272,1273,1274,1275,1276,1283,1284],shape_slic:[40,41],shape_to_tupl:989,share:[40,41,1252,1295],shift:1140,should:[40,41,42,43,485,843,844,845,846,847,848,849,850,851,852,855,856,857,858,860,862,874,893,899,913,914,915,989,1000,1001,1008,1051,1057,1086,1089,1091,1093,1094,1095,1120,1128,1140,1203,1204,1252],show:[40,41,1246,1252,1298],show_debug_info:1246,show_graph:[1240,1252,1281,1282,1285,1289],show_mod_in_top_mod:[1281,1282],show_structur:[1281,1282],show_sub_contain:[40,41],show_v:[1281,1282],show_v_in_top_v:[1281,1282],shown:[40,41],shp:1140,shuffl:[40,41,174,485,798,1196],shuffle_h5_fil:[40,41],sigmoid:[814,1213,1252,1294],signatur:[43,59,392,433,434,435,469,474,478,482,483,485,915,927,928,929,930,965,1086,1246,1250,1260,1262,1263,1265,1266,1268],signific:1298,similar:[43,1221,1232,1269,1280],similarli:[1109,1114],simpl:[43,989,1019,1252,1295,1298],simpler:43,simplest:1295,simpli:[40,41,43,1252,1295,1298],simultan:1252,sin:[214,518,783,843,989,1023,1120,1134,1295],sinco:1295,sine:[843,844,857,1120,1123,1132,1133],singl:[40,41,913,914,915,924,925,944,945,946,947,989,1068,1078,1082,1102,1107,1140,1196,1199,1200,1203,1205,1206,1207,1208,1209,1210,1211,1252,1295,1298],singleton:[860,862,870,871,872],singular:[1109,1115],sinh:[783,1120],siren:[1252,1260],size:[40,41,42,435,462,915,938,939,940,941,957,958,959,989,992,1000,1042,1043,1059,1067,1102,1106,1109,1112,1115,1140,1196,1197,1199,1200,1203,1205,1206,1207,1208,1209,1210,1211,1269,1270,1271],size_ordered_arrai:[40,41],skew:[1109,1116],skinv:1298,skip:[40,41],slice:[40,41,867,868,989,1025,1026,1140,1184,1191],slice_kei:[40,41],slice_obj:[40,41,1140],slice_via_kei:[40,41],slide:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],slope:[1213,1215],small:[1234,1235,1236,1237,1238,1239,1252,1283,1284,1295],smaller:[989,1003],smallest:[40,41,839,840,841,843,846,989,995,1002],smallest_norm:[392,839,840],softmax:[190,496,814,1213,1221,1232,1233],softplu:[814,1213],solv:1298,some:[40,41,43,989,992,1086,1088,1089,1091,1093,1094,1095,1100,1221,1229,1252,1269,1277,1295,1298],some_backend:43,some_namespac:43,someth:[43,1298],something_cool:43,somewher:[40,41],soon:43,sort:[40,41,42,868,1109,1115,1140],sort_by_kei:[40,41],sorting_funct:[867,868],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,863,864,867,868,870,871,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,924,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1250,1255,1256,1257,1258,1259,1260,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1296,1297,1298],space:[989,992,1023,1042,1043],spars:[1234,1237],sparse_cross_entropi:1234,spawn:[989,1049],special:[843,844,846,847,848,855,857,858],specif:[40,41,43,843,856,915,957,989,1008,1015,1016,1017,1049,1136,1137,1138,1139,1140,1196,1202,1252,1281,1282,1294,1295],specifc:[1196,1197],specifi:[40,41,43,860,861,862,863,864,870,871,872,915,934,935,936,937,938,939,940,941,944,945,949,951,955,958,959,960,965,969,971,989,992,994,995,996,1003,1006,1007,1024,1025,1026,1032,1042,1043,1071,1081,1084,1109,1112,1140,1184,1189,1190,1194,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211],split:[40,41,128,293,435,567,695,915,924,938,939,940,941,957,958,959,989,1044,1140],split_arg:1140,split_factor:[915,924,1140],split_func_cal:[915,1140],split_siz:1140,spread:[915,947,1140],sqrt:[85,214,397,518,650,843,860,862],squar:[843,858,989,1033,1109,1111],squeez:[128,293,435,567,695,989],stabil:[867,868,989,1069,1070],stabl:[867,868,989,1028,1029,1061,1062,1069,1070],stable_divid:989,stable_pow:989,stack:[40,41,293,695,989,1102,1107,1184,1185,1192,1269,1278],stack_imag:[164,347,474,609,768,1102],stacked_dim_s:1140,stage:43,standard:[40,41,839,840,1196,1199,1203,1209,1238,1239,1252,1253,1283,1284],start:[40,41,43,433,434,435,436,458,459,485,915,930,989,992,1042,1043,1140,1252,1295],starting_index:[40,41],starting_split_factor:[915,1140],state:[1140,1221,1231,1240,1241,1242,1246,1252,1255,1256,1257,1258,1259,1260,1262,1263,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294],statement:1295,static_argnam:[435,441,913,914],static_argnum:[435,441,913,914],std:[485,1196,1199],step:[40,41,435,436,915,989,992,1042,1043,1086,1088,1089,1091,1093,1094,1095,1136,1137,1138,1139,1140,1252,1285,1286,1287,1288,1289,1290,1294,1298],stephen:1252,stick:1252,still:[40,41,43],stochast:[1285,1290],stop:[40,41,433,434,435,436,458,459,915,930,959,989,992,1042,1043,1086,1089,1091,1093,1094,1095,1097,1136,1137,1138,1139,1140,1285,1286,1287,1288,1289,1290],stop_gradi:[40,41,342,469,604,762,915,959,1086,1089,1091,1093,1094,1095,1136,1137,1138,1139,1140,1285,1286,1287,1288,1289,1290],stopiter:1140,store:[40,41,989,1023,1067,1086,1100,1281,1282],store_var:[1281,1282],str:[15,16,17,40,41,42,43,389,390,391,392,394,395,839,840,841,913,914,915,924,925,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,959,965,970,971,976,977,978,979,980,981,988,989,996,1013,1015,1016,1017,1047,1049,1052,1059,1060,1109,1112,1114,1136,1137,1138,1139,1140,1184,1188,1203,1204,1258,1259,1269,1280,1281,1282],str_to_nod:1140,straight:1295,strength:[1252,1298],stride:[1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],string:[40,41,43,915,931,933,942,943,948,954,960,961,964,965,969,975,977,978,979,988,989,992,996,1013,1033,1052,1053,1085,1140,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276,1281,1282],structur:[40,41,42,43,989,1008],structural_diff:[40,41],sub:[40,41,915,938,939,944,945,946,947,989,1067,1136,1137,1138,1139,1140],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1140,sub_mod:[1281,1282],sub_modul:[1291,1292],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1252,1253,1283,1284,1291,1292],subsequ:43,subset:43,substr:[40,41],suffici:[1109,1114],suggest:1252,suitabl:[1102,1107],sum:[40,41,435,462,463,860,862,915,944,945,946,947,959,989,1012,1016,1059,1060,1140,1203,1204,1210],summat:[40,41,1203,1204],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,222,223,226,227,229,233,236,237,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,348,349,350,352,353,354,355,356,358,359,362,363,364,365,367,368,369,370,371,372,373,374,377,379,380,381,382,383,384,385,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,537,538,540,544,547,548,556,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,605,606,607,608,610,611,612,614,615,616,617,621,622,623,624,626,627,628,629,630,631,632,636,637,638,643,644,646,647,648,651,652,653,654,655,656,657,658,659,660,661,664,665,667,671,674,675,683,688,689,690,691,692,693,694,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,763,764,765,766,767,769,770,771,773,774,775,776,777,778,779,781,782,784,785,786,787,788,789,790,791,792,793,794,795,796,797,799,800,801,802,803,804,806,807,808,809,810,811,812,815,816,817,818,819,820,821,823,824,826,827,828,829,830,831,832,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,861,862,864,868,871,872,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1239,1241,1242,1244,1245,1247,1251,1252,1256,1257,1259,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1297,1298],supports_inplac:989,suppos:1298,sure:43,svd:[351,613,772,1109],swap:[40,41,989,1073],swapax:[40,41,567,695,989,1298],symmetr:[1109,1116],syntax:[433,435,469,474,478,482,483,485],tab:1252,take:[43,989,1041],taken:[1203,1205,1206,1207,1209,1211],tan:[783,1120,1124],tangent:[1120,1124,1125,1126,1134,1135,1213,1220],tanh:[783,814,1120,1213],target:[40,41,915,931,934,935,936,937,938,939,940,941,944,945,946,947,960,1140,1252],target_dict:[40,41],task:[43,1136,1137,1138,1139],team:[43,1298],templat:1252,temporari:[989,1064,1075],tensor:[40,41,43,435,462,463,867,868,915,933,965,975,989,992,994,995,1000,1042,1043,1046,1048,1051,1052,1053,1057,1059,1060,1067,1085,1140,1196,1197,1198,1221,1229,1231,1252,1269,1277,1279,1285,1286,1287,1288,1289,1290,1294,1295],tensorflow:[43,1109,1114,1221,1223,1225,1227,1252,1269,1271,1273,1275,1295,1298],term:[40,41,1221,1231,1252,1269,1279],termcolor:[40,41,42],termin:[40,41,42,1140],test:[43,843,849,850,851,870,871,872,965,980,981],test_array_api:43,tf_concat:1252,than:[40,41,839,840,843,846,855,858,860,862,863,864,915,959,989,992,1002,1003,1021,1040,1046,1068,1071,1086,1092,1140,1196,1200,1252,1295],thei:[40,41,43,1120,1125,1136,1137,1138,1196,1197,1252,1291,1292,1295],them:[1252,1298],themselv:[1184,1185],therefor:43,thi:[40,41,42,43,843,856,915,937,941,947,954,959,964,989,992,1023,1055,1057,1063,1086,1089,1091,1092,1093,1094,1095,1100,1109,1112,1140,1184,1188,1193,1203,1205,1206,1207,1208,1209,1210,1211,1221,1230,1252,1281,1282,1285,1286,1287,1288,1289,1290,1294,1295,1298],thing:[43,1252],those:[40,41,43,989,1003,1086,1100,1109,1115,1140],though:43,threshold:[989,1046,1048],through:[40,41],tickbox:43,tile:[293,567,695,989],time:[989,1074,1086,1089,1093,1136,1137,1138,1139,1140,1196,1197,1221,1231,1269,1280,1281,1282,1298],time_chronolog:[1240,1241,1246],time_infer:[1240,1241],timeout:[40,41,42,915,924,925,989,1055,1063,1140],timestep:[1221,1231,1269,1278],timing_fnam:[1240,1241],titl:1252,tmp_dir:989,tmp_dr:[989,1064],to_appli:[40,41],to_clon:[915,1140],to_dev:[40,41,121,287,433,560,687,915],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[915,1140],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1252],to_ivy_modul:[192,822,1252,1258],to_json:[40,41],to_kv_fn:[1221,1232],to_kv_v:[1221,1232],to_list:[40,41,435,695,989],to_multi_dev:[40,41],to_mut:[1184,1186,1193],to_n:[15,40,41,1252],to_nod:1140,to_numpi:[40,41,435,695,989,1252,1294],to_out_fn:[1221,1232],to_out_v:[1221,1232],to_q_fn:[1221,1232],to_q_v:[1221,1232],to_raw:[40,41],to_scalar:[435,695,989],todo:[43,1140],togeth:[40,41,1291,1292],tool:[1252,1295],top_mod:[1281,1282],topic:1298,torch:[43,913,914,1252,1294,1295,1298],torch_concat:1252,torchfcmodel:1294,total:[40,41,42,915,961,1140],total_mem_on_dev:915,total_mem_on_nod:1140,tpu:[915,962,1140],tpu_is_avail:[433,560,687,915,1140],tpye:[965,976],trace:[40,41,989,1040],track:[43,915,1140,1184,1193,1281,1282],track_submod_call_ord:[1281,1282],track_submod_ret:[1281,1282],trail:[1283,1284],train:[1086,1088,1089,1093,1252,1253],trainabl:[1086,1092,1252,1253,1258,1259,1281,1282,1291],trainer:1252,tran:1298,transform:[1221,1229,1230],transpos:[40,41,128,293,435,695,915,946,989,1140,1221,1223,1225,1227,1269,1271,1273,1275],travers:[15,18,19,40,41,1184,1193],treat:[40,41,913,914],tree_depth:1250,tree_height:1246,tri:[40,41],trigonometr:[1120,1121,1124,1132],trim_kei:[40,41],trust:[1086,1093,1285,1287],truth:[843,852,853,874,893,989,1018,1117,1118,1119],try_else_non:989,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[915,1140],tune_dev_alloc:915,tune_dev_split:915,tune_node_alloc:1140,tune_node_split:1140,tune_step:[915,1140],tupl:[15,16,17,18,19,40,41,43,389,390,391,836,837,838,860,862,863,864,870,871,872,913,914,989,1007,1023,1024,1066,1084,1140,1184,1185,1186,1187,1189,1190,1191,1192,1193,1194,1195,1196,1198,1203,1205,1206,1207,1208,1209,1210,1211],tutori:43,two:[40,41,989,992,997,1010,1045,1073,1109,1112,1115],type:[15,18,40,41,42,43,59,394,395,433,434,836,837,838,840,841,843,844,845,846,847,848,849,850,851,852,853,855,856,857,858,860,862,863,864,870,871,872,874,893,899,915,927,928,929,930,942,943,947,959,965,969,970,971,975,976,977,978,979,980,981,988,989,990,992,996,1002,1006,1008,1018,1021,1022,1024,1033,1040,1051,1052,1053,1058,1072,1082,1085,1086,1092,1097,1120,1128,1140,1246,1250,1252,1260,1262,1263,1265,1266,1268,1281,1282,1295],types_to_iteratively_nest:[40,41,42],uint8:[1102,1104,1108],uint8_img_to_float_img:1102,unchang:[15,16,17,18,19],uncom:43,underli:[843,845],underwai:43,unif:1140,unifi:[40,41,915,944,945,946,947,959,1140,1252],uniform:[40,41,1196,1197,1199,1200,1260,1262,1263,1266,1267],uniformli:[1196,1198,1200],unify_arrai:1140,unify_it:1140,unify_nest:1140,union:[15,18,19,40,41,43,389,390,391,392,394,395,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,860,862,863,864,867,868,870,871,872,874,893,899,913,914,915,933,938,939,940,941,959,960,965,969,970,971,975,976,977,978,979,980,981,988,989,990,991,992,994,995,996,997,998,1000,1002,1003,1004,1005,1006,1007,1009,1010,1011,1012,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1030,1032,1033,1034,1041,1042,1043,1045,1046,1047,1048,1051,1052,1053,1056,1057,1058,1059,1060,1065,1066,1067,1068,1071,1073,1074,1076,1077,1078,1079,1081,1082,1083,1084,1085,1140,1184,1185,1186,1192,1193],uniqu:[915,924,925,1136,1137,1138,1139,1140,1184,1188],unique_kwarg:1140,unit:[43,915,1120,1121,1123,1140,1213,1214,1215,1216],unitari:[1109,1115],unless:[989,1051,1053,1085],unlik:[915,1140],unnorm:[1196,1197],unpack:[989,1081],unrol:[1221,1231],unset:1295,unset_debug_mod:44,unset_default_devic:915,unset_default_dtyp:965,unset_default_float_dtyp:965,unset_default_int_dtyp:965,unset_framework:[59,1295],unset_with_grad:1086,unstack:[40,41,128,293,435,567,695,989],until:43,unus:[913,914],updat:[40,41,435,462,463,915,924,989,1038,1059,1060,1086,1088,1089,1091,1093,1094,1095,1136,1137,1138,1140,1184,1189,1190,1194,1195,1221,1231,1252,1253,1258,1259,1285,1286,1287,1288,1289,1290,1295,1298],update_backend:[40,41],update_config:[40,41],update_inference_tim:1246,upper:[40,41,1196,1200],upper_depth:[1281,1282],upstream:43,usabl:[1252,1298],usag:[915,959,1140],use:[40,41,42,43,485,915,924,925,950,962,989,1056,1069,1070,1109,1114,1140,1221,1232,1238,1239,1252,1283,1284,1295,1298],used:[40,41,43,485,915,924,954,957,958,964,965,976,989,1028,1029,1044,1053,1059,1060,1061,1062,1085,1086,1093,1094,1109,1112,1136,1137,1138,1139,1140,1184,1193,1269,1280,1285,1287,1288,1294,1295],used_dev:[915,924],used_mem_on_dev:915,used_mem_on_nod:1140,used_node_str:1140,used_node_strs_dict:1140,useful:[40,41,915,959,1140,1221,1230,1252,1295],user:[1252,1269,1280,1281,1282,1295,1298],uses:1252,using:[40,41,1086,1088,1089,1184,1187,1191,1203,1204,1221,1229,1233,1252,1269,1277,1294,1295,1298],util:[915,948,1140],utility_funct:[870,871,872],v_with_top_v_key_chain:[1281,1282],val:[40,41,435,453,454,455,874,909,989,1036,1037,1038,1061,1062,1250],valid:[870,871,872,965,970,989,1069,1070,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],valid_dtyp:965,valu:[40,41,435,843,846,852,853,860,862,867,868,874,893,915,927,958,959,989,990,992,994,995,1003,1004,1005,1007,1008,1014,1018,1023,1024,1025,1026,1042,1043,1046,1048,1055,1056,1057,1058,1059,1060,1061,1062,1063,1079,1082,1083,1084,1086,1090,1093,1102,1108,1109,1115,1117,1118,1119,1120,1129,1130,1131,1136,1137,1138,1140,1184,1188,1189,1190,1194,1195,1196,1199,1200,1203,1205,1207,1221,1232,1233,1238,1239,1246,1269,1280,1283,1284,1285,1287],value_is_nan:989,vanilla:[1136,1138],var_shap:1260,variabl:[15,16,17,18,19,40,41,342,469,604,762,989,999,1036,1037,1038,1039,1040,1072,1086,1089,1090,1091,1092,1093,1094,1095,1097,1100,1136,1137,1138,1139,1221,1232,1238,1239,1258,1259,1260,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292],variable_data:[469,762,1086],varianc:[40,41,1203,1211,1298],varieti:1295,variou:[43,1252],vector:[40,41,478,481,860,862,989,1005,1010,1109,1115,1116,1221,1230,1269,1279],vector_norm:[40,41,98,225,410,536,663,860],vector_to_skew_symmetric_matrix:[168,351,478,613,772,1109],verbos:1297,veri:[43,1252],verifi:43,version:43,via:[1184,1185,1192,1295],view:[1102,1107],vision:1252,visual:1295,volum:[1221,1226],vw_tm1:[1086,1089,1093],wai:[1295,1298],wait:[40,41,42,43],want:[1252,1295,1298],warn:[59,66,67,68,69,70],warp:[474,475,1102,1103],watch:1294,weight:[1086,1088,1089,1091,1093,1094,1095,1221,1230,1231,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1281,1282,1285,1287,1288],weight_initi:[1269,1270,1271,1272,1273,1274,1275,1276,1278,1279],weights_path:[1281,1282],well:[40,41,989,1032],were:[40,41,1140],what:[43,1252],when:[40,41,42,43,915,989,1001,1070,1083,1109,1115,1140,1252,1281,1282,1295,1298],where:[40,41,43,293,435,695,843,854,870,871,872,874,899,989,992,1000,1003,1007,1020,1034,1051,1084,1109,1115,1184,1185,1192,1196,1197],wherea:43,wherebi:[1184,1193],whether:[15,18,19,40,41,42,843,851,870,871,872,913,914,915,933,946,950,954,959,962,964,965,975,979,980,981,988,989,991,997,998,1011,1014,1019,1023,1030,1032,1035,1039,1040,1044,1065,1072,1081,1082,1086,1089,1090,1091,1092,1093,1094,1095,1097,1136,1137,1138,1139,1140,1184,1185,1186,1188,1192,1193,1196,1197,1213,1214,1221,1229,1252,1258,1259,1269,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],which:[40,41,42,43,485,836,837,838,839,840,841,860,861,862,863,864,870,871,872,913,914,915,924,925,933,938,939,940,941,944,945,946,947,949,951,955,957,958,959,965,970,975,979,988,989,992,996,1006,1008,1010,1011,1012,1014,1024,1025,1026,1027,1033,1034,1041,1042,1043,1050,1051,1052,1053,1054,1056,1059,1060,1067,1071,1081,1083,1085,1086,1089,1090,1091,1093,1094,1095,1097,1099,1100,1102,1104,1109,1112,1120,1125,1140,1184,1188,1189,1190,1194,1195,1196,1197,1198,1199,1200,1203,1205,1206,1207,1208,1209,1210,1211,1213,1218,1221,1232,1233,1252,1258,1259,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1294,1295],whitespac:[40,41,42],whose:[43,843,844,847,848,857,863,864,874,899,989,996,1001,1203,1204,1205,1206,1207,1209,1211],why:[1252,1253],width:[1102,1107],wiki:1298,wikipedia:1298,window:[1102,1107,1221,1222,1223,1224,1225,1226,1227,1228,1269,1270,1271,1272,1273,1274,1275,1276],wise:[40,41,43,843,845,852,853,856,874,893,899,989,1002,1003,1018,1021,1022,1046,1048,1058,1086,1089,1091,1093,1095,1117,1118,1119,1120,1121,1123,1124,1125,1128,1129,1130,1131,1132,1134,1213,1214,1215,1216,1217,1218,1219,1220],wish:1295,with_arg_label:[1240,1242,1246,1281,1282],with_array_cach:[1240,1241,1242,1246],with_bia:[1269,1279],with_cal:[989,1014],with_default_key_color:[40,41],with_edge_label:[1240,1242,1246,1281,1282],with_entries_as_list:[40,41],with_grad:[1086,1096,1281,1282],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1140,with_output_label:[1240,1242,1246,1281,1282],with_partial_v:[1281,1282],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,435,464,989,1067,1140],with_to_kv_fn:[1269,1280],with_to_out_fn:[1269,1280],with_to_q_fn:[1269,1280],within:[15,18,19,989,992,1109,1115,1196,1200],without:[40,41,43,989,1055,1057,1063,1184,1186,1295],wonder:1252,word:[15,16,17,989,992,1196,1200,1258,1259],work:[43,1294],worker:[915,924,925,1140],worker_class:[915,924,925,1140],worker_kwarg:1140,would:[43,867,868,1213,1218,1252,1295,1298],wrap:[15,40,41,42,43,433,435,469,474,478,482,483,485,989,1001,1086,1100,1252],wrapper:43,write:[40,41,43,1252,1253,1298],written:[43,1252,1298],ws_new:[1086,1089,1091,1093,1094,1095],x1_i:[843,845,852,853,989,1018,1120,1128],x2_i:[843,845,852,853,989,1018,1120,1128],x_feat_dim:[1221,1232],x_i:[843,844,846,847,848,849,850,851,855,856,857,858],x_in:[1252,1294],x_inv:[1109,1111],x_max:[435,989,1003],x_min:[435,989,1003],x_sub:1140,xkk:1298,xkkm1:1298,xkm1km1:1298,xs0:1140,xs_t:1140,year:[1252,1298],yet:[1184,1193,1298],yield:[989,1083],you:[43,1252,1294,1295,1298],your:[1252,1253,1294,1295,1298],your_awesome_project:1295,yourself:[43,1252],yourslef:43,youtub:43,zero:[40,41,77,206,389,510,642,836,843,856,860,862,870,871,872,989,1007,1051,1053,1059,1060,1084,1085,1086,1088,1089,1093,1094,1221,1229,1252,1260,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1285,1286,1287,1288],zero_pad:[293,435,567,695,989],zeros_lik:[128,293,435,567,695,989],zip:1140,zk_e:1298},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isinf","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isinf","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isinf","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isinf","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isinf","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isinf","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1014,"function":[77,80,85,97,101,103,104,105,107,108,206,209,214,224,228,230,231,232,234,235,389,392,397,409,413,415,416,417,419,420,510,513,518,535,539,541,542,543,545,546,642,645,650,662,666,668,669,670,672,673,836,839,843,859,863,865,866,867,869,870],Ones:1265,Using:1295,abs:[294,568,696,990],aco:[784,1121],acosh:[785,1122],activ:[190,376,496,634,814,1213,1255],adam:1286,adam_step:1088,adam_upd:1089,algebra:[98,168,225,351,410,478,536,613,663,772,860],all:[109,236,421,547,674,871],all_equ:991,all_nested_indic:1185,ani:[110,237,422,548,675,872],api:[0,43,75,112,204,239,387,424,508,550,640,677,834],arang:[129,295,436,569,697,992],arg_nam:993,argmax:[130,437,570,698,994],argmin:[131,438,571,699,995],args_to_ivi:16,args_to_n:17,argsort:[106,233,418,544,671,868],arithmet:[1,113,240,425,551,678],arrai:[0,3,43,75,111,112,114,132,204,238,239,241,248,296,387,423,424,426,439,508,549,550,552,572,640,676,677,679,700,834,874,996],array_equ:[297,701,997],arrays_equ:998,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[786,1123],asinh:[86,398,519,651,844],assert_supports_inplac:999,atan2:[788,1125],atan:[787,1124],atanh:[789,1126],attribut:[5,115,242,427,553,680],backend:[43,73],bilinear_resampl:[165,348,475,610,769,1103],binary_cross_entropi:1235,bitwis:[7,116,243,428,554,681],bitwise_and:[87,215,399,520,652,845],broadcast_to:[298,702,1000],builder:51,builtin:[111,238,248,423,549,676,874],builtin_ab:[249,875],builtin_add:[250,876],builtin_and:[251,877],builtin_bool:[252,878],builtin_contain:[253,879],builtin_deepcopi:[254,880],builtin_dir:[255,881],builtin_eq:[256,882],builtin_float:[257,883],builtin_floordiv:[258,884],builtin_g:[259,885],builtin_getattr:[260,886],builtin_getattribut:[261,887],builtin_getitem:[262,888],builtin_gt:[263,889],builtin_int:[264,890],builtin_invert:[265,891],builtin_l:[266,892],builtin_lt:[267,556,683,893],builtin_mul:[268,894],builtin_n:[269,895],builtin_neg:[270,896],builtin_or:[271,897],builtin_po:[272,898],builtin_pow:[273,899],builtin_radd:[274,900],builtin_rand:[275,901],builtin_rfloordiv:[276,902],builtin_rmul:[277,903],builtin_ror:[278,904],builtin_rpow:[279,905],builtin_rsub:[280,906],builtin_rtruediv:[281,907],builtin_rxor:[282,908],builtin_setitem:[283,909],builtin_sub:[284,910],builtin_truediv:[285,911],builtin_xor:[286,912],cache_fn:1001,cast:[133,299,440,573,703,969],ceil:[216,300,521,704,846,1002],choleski:[773,1110],choose_random_framework:61,citat:1252,clear_framework_stack:62,clear_mem_on_dev:[689,931],clip:[301,705,1003],clip_matrix_norm:1004,clip_vector_norm:1005,clone:1155,clone_arrai:1156,clone_it:1157,clone_nest:1158,clonedit:1142,cloneditem:1141,clonednest:1143,closest_valid_dtyp:970,code:1298,comparison:[9,117,244,429,555,682],compil:[302,441,706,913,914,1240],compile_graph:1241,concaten:[134,303,442,574,707,1006],constant:[76,205,388,509,641,835],constant_pad:[304,575,708,1007],contain:[40,41],container_typ:[709,1008],content:1252,contribut:43,conv1d:[196,379,500,826,1222,1270],conv1d_transpos:[197,380,501,827,1223],conv1dtranspos:1271,conv2d:[198,381,502,636,828,1224,1272],conv2d_transpos:[199,382,503,829,1225],conv2dtranspos:1273,conv3d:[200,383,504,637,830,1226,1274],conv3d_transpos:[201,384,505,831,1227],conv3dtranspos:1275,convers:15,convert:[192,822,1258],convert_dtyp:971,copy_arrai:[710,1009],copy_nest:1186,core:[120,247,432,559,686,873],cos:[88,400,522,653,847],cosh:[89,401,523,654,790,848,1127],cprint:1297,creat:43,creation:[77,206,389,510,642,836],cross:[305,711,1010],cross_entropi:1236,cumprod:[135,306,443,712,1011],cumsum:[713,1012],current_framework:63,current_framework_str:[714,1013],data:[80,84,209,213,392,396,513,517,645,649,839,842],debug_mod:45,debugg:44,default_devic:932,default_dtyp:972,default_float_dtyp:973,default_int_dtyp:974,default_nod:1159,depthwise_conv2d:[202,385,506,638,832,1228],depthwiseconv2d:1276,design:43,dev:[123,289,562,690,933],dev_clon:934,dev_clone_arrai:935,dev_clone_it:936,dev_clone_nest:937,dev_dist:938,dev_dist_arrai:939,dev_dist_it:940,dev_dist_nest:941,dev_from_str:[124,290,563,691,942],dev_to_str:[125,291,564,692,943],dev_unifi:944,dev_unify_arrai:945,dev_unify_it:946,dev_unify_nest:947,dev_util:948,devclonedit:918,devcloneditem:917,devclonednest:919,devdistit:921,devdistitem:920,devdistnest:922,devic:[20,121,287,433,560,687,915],devmapp:924,devmappermultiproc:925,diagon:[99,226,411,537,664,861],distribute_nest:1160,divid:1128,document:1252,dropout:[1229,1277],dtype:[136,307,444,576,715,965,975],dtype_bit:[137,308,445,577,716,976],dtype_from_str:[138,309,446,578,717,977],dtype_to_str:[139,310,447,579,718,978],ecosystem:52,einops_rearrang:1015,einops_reduc:1016,einops_repeat:1017,einsum:[182,367,488,626,806,1204],elementwis:[85,214,397,518,650,843],equal:[524,580,719,1018],erf:[484,791,1129],execute_with_gradi:[162,343,470,605,763,1090],exist:1019,exp:[792,1130],expand_dim:[311,720,1020],finfo:[82,211,394,515,647,840],firstlayersiren:1262,flip:[102,229,414,540,667,864],float_img_to_uint8_img:1104,floor:[312,721,1021],floormod:[313,722,1022],fomaml_step:1137,fork:43,fourier_encod:1023,framework:59,full:[140,314,448,581,723,1024],func:72,gather:[141,315,449,582,724,1025],gather_nd:[142,316,450,583,725,1026],geglu:1256,gelu:[377,497,815,1214,1257],gener:[22,128,293,435,567,695,989],get_all_arrays_in_memori:1027,get_all_arrays_on_dev:949,get_framework:64,get_min_bas:1028,get_min_denomin:1029,get_num_dim:[726,1030],get_referrers_recurs:1031,global:1243,glorotuniform:1263,gpu_is_avail:[950,1161],gradient:[24,161,342,469,604,762,1086],gradient_descent_upd:1091,gradient_imag:[166,349,476,611,770,1105],graph:1246,gym:53,handler:59,has_nan:1032,helper:1248,ident:[143,317,451,584,727,1033],iinfo:[83,212,395,516,648,841],imag:[26,164,347,474,609,768,1102],index_nest:1187,indices_wher:[144,318,452,728,1034],initi:1260,inplac:[11,118,245,430,557,684],inplace_arrays_support:1035,inplace_decr:[145,319,453,585,729,1036],inplace_incr:[146,320,454,586,730,1037],inplace_upd:[147,321,455,587,731,1038],inplace_variables_support:1039,inv:[774,1111],invalid_dtyp:979,is_arrai:[148,322,456,588,732,1040],is_float_dtyp:980,is_int_dtyp:981,is_vari:[163,344,471,606,764,1092],isfinit:[90,217,402,525,655,849],isinf:[91,218,403,526,656,850],isnan:[92,219,404,527,657,851],ivi:[43,50,51,52,53,54,55,56,57,58,833,1294,1295,1298],ivymodul:[193,823],jax:74,keep:43,lamb:1287,lamb_upd:1093,lar:1288,lars_upd:1094,layer:[195,378,499,635,825,1221,1269],layer_norm:1239,layernorm:1284,leaky_relu:[816,1215],less:[93,220,405,528,658,852],less_equ:[529,853],linalg:[28,1109],linear:[98,168,225,351,410,478,536,613,663,772,860,1230,1279],linear_resampl:[149,323,457,589,733,1041],linspac:[150,324,458,590,734,1042],log1p:[530,854],log2:[94,406,531,659,855],log:[793,1131,1249],log_global_inference_abs_tim:1244,log_global_inference_rel_tim:1245,logic:[30,172,357,482,618,780,1117],logical_and:[358,781,1118],logical_not:[95,221,407,532,660,856],logical_or:[359,782,1119],logspac:[151,325,459,591,735,1043],loss:1234,lstm:1278,lstm_updat:1231,maml_step:1138,manipul:[101,228,413,539,666,863],map:1188,map_nest_at_index:1189,map_nest_at_indic:1190,match_kwarg:1044,math:[32,173,360,483,619,783,1120],matmul:[326,592,736,1045],matrix_norm:[169,352,479,614,775,1112],maximum:[737,1046],mech:54,memori:55,meshgrid:[327,738,1047],meta:[34,1136],method:[97,224,409,535,662,859],minimum:[739,1048],model:56,modul:[1281,1282,1294],multi:1140,multi_head_attent:1232,multi_index_nest:1191,multidevcontain:42,multidevit:928,multidevitem:927,multidevnest:929,multiheadattent:1280,multinodeit:1146,multinodeitem:1145,multinodenest:1147,multinomi:[175,362,486,621,799,1197],multiprocess:[740,1049],mxnet:203,nativ:1294,nest:1184,nested_indices_wher:1192,nested_map:1193,network:1294,next:1252,node:[1140,1162],node_dist:1163,node_dist_arrai:1164,node_dist_it:1165,node_str:1166,node_to_str:1167,node_util:1168,nodedistit:1149,nodedistitem:1148,nodedistnest:1150,nodemapp:1152,nodemappermultiproc:1153,norm:[1238,1283],num_arrays_in_memori:1050,num_arrays_on_dev:951,num_cpu_cor:952,num_gpu:[126,953,1169],numpi:386,nutshel:1252,one_hot:[152,460,593,741,1051],ones:[78,207,390,511,643,837,1052],ones_lik:[153,328,461,594,742,1053],oper:[1,3,7,9,11,13,43,113,114,116,117,118,119,240,241,243,244,245,246,425,426,428,429,430,431,551,552,554,555,557,558,678,679,681,682,684,685],optim:[1285,1289],optimizer_upd:1095,overview:1252,param:1250,percent_used_mem_on_dev:954,percent_used_mem_on_nod:1170,pinv:[353,776,1113],portabl:1298,print_all_arrays_in_memori:1054,print_all_arrays_on_dev:955,profil:[122,288,434,561,688,930,1154],pull:43,queue_timeout:1055,randint:[176,363,622,800,1198],random:[36,174,361,485,620,798,1196],random_crop:1106,random_norm:[177,364,623,801,1199],random_uniform:[178,365,624,802,1200],reduce_max:[183,368,489,627,807,1205],reduce_mean:[184,369,490,628,808,1206],reduce_min:[185,370,491,629,809,1207],reduce_prod:[186,371,492,630,810,1208],reduce_std:[372,1209],reduce_sum:[187,373,493,631,811,1210],reduce_var:[188,374,494,632,812,1211],reduct:[38,181,366,487,625,805,1203],reflect:[13,119,246,431,558,685],relu:[817,1216],repeat:[329,743,1056],reptile_step:1139,request:43,reshap:[744,1057],robot:57,round:[330,745,1058],run:1295,scaled_dot_product_attent:1233,scatter_flat:[154,331,462,595,746,1059],scatter_nd:[155,332,463,596,747,1060],search:[103,230,415,541,668,865],seed:[179,803,1201],sequenti:[1291,1292],set:[104,231,416,542,669,866],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:956,set_default_dtyp:982,set_default_float_dtyp:983,set_default_int_dtyp:984,set_default_nod:1171,set_exception_debug_mod:48,set_framework:65,set_min_bas:1061,set_min_denomin:1062,set_nest_at_index:1194,set_nest_at_indic:1195,set_queue_timeout:1063,set_split_factor:[957,1172],set_tmp_dir:1064,set_with_grad:1096,sgd:1290,shape:[748,1065],shape_to_tupl:1066,show_graph:1242,shuffl:[180,804,1202],sigmoid:[818,1217],signatur:[97,224,409,535,662,859],sin:[222,533,794,857,1132],sinh:[795,1133],siren:1266,softmax:[191,498,819,1218],softplu:[820,1219],sort:[105,232,417,543,670,867],sparse_cross_entropi:1237,split:[156,333,464,597,749,1067],split_factor:[958,1173],split_func_cal:[959,1174],sqrt:[96,223,408,534,661,858],squeez:[157,334,465,598,750,1068],stable_divid:1069,stable_pow:1070,stack:[335,751,1071],stack_imag:[167,350,477,612,771,1107],standard:43,statist:[107,234,419,545,672,869],stop_gradi:[345,472,607,765,1097],str_to_nod:1175,submodul:43,supports_inplac:1072,svd:[355,616,778,1115],swapax:[599,752,1073],tan:[796,1134],tanh:[797,821,1135,1220],tensorflow:507,tile:[336,600,753,1074],tmp_dir:1075,to_dev:[127,292,565,693,960],to_ivi:18,to_ivy_modul:[194,824,1259],to_list:[754,1076],to_n:19,to_nod:1176,to_numpi:[755,1077],to_scalar:[756,1078],torch:639,total_mem_on_dev:961,total_mem_on_nod:1177,tpu_is_avail:[566,694,962,1178],train:1294,trainabl:1294,transpos:[158,337,466,757,1079],tree:1252,try_else_non:1080,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,209,213,392,396,513,517,645,649,839,842],uint8_img_to_float_img:1108,unifi:1179,unify_arrai:1180,unify_it:1181,unify_nest:1182,unset_debug_mod:49,unset_default_devic:963,unset_default_dtyp:985,unset_default_float_dtyp:986,unset_default_int_dtyp:987,unset_framework:71,unset_with_grad:1098,unstack:[159,338,467,601,758,1081],updat:43,used_mem_on_dev:964,used_mem_on_nod:1183,util:[108,235,420,546,673,870],valid_dtyp:988,value_is_nan:1082,variabl:[346,473,608,766,1099],variable_data:[767,1100],vector_norm:[100,227,412,538,665,862],vector_to_skew_symmetric_matrix:[171,356,481,617,779,1116],verbos:1296,vision:58,where:[339,759,1083,1252],why:1298,with_grad:1101,wrapper:72,write:1295,your:43,zero:[79,208,391,512,644,838,1268],zero_pad:[340,602,760,1084],zeros_lik:[160,341,468,603,761,1085]}})